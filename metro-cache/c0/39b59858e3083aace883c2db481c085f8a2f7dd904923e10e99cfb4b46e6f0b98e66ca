{"dependencies":[{"name":"./AnimatedNode","isAsync":false},{"name":"../NativeAnimatedHelper","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  var AnimatedNode = _$$_REQUIRE(_dependencyMap[0], './AnimatedNode');\n\n  var NativeAnimatedHelper = _$$_REQUIRE(_dependencyMap[1], '../NativeAnimatedHelper');\n\n  var AnimatedWithChildren = function (_AnimatedNode) {\n    function AnimatedWithChildren() {\n      var _this;\n\n      _classCallCheck(this, AnimatedWithChildren);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedWithChildren).call(this));\n      _this._children = [];\n      return _this;\n    }\n\n    _createClass(AnimatedWithChildren, [{\n      key: \"__makeNative\",\n      value: function __makeNative() {\n        if (!this.__isNative) {\n          this.__isNative = true;\n\n          for (var _iterator = this._children, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n            var _ref;\n\n            if (_isArray) {\n              if (_i >= _iterator.length) break;\n              _ref = _iterator[_i++];\n            } else {\n              _i = _iterator.next();\n              if (_i.done) break;\n              _ref = _i.value;\n            }\n\n            var _child = _ref;\n\n            _child.__makeNative();\n\n            NativeAnimatedHelper.API.connectAnimatedNodes(this.__getNativeTag(), _child.__getNativeTag());\n          }\n        }\n      }\n    }, {\n      key: \"__addChild\",\n      value: function __addChild(child) {\n        if (this._children.length === 0) {\n          this.__attach();\n        }\n\n        this._children.push(child);\n\n        if (this.__isNative) {\n          child.__makeNative();\n\n          NativeAnimatedHelper.API.connectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());\n        }\n      }\n    }, {\n      key: \"__removeChild\",\n      value: function __removeChild(child) {\n        var index = this._children.indexOf(child);\n\n        if (index === -1) {\n          console.warn(\"Trying to remove a child that doesn't exist\");\n          return;\n        }\n\n        if (this.__isNative && child.__isNative) {\n          NativeAnimatedHelper.API.disconnectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());\n        }\n\n        this._children.splice(index, 1);\n\n        if (this._children.length === 0) {\n          this.__detach();\n        }\n      }\n    }, {\n      key: \"__getChildren\",\n      value: function __getChildren() {\n        return this._children;\n      }\n    }]);\n\n    _inherits(AnimatedWithChildren, _AnimatedNode);\n\n    return AnimatedWithChildren;\n  }(AnimatedNode);\n\n  module.exports = AnimatedWithChildren;\n});","map":[[2,0,10,0],[20,0,12,0],[20,6,12,6,"AnimatedNode"],[20,21,12,21,"require"],[20,52,12,29],[20,68,12,21],[20,69,12,0],[22,0,13,0],[22,6,13,6,"NativeAnimatedHelper"],[22,29,13,29,"require"],[22,60,13,37],[22,85,13,29],[22,86,13,0],[24,6,15,6,"AnimatedWithChildren"],[24,26],[25,0,18,2],[25,36,18,16],[26,0,18,16],[28,0,18,16],[30,0,19,4],[31,0,20,4],[31,12,20,9,"_children"],[31,21,20,4],[31,24,20,21],[31,26,20,4],[32,0,18,16],[33,0,21,3],[37,37,23,17],[38,0,24,4],[38,12,24,8],[38,13,24,9],[38,18,24,14,"__isNative"],[38,28,24,4],[38,30,24,26],[39,0,25,6],[39,15,25,11,"__isNative"],[39,25,25,6],[39,28,25,24],[39,32,25,6],[41,0,26,6],[41,31,26,26],[41,36,26,31,"_children"],[41,45,26,6],[41,205,26,42],[42,0,26,42],[44,0,26,42],[45,0,26,42],[46,0,26,42],[47,0,26,42],[48,0,26,42],[49,0,26,42],[50,0,26,42],[51,0,26,42],[53,0,26,42],[53,16,26,17,"child"],[53,22,26,42],[55,0,27,8,"child"],[55,19,27,14,"__makeNative"],[55,31,27,8],[57,0,28,8,"NativeAnimatedHelper"],[57,33,28,29,"API"],[57,36,28,8],[57,37,28,33,"connectAnimatedNodes"],[57,57,28,8],[57,58,29,10],[57,63,29,15,"__getNativeTag"],[57,77,29,10],[57,79,28,8],[57,81,30,10,"child"],[57,88,30,16,"__getNativeTag"],[57,102,30,10],[57,104,28,8],[58,0,32,7],[59,0,33,5],[60,0,34,3],[63,33,36,13,"child"],[63,38],[63,40,36,40],[64,0,37,4],[64,12,37,8],[64,17,37,13,"_children"],[64,26,37,8],[64,27,37,23,"length"],[64,33,37,8],[64,38,37,34],[64,39,37,4],[64,41,37,37],[65,0,38,6],[65,15,38,11,"__attach"],[65,23,38,6],[66,0,39,5],[68,0,40,4],[68,13,40,9,"_children"],[68,22,40,4],[68,23,40,19,"push"],[68,27,40,4],[68,28,40,24,"child"],[68,33,40,4],[70,0,41,4],[70,12,41,8],[70,17,41,13,"__isNative"],[70,27,41,4],[70,29,41,25],[71,0,43,6,"child"],[71,16,43,12,"__makeNative"],[71,28,43,6],[73,0,44,6,"NativeAnimatedHelper"],[73,31,44,27,"API"],[73,34,44,6],[73,35,44,31,"connectAnimatedNodes"],[73,55,44,6],[73,56,45,8],[73,61,45,13,"__getNativeTag"],[73,75,45,8],[73,77,44,6],[73,79,46,8,"child"],[73,85,46,14,"__getNativeTag"],[73,99,46,8],[73,101,44,6],[74,0,48,5],[75,0,49,3],[78,36,51,16,"child"],[78,41],[78,43,51,43],[79,0,52,4],[79,12,52,10,"index"],[79,20,52,18],[79,25,52,23,"_children"],[79,34,52,18],[79,35,52,33,"indexOf"],[79,42,52,18],[79,43,52,41,"child"],[79,48,52,18],[79,49,52,4],[81,0,53,4],[81,12,53,8,"index"],[81,22,53,18],[81,23,53,19],[81,24,53,4],[81,26,53,22],[82,0,54,6,"console"],[82,18,54,14,"warn"],[82,22,54,6],[82,23,54,19],[82,68,54,6],[83,0,55,6],[84,0,56,5],[86,0,57,4],[86,12,57,8],[86,17,57,13,"__isNative"],[86,27,57,8],[86,31,57,27,"child"],[86,37,57,33,"__isNative"],[86,47,57,4],[86,49,57,45],[87,0,58,6,"NativeAnimatedHelper"],[87,31,58,27,"API"],[87,34,58,6],[87,35,58,31,"disconnectAnimatedNodes"],[87,58,58,6],[87,59,59,8],[87,64,59,13,"__getNativeTag"],[87,78,59,8],[87,80,58,6],[87,82,60,8,"child"],[87,88,60,14,"__getNativeTag"],[87,102,60,8],[87,104,58,6],[88,0,62,5],[90,0,63,4],[90,13,63,9,"_children"],[90,22,63,4],[90,23,63,19,"splice"],[90,29,63,4],[90,30,63,26,"index"],[90,35,63,4],[90,37,63,33],[90,38,63,4],[92,0,64,4],[92,12,64,8],[92,17,64,13,"_children"],[92,26,64,8],[92,27,64,23,"length"],[92,33,64,8],[92,38,64,34],[92,39,64,4],[92,41,64,37],[93,0,65,6],[93,15,65,11,"__detach"],[93,23,65,6],[94,0,66,5],[95,0,67,3],[98,38,69,39],[99,0,70,4],[99,15,70,11],[99,20,70,16,"_children"],[99,29,70,4],[100,0,71,3],[106,4,15,35,"AnimatedNode"],[106,16],[108,0,74,0,"module"],[108,9,74,7,"exports"],[108,16,74,0],[108,19,74,17,"AnimatedWithChildren"],[108,39,74,0]]},"type":"js/module"}]}