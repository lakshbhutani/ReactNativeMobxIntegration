{"dependencies":[{"name":"react","isAsync":false},{"name":"./../react-transform-hmr/lib/index.js","isAsync":false},{"name":"react-native","isAsync":false},{"name":"prop-types","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"prop-types\"));\n\n  var _class,\n      _temp2,\n      _jsxFileName = \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/toggle-switch-react-native/ToggleSwitch.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  var _components = {\n    ToggleSwitch: {\n      displayName: \"ToggleSwitch\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/toggle-switch-react-native/ToggleSwitch.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var ToggleSwitch = _wrapComponent(\"ToggleSwitch\")((_temp2 = _class = function (_React$Component) {\n    function ToggleSwitch() {\n      var _getPrototypeOf2;\n\n      var _temp, _this;\n\n      _classCallCheck(this, ToggleSwitch);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ToggleSwitch)).call.apply(_getPrototypeOf2, [this].concat(args))), _this.offsetX = new _reactNative.Animated.Value(0), _this.dimensions = ToggleSwitch.calculateDimensions(_this.props.size), _this.createToggleSwitchStyle = function () {\n        return {\n          justifyContent: 'center',\n          width: _this.dimensions.width,\n          borderRadius: 20,\n          padding: _this.dimensions.padding,\n          backgroundColor: _this.props.isOn ? _this.props.onColor : _this.props.offColor\n        };\n      }, _this.createInsideCercleStyle = function () {\n        return {\n          margin: 4,\n          position: 'absolute',\n          backgroundColor: 'white',\n          transform: [{\n            translateX: _this.offsetX\n          }],\n          width: _this.dimensions.cercleWidth,\n          height: _this.dimensions.cercleHeight,\n          borderRadius: _this.dimensions.cercleWidth / 2\n        };\n      }, _temp));\n    }\n\n    _createClass(ToggleSwitch, [{\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        var toValue = this.props.isOn ? this.dimensions.width - this.dimensions.translateX : 0;\n\n        _reactNative.Animated.timing(this.offsetX, {\n          toValue: toValue,\n          duration: 300\n        }).start();\n\n        return _react.default.createElement(_reactNative.View, {\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          }\n        }, this.props.label ? _react.default.createElement(_reactNative.Text, {\n          style: [styles.labelStyle, this.props.labelStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          }\n        }, this.props.label) : null, _react.default.createElement(_reactNative.TouchableOpacity, {\n          style: this.createToggleSwitchStyle(),\n          activeOpacity: 0.8,\n          onPress: function onPress() {\n            _this2.props.onToggle(!_this2.props.isOn);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          }\n        }, _react.default.createElement(_reactNative.Animated.View, {\n          style: this.createInsideCercleStyle(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          }\n        })));\n      }\n    }], [{\n      key: \"calculateDimensions\",\n      value: function calculateDimensions(size) {\n        switch (size) {\n          case 'small':\n            return {\n              width: 50,\n              padding: 10,\n              cercleWidth: 15,\n              cercleHeight: 15,\n              translateX: 22\n            };\n\n          case 'large':\n            return {\n              width: 100,\n              padding: 20,\n              cercleWidth: 30,\n              cercleHeight: 30,\n              translateX: 38\n            };\n\n          default:\n            return {\n              width: 60,\n              padding: 12,\n              cercleWidth: 18,\n              cercleHeight: 18,\n              translateX: 26\n            };\n        }\n      }\n    }]);\n\n    _inherits(ToggleSwitch, _React$Component);\n\n    return ToggleSwitch;\n  }(_react.default.Component), _class.propTypes = {\n    isOn: _propTypes.default.bool.isRequired,\n    label: _propTypes.default.string,\n    onColor: _propTypes.default.string.isRequired,\n    offColor: _propTypes.default.string.isRequired,\n    size: _propTypes.default.string,\n    labelStyle: _propTypes.default.object,\n    onToggle: _propTypes.default.func.isRequired\n  }, _class.defaultProps = {\n    isOn: false,\n    onColor: '#634fc9',\n    offColor: '#ecf0f1',\n    size: 'medium',\n    labelStyle: {}\n  }, _temp2));\n\n  var _default2 = ToggleSwitch;\n  exports.default = _default2;\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    labelStyle: {\n      marginHorizontal: 10\n    }\n  });\n});","map":[[7,0,10,0],[11,0,11,0],[13,0,19,0],[68,206,57,2,"offsetX"],[68,213],[68,216,57,12],[68,220,57,16,"Animated"],[68,242,57,25,"Value"],[68,247,57,12],[68,248,57,31],[68,249,57,12],[68,250],[68,258,58,2,"dimensions"],[68,268],[68,271,58,15,"ToggleSwitch"],[68,284,58,28,"calculateDimensions"],[68,303,58,15],[68,304,58,48],[68,310,58,53,"props"],[68,315,58,48],[68,316,58,59,"size"],[68,320,58,15],[68,321],[68,329,60,2,"createToggleSwitchStyle"],[68,352],[68,355,60,28],[69,0,60,28],[69,15,60,35],[70,0,61,4,"justifyContent"],[70,26,61,20],[70,34,60,35],[71,0,62,4,"width"],[71,17,62,11],[71,23,62,16,"dimensions"],[71,33,62,11],[71,34,62,27,"width"],[71,39,60,35],[72,0,63,4,"borderRadius"],[72,24,63,18],[72,26,60,35],[73,0,64,4,"padding"],[73,19,64,13],[73,25,64,18,"dimensions"],[73,35,64,13],[73,36,64,29,"padding"],[73,43,60,35],[74,0,65,4,"backgroundColor"],[74,27,65,22],[74,33,65,27,"props"],[74,38,65,22],[74,39,65,33,"isOn"],[74,43,65,21],[74,46,65,41],[74,52,65,46,"props"],[74,57,65,41],[74,58,65,52,"onColor"],[74,65,65,21],[74,68,65,62],[74,74,65,67,"props"],[74,79,65,62],[74,80,65,73,"offColor"],[75,0,60,35],[75,9,60,28],[76,0,60,28],[76,7],[76,15,68,2,"createInsideCercleStyle"],[76,38],[76,41,68,28],[77,0,68,28],[77,15,68,35],[78,0,69,4,"margin"],[78,18,69,12],[78,19,68,35],[79,0,70,4,"position"],[79,20,70,14],[79,30,68,35],[80,0,71,4,"backgroundColor"],[80,27,71,21],[80,34,68,35],[81,0,72,4,"transform"],[81,21,72,15],[81,22,72,16],[82,0,72,18,"translateX"],[82,24,72,30],[82,30,72,35,"offsetX"],[83,0,72,16],[83,11,72,15],[83,12,68,35],[84,0,73,4,"width"],[84,17,73,11],[84,23,73,16,"dimensions"],[84,33,73,11],[84,34,73,27,"cercleWidth"],[84,45,68,35],[85,0,74,4,"height"],[85,18,74,12],[85,24,74,17,"dimensions"],[85,34,74,12],[85,35,74,28,"cercleHeight"],[85,47,68,35],[86,0,75,4,"borderRadius"],[86,24,75,19],[86,30,75,24,"dimensions"],[86,40,75,19],[86,41,75,35,"cercleWidth"],[86,52,75,19],[86,55,75,49],[87,0,68,35],[87,9,68,28],[88,0,68,28],[88,7],[93,31,78,11],[94,0,78,11],[96,0,79,4],[96,12,79,10,"toValue"],[96,22,79,20],[96,27,79,25,"props"],[96,32,79,20],[96,33,79,31,"isOn"],[96,37,79,20],[96,40,80,8],[96,45,80,13,"dimensions"],[96,55,80,8],[96,56,80,24,"width"],[96,61,80,8],[96,64,80,32],[96,69,80,37,"dimensions"],[96,79,80,32],[96,80,80,48,"translateX"],[96,90,79,20],[96,93,81,8],[96,94,79,4],[98,0,83,4,"Animated"],[98,30,83,13,"timing"],[98,36,83,4],[98,37,84,6],[98,42,84,11,"offsetX"],[98,49,83,4],[98,51,85,6],[99,0,86,8,"toValue"],[99,26,85,6],[100,0,87,8,"duration"],[100,20,87,18],[101,0,85,6],[101,9,83,4],[101,11,89,6,"start"],[101,16,83,4],[103,0,91,4],[103,15,92,6],[103,44,92,7],[103,61,92,6],[104,0,92,12],[104,17,92,19,"styles"],[104,24,92,26,"container"],[104,33,92,6],[105,0,92,6],[106,0,92,6],[107,0,92,6],[108,0,92,6],[109,0,92,6],[109,11,93,10],[109,16,93,15,"props"],[109,21,93,10],[109,22,93,21,"label"],[109,27,93,9],[109,30,94,12],[109,59,94,13],[109,76,94,12],[110,0,94,18],[110,17,94,25],[110,18,94,26,"styles"],[110,25,94,33,"labelStyle"],[110,35,94,25],[110,37,94,45],[110,42,94,50,"props"],[110,47,94,45],[110,48,94,56,"labelStyle"],[110,58,94,25],[110,59,94,12],[111,0,94,12],[112,0,94,12],[113,0,94,12],[114,0,94,12],[115,0,94,12],[115,11,94,70],[115,16,94,75,"props"],[115,21,94,70],[115,22,94,81,"label"],[115,27,94,12],[115,28,93,9],[115,31,95,12],[115,35,92,6],[115,37,97,8],[115,66,97,9],[115,95,97,8],[116,0,98,10],[116,17,98,17],[116,22,98,22,"createToggleSwitchStyle"],[116,45,98,17],[116,47,97,8],[117,0,99,10],[117,25,99,25],[117,28,97,8],[118,0,100,10],[118,19,100,19],[118,38,100,25],[119,0,101,12],[119,19,101,17,"props"],[119,24,101,12],[119,25,101,23,"onToggle"],[119,33,101,12],[119,34,101,32],[119,35,101,33],[119,42,101,38,"props"],[119,47,101,33],[119,48,101,44,"isOn"],[119,52,101,12],[120,0,102,11],[120,11,97,8],[121,0,97,8],[122,0,97,8],[123,0,97,8],[124,0,97,8],[125,0,97,8],[125,11,104,10],[125,40,104,11],[125,61,104,10],[125,62,104,20],[125,66,104,10],[126,0,104,25],[126,17,104,32],[126,22,104,37,"createInsideCercleStyle"],[126,45,104,32],[126,47,104,10],[127,0,104,10],[128,0,104,10],[129,0,104,10],[130,0,104,10],[131,0,104,10],[131,10,97,8],[131,11,92,6],[131,12,91,4],[132,0,108,3],[135,42,22,29,"size"],[135,46],[135,48,22,35],[136,0,23,4],[136,16,23,12,"size"],[136,20,23,4],[137,0,24,6],[137,15,24,11],[137,22,24,6],[138,0,25,8],[138,19,25,16],[139,0,26,10,"width"],[139,21,26,17],[139,23,25,16],[140,0,26,21,"padding"],[140,23,26,30],[140,25,25,16],[141,0,26,34,"cercleWidth"],[141,27,26,47],[141,29,25,16],[142,0,26,51,"cercleHeight"],[142,28,26,65],[142,30,25,16],[143,0,26,69,"translateX"],[143,26,26,81],[144,0,25,16],[144,13,25,8],[146,0,28,6],[146,15,28,11],[146,22,28,6],[147,0,29,8],[147,19,29,16],[148,0,30,10,"width"],[148,21,30,17],[148,24,29,16],[149,0,30,22,"padding"],[149,23,30,31],[149,25,29,16],[150,0,30,35,"cercleWidth"],[150,27,30,48],[150,29,29,16],[151,0,30,52,"cercleHeight"],[151,28,30,66],[151,30,29,16],[152,0,30,70,"translateX"],[152,26,30,82],[153,0,29,16],[153,13,29,8],[155,0,32,6],[156,0,33,8],[156,19,33,16],[157,0,34,10,"width"],[157,21,34,17],[157,23,33,16],[158,0,34,21,"padding"],[158,23,34,30],[158,25,33,16],[159,0,34,34,"cercleWidth"],[159,27,34,47],[159,29,33,16],[160,0,34,51,"cercleHeight"],[160,28,34,65],[160,30,33,16],[161,0,34,69,"translateX"],[161,26,34,81],[162,0,33,16],[162,13,33,8],[163,0,23,4],[164,0,37,3],[170,4,21,42,"React"],[170,19,21,48,"Component"],[170,28],[170,38,39,9,"propTypes"],[170,47],[170,50,39,21],[171,0,40,4,"isOn"],[171,10,40,10,"PropTypes"],[171,29,40,20,"bool"],[171,33,40,10],[171,34,40,25,"isRequired"],[171,44,39,21],[172,0,41,4,"label"],[172,11,41,11,"PropTypes"],[172,30,41,21,"string"],[172,36,39,21],[173,0,42,4,"onColor"],[173,13,42,13,"PropTypes"],[173,32,42,23,"string"],[173,38,42,13],[173,39,42,30,"isRequired"],[173,49,39,21],[174,0,43,4,"offColor"],[174,14,43,14,"PropTypes"],[174,33,43,24,"string"],[174,39,43,14],[174,40,43,31,"isRequired"],[174,50,39,21],[175,0,44,4,"size"],[175,10,44,10,"PropTypes"],[175,29,44,20,"string"],[175,35,39,21],[176,0,45,4,"labelStyle"],[176,16,45,16,"PropTypes"],[176,35,45,26,"object"],[176,41,39,21],[177,0,46,4,"onToggle"],[177,14,46,14,"PropTypes"],[177,33,46,24,"func"],[177,37,46,14],[177,38,46,29,"isRequired"],[178,0,39,21],[178,3],[178,12,49,9,"defaultProps"],[178,24],[178,27,49,24],[179,0,50,4,"isOn"],[179,10,50,11],[179,15,49,24],[180,0,51,4,"onColor"],[180,13,51,13],[180,22,49,24],[181,0,52,4,"offColor"],[181,14,52,14],[181,23,49,24],[182,0,53,4,"size"],[182,10,53,10],[182,18,49,24],[183,0,54,4,"labelStyle"],[183,16,54,16],[184,0,49,24],[184,3],[189,0,111,0],[189,6,111,6,"styles"],[189,15,111,15,"StyleSheet"],[189,39,111,26,"create"],[189,45,111,15],[189,46,111,33],[190,0,112,2,"container"],[190,15,112,13],[191,0,113,4,"flexDirection"],[191,21,113,19],[191,26,112,13],[192,0,114,4,"alignItems"],[192,18,114,16],[193,0,112,13],[193,5,111,33],[194,0,116,2,"labelStyle"],[194,16,116,14],[195,0,117,4,"marginHorizontal"],[195,24,117,22],[196,0,116,14],[197,0,111,33],[197,3,111,15],[197,4,111,0]]},"type":"js/module"}]}