{"dependencies":[{"name":"Blob","isAsync":false},{"name":"BlobRegistry","isAsync":false},{"name":"NativeModules","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  var Blob = _$$_REQUIRE(_dependencyMap[0], 'Blob');\n\n  var BlobRegistry = _$$_REQUIRE(_dependencyMap[1], 'BlobRegistry');\n\n  var _require = _$$_REQUIRE(_dependencyMap[2], 'NativeModules'),\n      BlobModule = _require.BlobModule;\n\n  function uuidv4() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n      var r = Math.random() * 16 | 0,\n          v = c == 'x' ? r : r & 0x3 | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  var BlobManager = function () {\n    function BlobManager() {\n      _classCallCheck(this, BlobManager);\n    }\n\n    _createClass(BlobManager, null, [{\n      key: \"createFromParts\",\n      value: function createFromParts(parts, options) {\n        var blobId = uuidv4();\n        var items = parts.map(function (part) {\n          if (part instanceof ArrayBuffer || global.ArrayBufferView && part instanceof global.ArrayBufferView) {\n            throw new Error(\"Creating blobs from 'ArrayBuffer' and 'ArrayBufferView' are not supported\");\n          }\n\n          if (part instanceof Blob) {\n            return {\n              data: part.data,\n              type: 'blob'\n            };\n          } else {\n            return {\n              data: String(part),\n              type: 'string'\n            };\n          }\n        });\n        var size = items.reduce(function (acc, curr) {\n          if (curr.type === 'string') {\n            return acc + global.unescape(encodeURI(curr.data)).length;\n          } else {\n            return acc + curr.data.size;\n          }\n        }, 0);\n        BlobModule.createFromParts(items, blobId);\n        return BlobManager.createFromOptions({\n          blobId: blobId,\n          offset: 0,\n          size: size,\n          type: options ? options.type : '',\n          lastModified: options ? options.lastModified : Date.now()\n        });\n      }\n    }, {\n      key: \"createFromOptions\",\n      value: function createFromOptions(options) {\n        BlobRegistry.register(options.blobId);\n        return _extends(Object.create(Blob.prototype), {\n          data: options\n        });\n      }\n    }, {\n      key: \"release\",\n      value: function release(blobId) {\n        BlobRegistry.unregister(blobId);\n\n        if (BlobRegistry.has(blobId)) {\n          return;\n        }\n\n        BlobModule.release(blobId);\n      }\n    }, {\n      key: \"addNetworkingHandler\",\n      value: function addNetworkingHandler() {\n        BlobModule.addNetworkingHandler();\n      }\n    }, {\n      key: \"addWebSocketHandler\",\n      value: function addWebSocketHandler(socketId) {\n        BlobModule.addWebSocketHandler(socketId);\n      }\n    }, {\n      key: \"removeWebSocketHandler\",\n      value: function removeWebSocketHandler(socketId) {\n        BlobModule.removeWebSocketHandler(socketId);\n      }\n    }, {\n      key: \"sendOverSocket\",\n      value: function sendOverSocket(blob, socketId) {\n        BlobModule.sendOverSocket(blob.data, socketId);\n      }\n    }]);\n\n    return BlobManager;\n  }();\n\n  BlobManager.isAvailable = !!BlobModule;\n  module.exports = BlobManager;\n});","map":[[2,0,11,0],[12,0,13,0],[12,6,13,6,"Blob"],[12,13,13,13,"require"],[12,44,13,21],[12,50,13,13],[12,51,13,0],[14,0,14,0],[14,6,14,6,"BlobRegistry"],[14,21,14,21,"require"],[14,52,14,29],[14,66,14,21],[14,67,14,0],[16,17,15,21,"require"],[16,48,15,29],[16,63,15,21],[16,64],[17,6,15,7,"BlobModule"],[17,16],[17,28,15,7,"BlobModule"],[17,38],[19,0,26,0],[19,11,26,9,"uuidv4"],[19,17,26,0],[19,20,26,26],[20,0,27,2],[20,11,27,9],[20,50,27,48,"replace"],[20,57,27,9],[20,58,27,56],[20,65,27,9],[20,67,27,65],[20,80,27,70],[21,0,28,4],[21,10,28,10,"r"],[21,14,28,15,"Math"],[21,19,28,20,"random"],[21,25,28,15],[21,30,28,31],[21,32,28,14],[21,35,28,37],[21,36,28,4],[22,0,28,4],[22,10,29,6,"v"],[22,14,29,10,"c"],[22,19,29,15],[22,22,29,10],[22,25,29,21,"r"],[22,26,29,10],[22,29,29,26,"r"],[22,33,29,30],[22,36,29,25],[22,39,29,37],[22,42,28,4],[23,0,30,4],[23,13,30,11,"v"],[23,15,30,13,"toString"],[23,23,30,11],[23,24,30,22],[23,26,30,11],[23,27,30,4],[24,0,31,3],[24,5,27,9],[24,6,27,2],[25,0,32,1],[27,6,37,6,"BlobManager"],[27,17],[34,38,47,4,"parts"],[34,43],[34,45,48,4,"options"],[34,52],[34,54,49,10],[35,0,50,4],[35,12,50,10,"blobId"],[35,21,50,19,"uuidv4"],[35,29,50,4],[36,0,51,4],[36,12,51,10,"items"],[36,20,51,18,"parts"],[36,26,51,24,"map"],[36,29,51,18],[36,30,51,28],[36,46,51,36],[37,0,52,6],[37,14,53,8,"part"],[37,30,53,24,"ArrayBuffer"],[37,41,53,8],[37,45,54,9,"global"],[37,52,54,16,"ArrayBufferView"],[37,67,54,9],[37,71,54,35,"part"],[37,87,54,51,"global"],[37,94,54,58,"ArrayBufferView"],[37,109,52,6],[37,111,55,8],[38,0,56,8],[38,18,56,14],[38,22,56,18,"Error"],[38,27,56,14],[38,28,57,10],[38,103,56,14],[38,104,56,8],[39,0,59,7],[41,0,60,6],[41,14,60,10,"part"],[41,30,60,26,"Blob"],[41,34,60,6],[41,36,60,32],[42,0,61,8],[42,19,61,15],[43,0,62,10,"data"],[43,20,62,16,"part"],[43,25,62,21,"data"],[43,29,61,15],[44,0,63,10,"type"],[44,20,63,16],[45,0,61,15],[45,13,61,8],[46,0,65,7],[46,11,60,6],[46,17,65,13],[47,0,66,8],[47,19,66,15],[48,0,67,10,"data"],[48,20,67,16,"String"],[48,27,67,23,"part"],[48,31,67,16],[48,32,66,15],[49,0,68,10,"type"],[49,20,68,16],[50,0,66,15],[50,13,66,8],[51,0,70,7],[52,0,71,5],[52,9,51,18],[52,10,51,4],[53,0,72,4],[53,12,72,10,"size"],[53,19,72,17,"items"],[53,25,72,23,"reduce"],[53,31,72,17],[53,32,72,30],[53,42,72,31,"acc"],[53,45,72,30],[53,47,72,36,"curr"],[53,51,72,30],[53,53,72,45],[54,0,73,6],[54,14,73,10,"curr"],[54,19,73,15,"type"],[54,23,73,10],[54,28,73,24],[54,36,73,6],[54,38,73,34],[55,0,74,8],[55,19,74,15,"acc"],[55,25,74,21,"global"],[55,32,74,28,"unescape"],[55,40,74,21],[55,41,74,37,"encodeURI"],[55,51,74,47,"curr"],[55,56,74,52,"data"],[55,60,74,37],[55,61,74,21],[55,63,74,59,"length"],[55,69,74,8],[56,0,75,7],[56,11,73,6],[56,17,75,13],[57,0,76,8],[57,19,76,15,"acc"],[57,25,76,21,"curr"],[57,30,76,26,"data"],[57,34,76,21],[57,35,76,31,"size"],[57,39,76,8],[58,0,77,7],[59,0,78,5],[59,9,72,17],[59,11,78,7],[59,12,72,17],[59,13,72,4],[60,0,80,4,"BlobModule"],[60,19,80,15,"createFromParts"],[60,34,80,4],[60,35,80,31,"items"],[60,40,80,4],[60,42,80,38,"blobId"],[60,48,80,4],[61,0,82,4],[61,15,82,11,"BlobManager"],[61,27,82,23,"createFromOptions"],[61,44,82,11],[61,45,82,41],[62,0,83,6,"blobId"],[62,24,82,41],[63,0,84,6,"offset"],[63,18,84,14],[63,19,82,41],[64,0,85,6,"size"],[64,20,82,41],[65,0,86,6,"type"],[65,16,86,12,"options"],[65,26,86,22,"options"],[65,34,86,30,"type"],[65,38,86,12],[65,41,86,37],[65,43,82,41],[66,0,87,6,"lastModified"],[66,24,87,20,"options"],[66,34,87,30,"options"],[66,42,87,38,"lastModified"],[66,54,87,20],[66,57,87,53,"Date"],[66,62,87,58,"now"],[66,65,87,53],[67,0,82,41],[67,9,82,11],[67,10,82,4],[68,0,89,3],[71,40,95,27,"options"],[71,47],[71,49,95,52],[72,0,96,4,"BlobRegistry"],[72,21,96,17,"register"],[72,29,96,4],[72,30,96,26,"options"],[72,38,96,34,"blobId"],[72,44,96,4],[73,0,97,4],[73,15,97,11],[73,24,97,25,"Object"],[73,31,97,32,"create"],[73,37,97,25],[73,38,97,39,"Blob"],[73,43,97,44,"prototype"],[73,52,97,25],[73,53,97,11],[73,55,97,56],[74,0,97,57,"data"],[74,16,97,63,"options"],[75,0,97,56],[75,9,97,11],[75,10,97,4],[76,0,98,3],[79,30,103,17,"blobId"],[79,36],[79,38,103,39],[80,0,104,4,"BlobRegistry"],[80,21,104,17,"unregister"],[80,31,104,4],[80,32,104,28,"blobId"],[80,38,104,4],[82,0,105,4],[82,12,105,8,"BlobRegistry"],[82,25,105,21,"has"],[82,28,105,8],[82,29,105,25,"blobId"],[82,35,105,8],[82,36,105,4],[82,38,105,34],[83,0,106,6],[84,0,107,5],[86,0,108,4,"BlobModule"],[86,19,108,15,"release"],[86,26,108,4],[86,27,108,23,"blobId"],[86,33,108,4],[87,0,109,3],[90,45,115,38],[91,0,116,4,"BlobModule"],[91,19,116,15,"addNetworkingHandler"],[91,39,116,4],[92,0,117,3],[95,42,123,29,"socketId"],[95,50],[95,52,123,53],[96,0,124,4,"BlobModule"],[96,19,124,15,"addWebSocketHandler"],[96,38,124,4],[96,39,124,35,"socketId"],[96,47,124,4],[97,0,125,3],[100,45,131,32,"socketId"],[100,53],[100,55,131,56],[101,0,132,4,"BlobModule"],[101,19,132,15,"removeWebSocketHandler"],[101,41,132,4],[101,42,132,38,"socketId"],[101,50,132,4],[102,0,133,3],[105,37,138,24,"blob"],[105,41],[105,43,138,36,"socketId"],[105,51],[105,53,138,60],[106,0,139,4,"BlobModule"],[106,19,139,15,"sendOverSocket"],[106,33,139,4],[106,34,139,30,"blob"],[106,39,139,35,"data"],[106,43,139,4],[106,45,139,41,"socketId"],[106,53,139,4],[107,0,140,3],[113,0,37,6,"BlobManager"],[113,13],[113,14,41,9,"isAvailable"],[113,25],[113,28,41,23],[113,29,41,24],[113,30,41,25,"BlobModule"],[113,40],[114,0,143,0,"module"],[114,9,143,7,"exports"],[114,16,143,0],[114,19,143,17,"BlobManager"],[114,30,143,0]]},"type":"js/module"}]}