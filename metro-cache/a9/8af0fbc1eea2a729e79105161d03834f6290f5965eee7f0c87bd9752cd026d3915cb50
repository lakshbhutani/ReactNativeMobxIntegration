{"dependencies":[{"name":"react","isAsync":false},{"name":"./../../../react-transform-hmr/lib/index.js","isAsync":false},{"name":"ColorPropType","isAsync":false},{"name":"Platform","isAsync":false},{"name":"React","isAsync":false},{"name":"prop-types","isAsync":false},{"name":"StyleSheet","isAsync":false},{"name":"Text","isAsync":false},{"name":"TouchableNativeFeedback","isAsync":false},{"name":"TouchableOpacity","isAsync":false},{"name":"View","isAsync":false},{"name":"fbjs/lib/invariant","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _default = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"react\")).default;\n\n  var _reactTransformHmrLibIndexJs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../../react-transform-hmr/lib/index.js\")).default;\n\n  var _jsxFileName = \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/react-native/Libraries/Components/Button.js\";\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  var _components = {\n    Button: {\n      displayName: \"Button\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = _reactTransformHmrLibIndexJs({\n    filename: \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/react-native/Libraries/Components/Button.js\",\n    components: _components,\n    locals: [module],\n    imports: [_default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  var ColorPropType = _$$_REQUIRE(_dependencyMap[2], 'ColorPropType');\n\n  var Platform = _$$_REQUIRE(_dependencyMap[3], 'Platform');\n\n  var React = _$$_REQUIRE(_dependencyMap[4], 'React');\n\n  var PropTypes = _$$_REQUIRE(_dependencyMap[5], 'prop-types');\n\n  var StyleSheet = _$$_REQUIRE(_dependencyMap[6], 'StyleSheet');\n\n  var Text = _$$_REQUIRE(_dependencyMap[7], 'Text');\n\n  var TouchableNativeFeedback = _$$_REQUIRE(_dependencyMap[8], 'TouchableNativeFeedback');\n\n  var TouchableOpacity = _$$_REQUIRE(_dependencyMap[9], 'TouchableOpacity');\n\n  var View = _$$_REQUIRE(_dependencyMap[10], 'View');\n\n  var invariant = _$$_REQUIRE(_dependencyMap[11], 'fbjs/lib/invariant');\n\n  var Button = function (_React$Component) {\n    function Button() {\n      _classCallCheck(this, Button);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(Button).apply(this, arguments));\n    }\n\n    _createClass(Button, [{\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            accessibilityLabel = _this$props.accessibilityLabel,\n            color = _this$props.color,\n            onPress = _this$props.onPress,\n            title = _this$props.title,\n            hasTVPreferredFocus = _this$props.hasTVPreferredFocus,\n            disabled = _this$props.disabled,\n            testID = _this$props.testID;\n        var buttonStyles = [styles.button];\n        var textStyles = [styles.text];\n\n        if (color) {\n          if (Platform.OS === 'ios') {\n            textStyles.push({\n              color: color\n            });\n          } else {\n            buttonStyles.push({\n              backgroundColor: color\n            });\n          }\n        }\n\n        var accessibilityTraits = ['button'];\n\n        if (disabled) {\n          buttonStyles.push(styles.buttonDisabled);\n          textStyles.push(styles.textDisabled);\n          accessibilityTraits.push('disabled');\n        }\n\n        invariant(typeof title === 'string', 'The title prop of a Button must be a string');\n        var formattedTitle = Platform.OS === 'android' ? title.toUpperCase() : title;\n        var Touchable = Platform.OS === 'android' ? TouchableNativeFeedback : TouchableOpacity;\n        return React.createElement(Touchable, {\n          accessibilityComponentType: \"button\",\n          accessibilityLabel: accessibilityLabel,\n          accessibilityTraits: accessibilityTraits,\n          hasTVPreferredFocus: hasTVPreferredFocus,\n          testID: testID,\n          disabled: disabled,\n          onPress: onPress,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          }\n        }, React.createElement(View, {\n          style: buttonStyles,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          }\n        }, React.createElement(Text, {\n          style: textStyles,\n          disabled: disabled,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          }\n        }, formattedTitle)));\n      }\n    }]);\n\n    _inherits(Button, _React$Component);\n\n    return Button;\n  }(React.Component);\n\n  Button.propTypes = {\n    title: PropTypes.string.isRequired,\n    accessibilityLabel: PropTypes.string,\n    color: ColorPropType,\n    disabled: PropTypes.bool,\n    hasTVPreferredFocus: PropTypes.bool,\n    onPress: PropTypes.func.isRequired,\n    testID: PropTypes.string\n  };\n  Button = _wrapComponent(\"Button\")(Button);\n  var styles = StyleSheet.create({\n    button: Platform.select({\n      ios: {},\n      android: {\n        elevation: 4,\n        backgroundColor: '#2196F3',\n        borderRadius: 2\n      }\n    }),\n    text: Platform.select({\n      ios: {\n        color: '#007AFF',\n        textAlign: 'center',\n        padding: 8,\n        fontSize: 18\n      },\n      android: {\n        color: 'white',\n        textAlign: 'center',\n        padding: 8,\n        fontWeight: '500'\n      }\n    }),\n    buttonDisabled: Platform.select({\n      ios: {},\n      android: {\n        elevation: 0,\n        backgroundColor: '#dfdfdf'\n      }\n    }),\n    textDisabled: Platform.select({\n      ios: {\n        color: '#cdcdcd'\n      },\n      android: {\n        color: '#a1a1a1'\n      }\n    })\n  });\n  module.exports = Button;\n});","map":[[2,0,11,0],[47,0,13,0],[47,6,13,6,"ColorPropType"],[47,22,13,22,"require"],[47,53,13,30],[47,68,13,22],[47,69,13,0],[49,0,14,0],[49,6,14,6,"Platform"],[49,17,14,17,"require"],[49,48,14,25],[49,58,14,17],[49,59,14,0],[51,0,15,0],[51,6,15,6,"React"],[51,14,15,14,"require"],[51,45,15,22],[51,52,15,14],[51,53,15,0],[53,0,16,0],[53,6,16,6,"PropTypes"],[53,18,16,18,"require"],[53,49,16,26],[53,61,16,18],[53,62,16,0],[55,0,17,0],[55,6,17,6,"StyleSheet"],[55,19,17,19,"require"],[55,50,17,27],[55,62,17,19],[55,63,17,0],[57,0,18,0],[57,6,18,6,"Text"],[57,13,18,13,"require"],[57,44,18,21],[57,50,18,13],[57,51,18,0],[59,0,19,0],[59,6,19,6,"TouchableNativeFeedback"],[59,32,19,32,"require"],[59,63,19,40],[59,88,19,32],[59,89,19,0],[61,0,20,0],[61,6,20,6,"TouchableOpacity"],[61,25,20,25,"require"],[61,56,20,33],[61,74,20,25],[61,75,20,0],[63,0,21,0],[63,6,21,6,"View"],[63,13,21,13,"require"],[63,45,21,21],[63,51,21,13],[63,52,21,0],[65,0,23,0],[65,6,23,6,"invariant"],[65,18,23,18,"require"],[65,50,23,26],[65,70,23,18],[65,71,23,0],[67,6,53,6,"Button"],[67,12],[76,31,93,11],[77,0,93,11],[77,26,102,8],[77,31,102,13,"props"],[77,36,93,11],[78,0,93,11],[78,12,95,6,"accessibilityLabel"],[78,30,93,11],[78,45,95,6,"accessibilityLabel"],[78,63,93,11],[79,0,93,11],[79,12,96,6,"color"],[79,17,93,11],[79,32,96,6,"color"],[79,37,93,11],[80,0,93,11],[80,12,97,6,"onPress"],[80,19,93,11],[80,34,97,6,"onPress"],[80,41,93,11],[81,0,93,11],[81,12,98,6,"title"],[81,17,93,11],[81,32,98,6,"title"],[81,37,93,11],[82,0,93,11],[82,12,99,6,"hasTVPreferredFocus"],[82,31,93,11],[82,46,99,6,"hasTVPreferredFocus"],[82,65,93,11],[83,0,93,11],[83,12,100,6,"disabled"],[83,20,93,11],[83,35,100,6,"disabled"],[83,43,93,11],[84,0,93,11],[84,12,101,6,"testID"],[84,18,93,11],[84,33,101,6,"testID"],[84,39,93,11],[85,0,103,4],[85,12,103,10,"buttonStyles"],[85,27,103,25],[85,28,103,26,"styles"],[85,35,103,33,"button"],[85,41,103,25],[85,42,103,4],[86,0,104,4],[86,12,104,10,"textStyles"],[86,25,104,23],[86,26,104,24,"styles"],[86,33,104,31,"text"],[86,37,104,23],[86,38,104,4],[88,0,105,4],[88,12,105,8,"color"],[88,17,105,4],[88,19,105,15],[89,0,106,6],[89,14,106,10,"Platform"],[89,23,106,19,"OS"],[89,25,106,10],[89,30,106,26],[89,35,106,6],[89,37,106,33],[90,0,107,8,"textStyles"],[90,23,107,19,"push"],[90,27,107,8],[90,28,107,24],[91,0,107,25,"color"],[91,21,107,32,"color"],[92,0,107,24],[92,13,107,8],[93,0,108,7],[93,11,106,6],[93,17,108,13],[94,0,109,8,"buttonStyles"],[94,25,109,21,"push"],[94,29,109,8],[94,30,109,26],[95,0,109,27,"backgroundColor"],[95,31,109,44,"color"],[96,0,109,26],[96,13,109,8],[97,0,110,7],[98,0,111,5],[100,0,112,4],[100,12,112,10,"accessibilityTraits"],[100,34,112,32],[100,35,112,33],[100,43,112,32],[100,44,112,4],[102,0,113,4],[102,12,113,8,"disabled"],[102,20,113,4],[102,22,113,18],[103,0,114,6,"buttonStyles"],[103,23,114,19,"push"],[103,27,114,6],[103,28,114,24,"styles"],[103,35,114,31,"buttonDisabled"],[103,49,114,6],[104,0,115,6,"textStyles"],[104,21,115,17,"push"],[104,25,115,6],[104,26,115,22,"styles"],[104,33,115,29,"textDisabled"],[104,45,115,6],[105,0,116,6,"accessibilityTraits"],[105,30,116,26,"push"],[105,34,116,6],[105,35,116,31],[105,45,116,6],[106,0,117,5],[108,0,118,4,"invariant"],[108,18,119,6],[108,25,119,13,"title"],[108,30,119,6],[108,35,119,23],[108,43,118,4],[108,45,120,6],[108,90,118,4],[109,0,122,4],[109,12,122,10,"formattedTitle"],[109,29,123,6,"Platform"],[109,38,123,15,"OS"],[109,40,123,6],[109,45,123,22],[109,54,123,6],[109,57,123,34,"title"],[109,63,123,40,"toUpperCase"],[109,74,123,34],[109,76,123,6],[109,79,123,56,"title"],[109,84,122,4],[110,0,124,4],[110,12,124,10,"Touchable"],[110,24,125,6,"Platform"],[110,33,125,15,"OS"],[110,35,125,6],[110,40,125,22],[110,49,125,6],[110,52,125,34,"TouchableNativeFeedback"],[110,75,125,6],[110,78,125,60,"TouchableOpacity"],[110,94,124,4],[111,0,126,4],[111,15,127,6],[111,35,127,7],[111,44,127,6],[112,0,128,8],[112,38,128,35],[112,46,127,6],[113,0,129,8],[113,30,129,28,"accessibilityLabel"],[113,48,127,6],[114,0,130,8],[114,31,130,29,"accessibilityTraits"],[114,50,127,6],[115,0,131,8],[115,31,131,29,"hasTVPreferredFocus"],[115,50,127,6],[116,0,132,8],[116,18,132,16,"testID"],[116,24,127,6],[117,0,133,8],[117,20,133,18,"disabled"],[117,28,127,6],[118,0,134,8],[118,19,134,17,"onPress"],[118,26,127,6],[119,0,127,6],[120,0,127,6],[121,0,127,6],[122,0,127,6],[123,0,127,6],[123,11,135,8],[123,31,135,9],[123,35,135,8],[124,0,135,14],[124,17,135,21,"buttonStyles"],[124,29,135,8],[125,0,135,8],[126,0,135,8],[127,0,135,8],[128,0,135,8],[129,0,135,8],[129,11,136,10],[129,31,136,11],[129,35,136,10],[130,0,136,16],[130,17,136,23,"textStyles"],[130,27,136,10],[131,0,136,35],[131,20,136,45,"disabled"],[131,28,136,10],[132,0,136,10],[133,0,136,10],[134,0,136,10],[135,0,136,10],[136,0,136,10],[136,11,137,13,"formattedTitle"],[136,25,136,10],[136,26,135,8],[136,27,127,6],[136,28,126,4],[137,0,142,3],[143,4,53,21,"React"],[143,10,53,27,"Component"],[143,19],[145,0,53,6,"Button"],[145,8],[145,9,62,9,"propTypes"],[145,18],[145,21,62,21],[146,0,66,4,"title"],[146,11,66,11,"PropTypes"],[146,21,66,21,"string"],[146,27,66,11],[146,28,66,28,"isRequired"],[146,38,62,21],[147,0,70,4,"accessibilityLabel"],[147,24,70,24,"PropTypes"],[147,34,70,34,"string"],[147,40,62,21],[148,0,74,4,"color"],[148,11,74,11,"ColorPropType"],[148,24,62,21],[149,0,78,4,"disabled"],[149,14,78,14,"PropTypes"],[149,24,78,24,"bool"],[149,28,62,21],[150,0,82,4,"hasTVPreferredFocus"],[150,25,82,25,"PropTypes"],[150,35,82,35,"bool"],[150,39,62,21],[151,0,86,4,"onPress"],[151,13,86,13,"PropTypes"],[151,23,86,23,"func"],[151,27,86,13],[151,28,86,28,"isRequired"],[151,38,62,21],[152,0,90,4,"testID"],[152,12,90,12,"PropTypes"],[152,22,90,22,"string"],[153,0,62,21],[153,3],[155,0,145,0],[155,6,145,6,"styles"],[155,15,145,15,"StyleSheet"],[155,26,145,26,"create"],[155,32,145,15],[155,33,145,33],[156,0,146,2,"button"],[156,12,146,10,"Platform"],[156,21,146,19,"select"],[156,27,146,10],[156,28,146,26],[157,0,147,4,"ios"],[157,11,147,9],[157,13,146,26],[158,0,148,4,"android"],[158,15,148,13],[159,0,149,6,"elevation"],[159,19,149,17],[159,20,148,13],[160,0,151,6,"backgroundColor"],[160,25,151,23],[160,34,148,13],[161,0,152,6,"borderRadius"],[161,22,152,20],[162,0,148,13],[163,0,146,26],[163,5,146,10],[163,6,145,33],[164,0,155,2,"text"],[164,10,155,8,"Platform"],[164,19,155,17,"select"],[164,25,155,8],[164,26,155,24],[165,0,156,4,"ios"],[165,11,156,9],[166,0,158,6,"color"],[166,15,158,13],[166,24,156,9],[167,0,159,6,"textAlign"],[167,19,159,17],[167,27,156,9],[168,0,160,6,"padding"],[168,17,160,15],[168,18,156,9],[169,0,161,6,"fontSize"],[169,18,161,16],[170,0,156,9],[170,7,155,24],[171,0,163,4,"android"],[171,15,163,13],[172,0,164,6,"color"],[172,15,164,13],[172,22,163,13],[173,0,165,6,"textAlign"],[173,19,165,17],[173,27,163,13],[174,0,166,6,"padding"],[174,17,166,15],[174,18,163,13],[175,0,167,6,"fontWeight"],[175,20,167,18],[176,0,163,13],[177,0,155,24],[177,5,155,8],[177,6,145,33],[178,0,170,2,"buttonDisabled"],[178,20,170,18,"Platform"],[178,29,170,27,"select"],[178,35,170,18],[178,36,170,34],[179,0,171,4,"ios"],[179,11,171,9],[179,13,170,34],[180,0,172,4,"android"],[180,15,172,13],[181,0,173,6,"elevation"],[181,19,173,17],[181,20,172,13],[182,0,174,6,"backgroundColor"],[182,25,174,23],[183,0,172,13],[184,0,170,34],[184,5,170,18],[184,6,145,33],[185,0,177,2,"textDisabled"],[185,18,177,16,"Platform"],[185,27,177,25,"select"],[185,33,177,16],[185,34,177,32],[186,0,178,4,"ios"],[186,11,178,9],[187,0,179,6,"color"],[187,15,179,13],[188,0,178,9],[188,7,177,32],[189,0,181,4,"android"],[189,15,181,13],[190,0,182,6,"color"],[190,15,182,13],[191,0,181,13],[192,0,177,32],[192,5,177,16],[193,0,145,33],[193,3,145,15],[193,4,145,0],[194,0,187,0,"module"],[194,9,187,7,"exports"],[194,16,187,0],[194,19,187,17,"Button"],[194,25,187,0]]},"type":"js/module"}]}