{"dependencies":[{"name":"react","isAsync":false},{"name":"./../../../react-transform-hmr/lib/index.js","isAsync":false},{"name":"react-navigation","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createTabNavigator;\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../../react-transform-hmr/lib/index.js\"));\n\n  var _reactNavigation = _$$_REQUIRE(_dependencyMap[2], \"react-navigation\");\n\n  var _jsxFileName = \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/react-navigation-tabs/dist/utils/createTabNavigator.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  var _components = {\n    NavigationView: {\n      displayName: \"NavigationView\",\n      isInFunction: true\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/react-navigation-tabs/dist/utils/createTabNavigator.js\",\n    components: _components,\n    locals: [module],\n    imports: [React.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  function createTabNavigator(TabView) {\n    var NavigationView = function (_React$Component) {\n      function NavigationView() {\n        var _getPrototypeOf2;\n\n        var _temp, _this;\n\n        _classCallCheck(this, NavigationView);\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NavigationView)).call.apply(_getPrototypeOf2, [this].concat(args))), _this._renderScene = function (_ref) {\n          var route = _ref.route;\n          var _this$props = _this.props,\n              screenProps = _this$props.screenProps,\n              descriptors = _this$props.descriptors;\n          var descriptor = descriptors[route.key];\n          var TabComponent = descriptor.getComponent();\n          return React.createElement(_reactNavigation.SceneView, {\n            screenProps: screenProps,\n            navigation: descriptor.navigation,\n            component: TabComponent,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 10\n            }\n          });\n        }, _this._renderIcon = function (_ref2) {\n          var route = _ref2.route,\n              _ref2$focused = _ref2.focused,\n              focused = _ref2$focused === void 0 ? true : _ref2$focused,\n              tintColor = _ref2.tintColor;\n          var descriptors = _this.props.descriptors;\n          var descriptor = descriptors[route.key];\n          var options = descriptor.options;\n\n          if (options.tabBarIcon) {\n            return typeof options.tabBarIcon === 'function' ? options.tabBarIcon({\n              focused: focused,\n              tintColor: tintColor\n            }) : options.tabBarIcon;\n          }\n\n          return null;\n        }, _this._getButtonComponent = function (_ref3) {\n          var route = _ref3.route;\n          var descriptors = _this.props.descriptors;\n          var descriptor = descriptors[route.key];\n          var options = descriptor.options;\n\n          if (options.tabBarButtonComponent) {\n            return options.tabBarButtonComponent;\n          }\n\n          return null;\n        }, _this._getLabelText = function (_ref4) {\n          var route = _ref4.route;\n          var descriptors = _this.props.descriptors;\n          var descriptor = descriptors[route.key];\n          var options = descriptor.options;\n\n          if (options.tabBarLabel) {\n            return options.tabBarLabel;\n          }\n\n          if (typeof options.title === 'string') {\n            return options.title;\n          }\n\n          return route.routeName;\n        }, _this._getAccessibilityLabel = function (_ref5) {\n          var route = _ref5.route;\n          var descriptors = _this.props.descriptors;\n          var descriptor = descriptors[route.key];\n          var options = descriptor.options;\n\n          if (typeof options.tabBarAccessibilityLabel !== 'undefined') {\n            return options.tabBarAccessibilityLabel;\n          }\n\n          var label = _this._getLabelText({\n            route: route\n          });\n\n          if (typeof label === 'string') {\n            return label;\n          }\n        }, _this._getTestID = function (_ref6) {\n          var route = _ref6.route;\n          var descriptors = _this.props.descriptors;\n          var descriptor = descriptors[route.key];\n          var options = descriptor.options;\n          return options.tabBarTestID;\n        }, _this._handleTabPress = function (_ref7) {\n          var route = _ref7.route;\n          _this._isTabPress = true;\n          var descriptors = _this.props.descriptors;\n          var descriptor = descriptors[route.key];\n          var navigation = descriptor.navigation,\n              options = descriptor.options;\n\n          var defaultHandler = function defaultHandler() {\n            if (navigation.isFocused()) {\n              if (route.hasOwnProperty('index') && route.index > 0) {\n                navigation.dispatch(_reactNavigation.StackActions.popToTop({\n                  key: route.key\n                }));\n              } else {}\n            } else {\n              _this._jumpTo(route.routeName);\n            }\n          };\n\n          if (options.tabBarOnPress) {\n            options.tabBarOnPress({\n              navigation: navigation,\n              defaultHandler: defaultHandler\n            });\n          } else {\n            defaultHandler();\n          }\n        }, _this._handleIndexChange = function (index) {\n          if (_this._isTabPress) {\n            _this._isTabPress = false;\n            return;\n          }\n\n          _this._jumpTo(_this.props.navigation.state.routes[index].routeName);\n        }, _this._handleSwipeStart = function () {\n          _this.setState({\n            isSwiping: true\n          });\n        }, _this._handleSwipeEnd = function () {\n          _this.setState({\n            isSwiping: false\n          });\n        }, _this._jumpTo = function (routeName) {\n          return _this.props.navigation.dispatch(_reactNavigation.NavigationActions.navigate({\n            routeName: routeName\n          }));\n        }, _this._isTabPress = false, _temp));\n      }\n\n      _createClass(NavigationView, [{\n        key: \"render\",\n        value: function render() {\n          var _this$props2 = this.props,\n              descriptors = _this$props2.descriptors,\n              navigation = _this$props2.navigation,\n              screenProps = _this$props2.screenProps;\n          var state = navigation.state;\n          var route = state.routes[state.index];\n          var descriptor = descriptors[route.key];\n\n          var options = _objectSpread({}, this.props.navigationConfig, descriptor.options);\n\n          return React.createElement(TabView, _extends({}, options, {\n            getLabelText: this._getLabelText,\n            getButtonComponent: this._getButtonComponent,\n            getAccessibilityLabel: this._getAccessibilityLabel,\n            getTestID: this._getTestID,\n            renderIcon: this._renderIcon,\n            renderScene: this._renderScene,\n            onIndexChange: this._handleIndexChange,\n            onTabPress: this._handleTabPress,\n            navigation: navigation,\n            descriptors: descriptors,\n            screenProps: screenProps,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            }\n          }));\n        }\n      }]);\n\n      _inherits(NavigationView, _React$Component);\n\n      return NavigationView;\n    }(React.Component);\n\n    NavigationView = _wrapComponent(\"NavigationView\")(NavigationView);\n    return function (routes) {\n      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var router = (0, _reactNavigation.TabRouter)(routes, config);\n      var navigator = (0, _reactNavigation.createNavigator)(NavigationView, router, config);\n      return (0, _reactNavigation.createNavigationContainer)(navigator);\n    };\n  }\n});","map":[[7,0,1,0],[11,0,2,0],[61,0,4,15],[61,11,4,24,"createTabNavigator"],[61,29,4,15],[61,30,4,43,"TabView"],[61,37,4,15],[61,39,4,52],[62,0,4,52],[62,8,5,8,"NavigationView"],[62,22,4,52],[63,0,4,52],[64,0,4,52],[66,0,4,52],[68,0,4,52],[70,0,4,52],[71,0,4,52],[72,0,4,52],[74,0,4,52],[74,210,6,4,"_renderScene"],[74,222,4,52],[74,225,6,19],[74,241,6,34],[75,0,6,34],[75,14,6,22,"route"],[75,19,6,34],[75,27,6,22,"route"],[75,32,6,34],[76,0,6,34],[76,28,7,43],[76,34,7,48,"props"],[76,39,6,34],[77,0,6,34],[77,14,7,14,"screenProps"],[77,25,6,34],[77,40,7,14,"screenProps"],[77,51,6,34],[78,0,6,34],[78,14,7,27,"descriptors"],[78,25,6,34],[78,40,7,27,"descriptors"],[78,51,6,34],[79,0,8,6],[79,14,8,12,"descriptor"],[79,27,8,25,"descriptors"],[79,39,8,37,"route"],[79,45,8,43,"key"],[79,48,8,25],[79,49,8,6],[80,0,9,6],[80,14,9,12,"TabComponent"],[80,29,9,27,"descriptor"],[80,40,9,38,"getComponent"],[80,52,9,27],[80,54,9,6],[81,0,10,6],[81,17,10,13],[81,37,10,14],[81,63,10,13],[82,0,10,24],[82,25,10,37,"screenProps"],[82,36,10,13],[83,0,10,50],[83,24,10,62,"descriptor"],[83,35,10,73,"navigation"],[83,45,10,13],[84,0,10,85],[84,23,10,96,"TabComponent"],[84,35,10,13],[85,0,10,13],[86,0,10,13],[87,0,10,13],[88,0,10,13],[89,0,10,13],[89,12,10,6],[90,0,11,5],[90,9,4,52],[90,17,13,4,"_renderIcon"],[90,28,4,52],[90,31,13,18],[90,48,13,60],[91,0,13,60],[91,14,13,21,"route"],[91,19,13,60],[91,28,13,21,"route"],[91,33,13,60],[92,0,13,60],[92,36,13,28,"focused"],[92,43,13,60],[93,0,13,60],[93,14,13,28,"focused"],[93,21,13,60],[93,51,13,38],[93,55,13,60],[94,0,13,60],[94,14,13,44,"tintColor"],[94,23,13,60],[94,32,13,44,"tintColor"],[94,41,13,60],[95,0,13,60],[95,14,14,14,"descriptors"],[95,25,13,60],[95,28,14,30],[95,34,14,35,"props"],[95,39,13,60],[95,40,14,14,"descriptors"],[95,51,13,60],[96,0,15,6],[96,14,15,12,"descriptor"],[96,27,15,25,"descriptors"],[96,39,15,37,"route"],[96,45,15,43,"key"],[96,48,15,25],[96,49,15,6],[97,0,16,6],[97,14,16,12,"options"],[97,24,16,22,"descriptor"],[97,35,16,33,"options"],[97,42,16,6],[99,0,18,6],[99,14,18,10,"options"],[99,22,18,18,"tabBarIcon"],[99,32,18,6],[99,34,18,30],[100,0,19,8],[100,19,19,15],[100,26,19,22,"options"],[100,34,19,30,"tabBarIcon"],[100,44,19,15],[100,49,19,45],[100,59,19,15],[100,62,19,58,"options"],[100,70,19,66,"tabBarIcon"],[100,80,19,58],[100,81,19,77],[101,0,19,79,"focused"],[101,30,19,77],[102,0,19,88,"tintColor"],[103,0,19,77],[103,13,19,58],[103,14,19,15],[103,17,19,103,"options"],[103,25,19,111,"tabBarIcon"],[103,35,19,8],[104,0,20,7],[106,0,22,6],[106,17,22,13],[106,21,22,6],[107,0,23,5],[107,9,4,52],[107,17,25,4,"_getButtonComponent"],[107,36,4,52],[107,39,25,26],[107,56,25,41],[108,0,25,41],[108,14,25,29,"route"],[108,19,25,41],[108,28,25,29,"route"],[108,33,25,41],[109,0,25,41],[109,14,26,14,"descriptors"],[109,25,25,41],[109,28,26,30],[109,34,26,35,"props"],[109,39,25,41],[109,40,26,14,"descriptors"],[109,51,25,41],[110,0,27,6],[110,14,27,12,"descriptor"],[110,27,27,25,"descriptors"],[110,39,27,37,"route"],[110,45,27,43,"key"],[110,48,27,25],[110,49,27,6],[111,0,28,6],[111,14,28,12,"options"],[111,24,28,22,"descriptor"],[111,35,28,33,"options"],[111,42,28,6],[113,0,30,6],[113,14,30,10,"options"],[113,22,30,18,"tabBarButtonComponent"],[113,43,30,6],[113,45,30,41],[114,0,31,8],[114,19,31,15,"options"],[114,27,31,23,"tabBarButtonComponent"],[114,48,31,8],[115,0,32,7],[117,0,34,6],[117,17,34,13],[117,21,34,6],[118,0,35,5],[118,9,4,52],[118,17,37,4,"_getLabelText"],[118,30,4,52],[118,33,37,20],[118,50,37,35],[119,0,37,35],[119,14,37,23,"route"],[119,19,37,35],[119,28,37,23,"route"],[119,33,37,35],[120,0,37,35],[120,14,38,14,"descriptors"],[120,25,37,35],[120,28,38,30],[120,34,38,35,"props"],[120,39,37,35],[120,40,38,14,"descriptors"],[120,51,37,35],[121,0,39,6],[121,14,39,12,"descriptor"],[121,27,39,25,"descriptors"],[121,39,39,37,"route"],[121,45,39,43,"key"],[121,48,39,25],[121,49,39,6],[122,0,40,6],[122,14,40,12,"options"],[122,24,40,22,"descriptor"],[122,35,40,33,"options"],[122,42,40,6],[124,0,42,6],[124,14,42,10,"options"],[124,22,42,18,"tabBarLabel"],[124,33,42,6],[124,35,42,31],[125,0,43,8],[125,19,43,15,"options"],[125,27,43,23,"tabBarLabel"],[125,38,43,8],[126,0,44,7],[128,0,46,6],[128,14,46,10],[128,21,46,17,"options"],[128,29,46,25,"title"],[128,34,46,10],[128,39,46,35],[128,47,46,6],[128,49,46,45],[129,0,47,8],[129,19,47,15,"options"],[129,27,47,23,"title"],[129,32,47,8],[130,0,48,7],[132,0,50,6],[132,17,50,13,"route"],[132,23,50,19,"routeName"],[132,32,50,6],[133,0,51,5],[133,9,4,52],[133,17,53,4,"_getAccessibilityLabel"],[133,39,4,52],[133,42,53,29],[133,59,53,44],[134,0,53,44],[134,14,53,32,"route"],[134,19,53,44],[134,28,53,32,"route"],[134,33,53,44],[135,0,53,44],[135,14,54,14,"descriptors"],[135,25,53,44],[135,28,54,30],[135,34,54,35,"props"],[135,39,53,44],[135,40,54,14,"descriptors"],[135,51,53,44],[136,0,55,6],[136,14,55,12,"descriptor"],[136,27,55,25,"descriptors"],[136,39,55,37,"route"],[136,45,55,43,"key"],[136,48,55,25],[136,49,55,6],[137,0,56,6],[137,14,56,12,"options"],[137,24,56,22,"descriptor"],[137,35,56,33,"options"],[137,42,56,6],[139,0,58,6],[139,14,58,10],[139,21,58,17,"options"],[139,29,58,25,"tabBarAccessibilityLabel"],[139,53,58,10],[139,58,58,54],[139,69,58,6],[139,71,58,67],[140,0,59,8],[140,19,59,15,"options"],[140,27,59,23,"tabBarAccessibilityLabel"],[140,51,59,8],[141,0,60,7],[143,0,62,6],[143,14,62,12,"label"],[143,22,62,20],[143,28,62,25,"_getLabelText"],[143,41,62,20],[143,42,62,39],[144,0,62,41,"route"],[145,0,62,39],[145,11,62,20],[145,12,62,6],[147,0,64,6],[147,14,64,10],[147,21,64,17,"label"],[147,26,64,10],[147,31,64,27],[147,39,64,6],[147,41,64,37],[148,0,65,8],[148,19,65,15,"label"],[148,24,65,8],[149,0,66,7],[150,0,67,5],[150,9,4,52],[150,17,69,4,"_getTestID"],[150,27,4,52],[150,30,69,17],[150,47,69,32],[151,0,69,32],[151,14,69,20,"route"],[151,19,69,32],[151,28,69,20,"route"],[151,33,69,32],[152,0,69,32],[152,14,70,14,"descriptors"],[152,25,69,32],[152,28,70,30],[152,34,70,35,"props"],[152,39,69,32],[152,40,70,14,"descriptors"],[152,51,69,32],[153,0,71,6],[153,14,71,12,"descriptor"],[153,27,71,25,"descriptors"],[153,39,71,37,"route"],[153,45,71,43,"key"],[153,48,71,25],[153,49,71,6],[154,0,72,6],[154,14,72,12,"options"],[154,24,72,22,"descriptor"],[154,35,72,33,"options"],[154,42,72,6],[155,0,74,6],[155,17,74,13,"options"],[155,25,74,21,"tabBarTestID"],[155,37,74,6],[156,0,75,5],[156,9,4,52],[156,17,77,4,"_handleTabPress"],[156,32,4,52],[156,35,77,22],[156,52,77,37],[157,0,77,37],[157,14,77,25,"route"],[157,19,77,37],[157,28,77,25,"route"],[157,33,77,37],[158,0,78,6],[158,16,78,11,"_isTabPress"],[158,27,78,6],[158,30,78,25],[158,34,78,6],[159,0,77,37],[159,14,80,14,"descriptors"],[159,25,77,37],[159,28,80,30],[159,34,80,35,"props"],[159,39,77,37],[159,40,80,14,"descriptors"],[159,51,77,37],[160,0,81,6],[160,14,81,12,"descriptor"],[160,27,81,25,"descriptors"],[160,39,81,37,"route"],[160,45,81,43,"key"],[160,48,81,25],[160,49,81,6],[161,0,77,37],[161,14,82,14,"navigation"],[161,24,77,37],[161,27,82,38,"descriptor"],[161,37,77,37],[161,38,82,14,"navigation"],[161,48,77,37],[162,0,77,37],[162,14,82,26,"options"],[162,21,77,37],[162,24,82,38,"descriptor"],[162,34,77,37],[162,35,82,26,"options"],[162,42,77,37],[164,0,84,6],[164,14,84,12,"defaultHandler"],[164,31,84,29],[164,40,84,12,"defaultHandler"],[164,54,84,29],[164,57,84,35],[165,0,85,8],[165,16,85,12,"navigation"],[165,27,85,23,"isFocused"],[165,36,85,12],[165,38,85,8],[165,40,85,36],[166,0,86,10],[166,18,86,14,"route"],[166,24,86,20,"hasOwnProperty"],[166,38,86,14],[166,39,86,35],[166,46,86,14],[166,51,86,47,"route"],[166,57,86,53,"index"],[166,62,86,47],[166,65,86,61],[166,66,86,10],[166,68,86,64],[167,0,88,12,"navigation"],[167,27,88,23,"dispatch"],[167,35,88,12],[167,36,88,32,"StackActions"],[167,66,88,45,"popToTop"],[167,74,88,32],[167,75,88,54],[168,0,88,56,"key"],[168,23,88,61,"route"],[168,29,88,67,"key"],[169,0,88,54],[169,17,88,32],[169,18,88,12],[170,0,89,11],[170,15,86,10],[170,21,89,17],[170,22,91,11],[171,0,92,9],[171,13,85,8],[171,19,92,15],[172,0,93,10],[172,20,93,15,"_jumpTo"],[172,27,93,10],[172,28,93,23,"route"],[172,34,93,29,"routeName"],[172,43,93,10],[173,0,94,9],[174,0,95,7],[174,11,84,6],[176,0,97,6],[176,14,97,10,"options"],[176,22,97,18,"tabBarOnPress"],[176,35,97,6],[176,37,97,33],[177,0,98,8,"options"],[177,20,98,16,"tabBarOnPress"],[177,33,98,8],[177,34,98,30],[178,0,98,32,"navigation"],[178,36,98,30],[179,0,98,44,"defaultHandler"],[180,0,98,30],[180,13,98,8],[181,0,99,7],[181,11,97,6],[181,17,99,13],[182,0,100,8,"defaultHandler"],[183,0,101,7],[184,0,102,5],[184,9,4,52],[184,17,104,4,"_handleIndexChange"],[184,35,4,52],[184,38,104,25],[184,55,104,34],[185,0,105,6],[185,14,105,10],[185,20,105,15,"_isTabPress"],[185,31,105,6],[185,33,105,28],[186,0,106,8],[186,18,106,13,"_isTabPress"],[186,29,106,8],[186,32,106,27],[186,37,106,8],[187,0,107,8],[188,0,108,7],[190,0,110,6],[190,16,110,11,"_jumpTo"],[190,23,110,6],[190,24,110,19],[190,30,110,24,"props"],[190,35,110,19],[190,36,110,30,"navigation"],[190,46,110,19],[190,47,110,41,"state"],[190,52,110,19],[190,53,110,47,"routes"],[190,59,110,19],[190,60,110,54,"index"],[190,65,110,19],[190,67,110,61,"routeName"],[190,76,110,6],[191,0,111,5],[191,9,4,52],[191,17,113,4,"_handleSwipeStart"],[191,34,4,52],[191,37,113,24],[191,49,113,30],[192,0,114,6],[192,16,114,11,"setState"],[192,24,114,6],[192,25,114,20],[193,0,114,22,"isSwiping"],[193,23,114,33],[194,0,114,20],[194,11,114,6],[195,0,115,5],[195,9,4,52],[195,17,117,4,"_handleSwipeEnd"],[195,32,4,52],[195,35,117,22],[195,47,117,28],[196,0,118,6],[196,16,118,11,"setState"],[196,24,118,6],[196,25,118,20],[197,0,118,22,"isSwiping"],[197,23,118,33],[198,0,118,20],[198,11,118,6],[199,0,119,5],[199,9,4,52],[199,17,121,4,"_jumpTo"],[199,24,4,52],[199,27,121,14],[200,0,121,14],[200,17,121,27],[200,23,121,32,"props"],[200,28,121,27],[200,29,121,38,"navigation"],[200,39,121,27],[200,40,121,49,"dispatch"],[200,48,121,27],[200,49,121,58,"NavigationActions"],[200,84,121,76,"navigate"],[200,92,121,58],[200,93,121,85],[201,0,121,87,"routeName"],[202,0,121,85],[202,11,121,58],[202,12,121,27],[202,13,121,14],[203,0,121,14],[203,9,4,52],[203,17,123,4,"_isTabPress"],[203,28,4,52],[203,31,123,18],[203,36,4,52],[204,0,4,52],[206,0,4,52],[207,0,4,52],[208,0,4,52],[208,33,125,13],[209,0,125,13],[209,29,126,55],[209,34,126,60,"props"],[209,39,125,13],[210,0,125,13],[210,14,126,14,"descriptors"],[210,25,125,13],[210,41,126,14,"descriptors"],[210,52,125,13],[211,0,125,13],[211,14,126,27,"navigation"],[211,24,125,13],[211,40,126,27,"navigation"],[211,50,125,13],[212,0,125,13],[212,14,126,39,"screenProps"],[212,25,125,13],[212,41,126,39,"screenProps"],[212,52,125,13],[213,0,125,13],[213,14,127,14,"state"],[213,19,125,13],[213,22,127,24,"navigation"],[213,32,125,13],[213,33,127,14,"state"],[213,38,125,13],[214,0,128,6],[214,14,128,12,"route"],[214,22,128,20,"state"],[214,28,128,26,"routes"],[214,34,128,20],[214,35,128,33,"state"],[214,41,128,39,"index"],[214,46,128,20],[214,47,128,6],[215,0,129,6],[215,14,129,12,"descriptor"],[215,27,129,25,"descriptors"],[215,39,129,37,"route"],[215,45,129,43,"key"],[215,48,129,25],[215,49,129,6],[217,0,130,6],[217,14,130,12,"options"],[217,42,131,11],[217,47,131,16,"props"],[217,52,131,11],[217,53,131,22,"navigationConfig"],[217,69,130,12],[217,71,132,11,"descriptor"],[217,82,132,22,"options"],[217,89,130,12],[217,90,130,6],[219,0,135,6],[219,17,135,13],[219,37,135,14],[219,44,135,13],[219,59,135,26,"options"],[219,66,135,13],[220,0,135,35],[220,26,135,49],[220,31,135,54,"_getLabelText"],[220,44,135,13],[221,0,135,69],[221,32,135,89],[221,37,135,94,"_getButtonComponent"],[221,56,135,13],[222,0,135,115],[222,35,135,138],[222,40,135,143,"_getAccessibilityLabel"],[222,62,135,13],[223,0,135,167],[223,23,135,178],[223,28,135,183,"_getTestID"],[223,38,135,13],[224,0,135,195],[224,24,135,207],[224,29,135,212,"_renderIcon"],[224,40,135,13],[225,0,135,225],[225,25,135,238],[225,30,135,243,"_renderScene"],[225,42,135,13],[226,0,135,257],[226,27,135,272],[226,32,135,277,"_handleIndexChange"],[226,50,135,13],[227,0,135,297],[227,24,135,309],[227,29,135,314,"_handleTabPress"],[227,44,135,13],[228,0,135,331],[228,24,135,343,"navigation"],[228,34,135,13],[229,0,135,355],[229,25,135,368,"descriptors"],[229,36,135,13],[230,0,135,381],[230,25,135,394,"screenProps"],[230,36,135,13],[231,0,135,13],[232,0,135,13],[233,0,135,13],[234,0,135,13],[235,0,135,13],[235,13,135,6],[236,0,136,5],[237,0,4,52],[239,0,4,52],[241,0,4,52],[242,0,4,52],[242,6,5,31,"React"],[242,12,5,37,"Component"],[242,21,4,52],[244,0,4,52],[245,0,139,2],[245,11,139,9],[245,21,139,10,"routes"],[245,27,139,9],[245,29,139,34],[246,0,139,34],[246,10,139,18,"config"],[246,16,139,34],[246,87,139,27],[246,89,139,34],[247,0,140,4],[247,10,140,10,"router"],[247,19,140,19],[247,51,140,29,"routes"],[247,57,140,19],[247,59,140,37,"config"],[247,65,140,19],[247,66,140,4],[248,0,141,4],[248,10,141,10,"navigator"],[248,22,141,22],[248,60,141,38,"NavigationView"],[248,74,141,22],[248,76,141,54,"router"],[248,82,141,22],[248,84,141,62,"config"],[248,90,141,22],[248,91,141,4],[249,0,143,4],[249,13,143,11],[249,61,143,37,"navigator"],[249,70,143,11],[249,71,143,4],[250,0,144,3],[250,5,139,2],[251,0,145,1]]},"type":"js/module"}]}