{"dependencies":[{"name":"react","isAsync":false},{"name":"react-native","isAsync":false},{"name":"react-navigation","isAsync":false},{"name":"./TouchableItem","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[1], \"react-native\");\n\n  var _reactNavigation = _$$_REQUIRE(_dependencyMap[2], \"react-navigation\");\n\n  var _TouchableItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./TouchableItem\"));\n\n  var _jsxFileName = \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/react-navigation-drawer/dist/views/DrawerNavigatorItems.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var DrawerNavigatorItems = function DrawerNavigatorItems(_ref) {\n    var items = _ref.items,\n        activeItemKey = _ref.activeItemKey,\n        activeTintColor = _ref.activeTintColor,\n        activeBackgroundColor = _ref.activeBackgroundColor,\n        inactiveTintColor = _ref.inactiveTintColor,\n        inactiveBackgroundColor = _ref.inactiveBackgroundColor,\n        getLabel = _ref.getLabel,\n        renderIcon = _ref.renderIcon,\n        onItemPress = _ref.onItemPress,\n        itemsContainerStyle = _ref.itemsContainerStyle,\n        itemStyle = _ref.itemStyle,\n        labelStyle = _ref.labelStyle,\n        activeLabelStyle = _ref.activeLabelStyle,\n        inactiveLabelStyle = _ref.inactiveLabelStyle,\n        iconContainerStyle = _ref.iconContainerStyle,\n        drawerPosition = _ref.drawerPosition;\n    return _react.default.createElement(_reactNative.View, {\n      style: [styles.container, itemsContainerStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      }\n    }, items.map(function (route, index) {\n      var _ref2;\n\n      var focused = activeItemKey === route.key;\n      var color = focused ? activeTintColor : inactiveTintColor;\n      var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n      var scene = {\n        route: route,\n        index: index,\n        focused: focused,\n        tintColor: color\n      };\n      var icon = renderIcon(scene);\n      var label = getLabel(scene);\n      var extraLabelStyle = focused ? activeLabelStyle : inactiveLabelStyle;\n      return _react.default.createElement(_TouchableItem.default, {\n        key: route.key,\n        onPress: function onPress() {\n          onItemPress({\n            route: route,\n            focused: focused\n          });\n        },\n        delayPressIn: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        }\n      }, _react.default.createElement(_reactNavigation.SafeAreaView, {\n        style: {\n          backgroundColor: backgroundColor\n        },\n        forceInset: (_ref2 = {}, _defineProperty(_ref2, drawerPosition, 'always'), _defineProperty(_ref2, drawerPosition === 'left' ? 'right' : 'left', 'never'), _defineProperty(_ref2, \"vertical\", 'never'), _ref2),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: [styles.item, itemStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        }\n      }, icon ? _react.default.createElement(_reactNative.View, {\n        style: [styles.icon, focused ? null : styles.inactiveIcon, iconContainerStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        }\n      }, icon) : null, typeof label === 'string' ? _react.default.createElement(_reactNative.Text, {\n        style: [styles.label, {\n          color: color\n        }, labelStyle, extraLabelStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        }\n      }, label) : label)));\n    }));\n  };\n\n  DrawerNavigatorItems.defaultProps = {\n    activeTintColor: '#2196f3',\n    activeBackgroundColor: 'rgba(0, 0, 0, .04)',\n    inactiveTintColor: 'rgba(0, 0, 0, .87)',\n    inactiveBackgroundColor: 'transparent'\n  };\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      paddingVertical: 4\n    },\n    item: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    icon: {\n      marginHorizontal: 16,\n      width: 24,\n      alignItems: 'center'\n    },\n    inactiveIcon: {\n      opacity: 0.62\n    },\n    label: {\n      margin: 16,\n      fontWeight: 'bold'\n    }\n  });\n\n  var _default = DrawerNavigatorItems;\n  exports.default = _default;\n});","map":[[7,0,1,0],[9,0,2,0],[11,0,3,0],[13,0,4,0],[21,0,9,0],[21,6,9,6,"DrawerNavigatorItems"],[21,29,9,29],[21,38,9,6,"DrawerNavigatorItems"],[21,58,9,29],[22,0,9,29],[22,8,10,2,"items"],[22,13,9,29],[22,21,10,2,"items"],[22,26,9,29],[23,0,9,29],[23,8,11,2,"activeItemKey"],[23,21,9,29],[23,29,11,2,"activeItemKey"],[23,42,9,29],[24,0,9,29],[24,8,12,2,"activeTintColor"],[24,23,9,29],[24,31,12,2,"activeTintColor"],[24,46,9,29],[25,0,9,29],[25,8,13,2,"activeBackgroundColor"],[25,29,9,29],[25,37,13,2,"activeBackgroundColor"],[25,58,9,29],[26,0,9,29],[26,8,14,2,"inactiveTintColor"],[26,25,9,29],[26,33,14,2,"inactiveTintColor"],[26,50,9,29],[27,0,9,29],[27,8,15,2,"inactiveBackgroundColor"],[27,31,9,29],[27,39,15,2,"inactiveBackgroundColor"],[27,62,9,29],[28,0,9,29],[28,8,16,2,"getLabel"],[28,16,9,29],[28,24,16,2,"getLabel"],[28,32,9,29],[29,0,9,29],[29,8,17,2,"renderIcon"],[29,18,9,29],[29,26,17,2,"renderIcon"],[29,36,9,29],[30,0,9,29],[30,8,18,2,"onItemPress"],[30,19,9,29],[30,27,18,2,"onItemPress"],[30,38,9,29],[31,0,9,29],[31,8,19,2,"itemsContainerStyle"],[31,27,9,29],[31,35,19,2,"itemsContainerStyle"],[31,54,9,29],[32,0,9,29],[32,8,20,2,"itemStyle"],[32,17,9,29],[32,25,20,2,"itemStyle"],[32,34,9,29],[33,0,9,29],[33,8,21,2,"labelStyle"],[33,18,9,29],[33,26,21,2,"labelStyle"],[33,36,9,29],[34,0,9,29],[34,8,22,2,"activeLabelStyle"],[34,24,9,29],[34,32,22,2,"activeLabelStyle"],[34,48,9,29],[35,0,9,29],[35,8,23,2,"inactiveLabelStyle"],[35,26,9,29],[35,34,23,2,"inactiveLabelStyle"],[35,52,9,29],[36,0,9,29],[36,8,24,2,"iconContainerStyle"],[36,26,9,29],[36,34,24,2,"iconContainerStyle"],[36,52,9,29],[37,0,9,29],[37,8,25,2,"drawerPosition"],[37,22,9,29],[37,30,25,2,"drawerPosition"],[37,44,9,29],[38,0,9,29],[38,11,26,6],[38,40,26,7],[38,57,26,6],[39,0,26,12],[39,13,26,19],[39,14,26,20,"styles"],[39,21,26,27,"container"],[39,30,26,19],[39,32,26,38,"itemsContainerStyle"],[39,51,26,19],[39,52,26,6],[40,0,26,6],[41,0,26,6],[42,0,26,6],[43,0,26,6],[44,0,26,6],[44,7,27,5,"items"],[44,13,27,11,"map"],[44,16,27,5],[44,17,27,15],[44,27,27,16,"route"],[44,32,27,15],[44,34,27,23,"index"],[44,39,27,15],[44,41,27,33],[45,0,27,33],[47,0,28,4],[47,10,28,10,"focused"],[47,20,28,20,"activeItemKey"],[47,38,28,38,"route"],[47,44,28,44,"key"],[47,47,28,4],[48,0,29,4],[48,10,29,10,"color"],[48,18,29,18,"focused"],[48,28,29,28,"activeTintColor"],[48,43,29,18],[48,46,29,46,"inactiveTintColor"],[48,63,29,4],[49,0,30,4],[49,10,30,10,"backgroundColor"],[49,28,30,28,"focused"],[49,38,30,38,"activeBackgroundColor"],[49,59,30,28],[49,62,30,62,"inactiveBackgroundColor"],[49,85,30,4],[50,0,31,4],[50,10,31,10,"scene"],[50,18,31,18],[51,0,31,20,"route"],[51,20,31,18],[52,0,31,27,"index"],[52,20,31,18],[53,0,31,34,"focused"],[53,24,31,18],[54,0,31,43,"tintColor"],[54,19,31,54,"color"],[55,0,31,18],[55,7,31,4],[56,0,32,4],[56,10,32,10,"icon"],[56,17,32,17,"renderIcon"],[56,28,32,28,"scene"],[56,33,32,17],[56,34,32,4],[57,0,33,4],[57,10,33,10,"label"],[57,18,33,18,"getLabel"],[57,27,33,27,"scene"],[57,32,33,18],[57,33,33,4],[58,0,34,4],[58,10,34,10,"extraLabelStyle"],[58,28,34,28,"focused"],[58,38,34,38,"activeLabelStyle"],[58,54,34,28],[58,57,34,57,"inactiveLabelStyle"],[58,75,34,4],[59,0,35,4],[59,13,35,11],[59,42,35,12],[59,64,35,11],[60,0,35,26],[60,13,35,31,"route"],[60,19,35,37,"key"],[60,22,35,11],[61,0,35,42],[61,17,35,51],[61,36,35,57],[62,0,36,6,"onItemPress"],[62,22,36,18],[63,0,36,20,"route"],[63,24,36,18],[64,0,36,27,"focused"],[65,0,36,18],[65,11,36,6],[66,0,37,5],[66,9,35,11],[67,0,37,7],[67,22,37,21],[67,23,35,11],[68,0,35,11],[69,0,35,11],[70,0,35,11],[71,0,35,11],[72,0,35,11],[72,9,38,10],[72,38,38,11],[72,67,38,10],[73,0,38,24],[73,15,38,31],[74,0,38,33,"backgroundColor"],[75,0,38,31],[75,9,38,10],[76,0,38,52],[76,56,39,9,"drawerPosition"],[76,70,38,52],[76,72,39,26],[76,80,38,52],[76,106,40,9,"drawerPosition"],[76,125,40,28],[76,131,40,9],[76,134,40,37],[76,141,40,9],[76,144,40,47],[76,150,38,52],[76,152,40,56],[76,159,38,52],[76,197,41,18],[76,204,38,52],[76,213,38,10],[77,0,38,10],[78,0,38,10],[79,0,38,10],[80,0,38,10],[81,0,38,10],[81,9,43,12],[81,38,43,13],[81,55,43,12],[82,0,43,18],[82,15,43,25],[82,16,43,26,"styles"],[82,23,43,33,"item"],[82,27,43,25],[82,29,43,39,"itemStyle"],[82,38,43,25],[82,39,43,12],[83,0,43,12],[84,0,43,12],[85,0,43,12],[86,0,43,12],[87,0,43,12],[87,9,44,15,"icon"],[87,16,44,22],[87,45,44,23],[87,62,44,22],[88,0,44,28],[88,15,44,35],[88,16,44,36,"styles"],[88,23,44,43,"icon"],[88,27,44,35],[88,29,44,49,"focused"],[88,39,44,59],[88,43,44,49],[88,46,44,66,"styles"],[88,53,44,73,"inactiveIcon"],[88,65,44,35],[88,67,44,87,"iconContainerStyle"],[88,85,44,35],[88,86,44,22],[89,0,44,22],[90,0,44,22],[91,0,44,22],[92,0,44,22],[93,0,44,22],[93,9,45,19,"icon"],[93,13,44,22],[93,14,44,15],[93,17,46,26],[93,21,43,12],[93,23,47,15],[93,30,47,22,"label"],[93,35,47,15],[93,40,47,32],[93,48,47,15],[93,51,47,43],[93,80,47,44],[93,97,47,43],[94,0,47,49],[94,15,47,56],[94,16,47,57,"styles"],[94,23,47,64,"label"],[94,28,47,56],[94,30,47,71],[95,0,47,73,"color"],[96,0,47,71],[96,9,47,56],[96,11,47,82,"labelStyle"],[96,21,47,56],[96,23,47,94,"extraLabelStyle"],[96,38,47,56],[96,39,47,43],[97,0,47,43],[98,0,47,43],[99,0,47,43],[100,0,47,43],[101,0,47,43],[101,9,48,19,"label"],[101,14,47,43],[101,15,47,15],[101,18,49,26,"label"],[101,23,43,12],[101,24,38,10],[101,25,35,11],[101,26,35,4],[102,0,53,3],[102,5,27,5],[102,6,26,6],[102,7,9,29],[103,0,9,29],[103,3,9,0],[105,0,57,0,"DrawerNavigatorItems"],[105,23,57,21,"defaultProps"],[105,35,57,0],[105,38,57,36],[106,0,58,2,"activeTintColor"],[106,21,58,19],[106,30,57,36],[107,0,59,2,"activeBackgroundColor"],[107,27,59,25],[107,47,57,36],[108,0,60,2,"inactiveTintColor"],[108,23,60,21],[108,43,57,36],[109,0,61,2,"inactiveBackgroundColor"],[109,29,61,27],[110,0,57,36],[110,3,57,0],[112,0,64,0],[112,6,64,6,"styles"],[112,15,64,15,"StyleSheet"],[112,39,64,26,"create"],[112,45,64,15],[112,46,64,33],[113,0,65,2,"container"],[113,15,65,13],[114,0,66,4,"paddingVertical"],[114,23,66,21],[115,0,65,13],[115,5,64,33],[116,0,68,2,"item"],[116,10,68,8],[117,0,69,4,"flexDirection"],[117,21,69,19],[117,26,68,8],[118,0,70,4,"alignItems"],[118,18,70,16],[119,0,68,8],[119,5,64,33],[120,0,72,2,"icon"],[120,10,72,8],[121,0,73,4,"marginHorizontal"],[121,24,73,22],[121,26,72,8],[122,0,74,4,"width"],[122,13,74,11],[122,15,72,8],[123,0,75,4,"alignItems"],[123,18,75,16],[124,0,72,8],[124,5,64,33],[125,0,77,2,"inactiveIcon"],[125,18,77,16],[126,0,82,4,"opacity"],[126,15,82,13],[127,0,77,16],[127,5,64,33],[128,0,84,2,"label"],[128,11,84,9],[129,0,85,4,"margin"],[129,14,85,12],[129,16,84,9],[130,0,86,4,"fontWeight"],[130,18,86,16],[131,0,84,9],[132,0,64,33],[132,3,64,15],[132,4,64,0],[134,17,90,15,"DrawerNavigatorItems"],[134,37]]},"type":"js/module"}]}