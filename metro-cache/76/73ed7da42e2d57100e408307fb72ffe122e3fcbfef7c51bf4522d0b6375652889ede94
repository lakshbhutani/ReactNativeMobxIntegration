{"dependencies":[{"name":"Systrace","isAsync":false},{"name":"infoLog","isAsync":false},{"name":"fbjs/lib/performanceNow","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  var Systrace = _$$_REQUIRE(_dependencyMap[0], 'Systrace');\n\n  var infoLog = _$$_REQUIRE(_dependencyMap[1], 'infoLog');\n\n  var performanceNow = global.nativeQPLTimestamp || global.nativePerformanceNow || _$$_REQUIRE(_dependencyMap[2], 'fbjs/lib/performanceNow');\n\n  var timespans = {};\n  var extras = {};\n  var cookies = {};\n  var PRINT_TO_CONSOLE = false;\n  var PerformanceLogger = {\n    addTimespan: function addTimespan(key, lengthInMs, description) {\n      if (timespans[key]) {\n        if (__DEV__) {\n          infoLog('PerformanceLogger: Attempting to add a timespan that already exists ', key);\n        }\n\n        return;\n      }\n\n      timespans[key] = {\n        description: description,\n        totalTime: lengthInMs\n      };\n    },\n    startTimespan: function startTimespan(key, description) {\n      if (timespans[key]) {\n        if (__DEV__) {\n          infoLog('PerformanceLogger: Attempting to start a timespan that already exists ', key);\n        }\n\n        return;\n      }\n\n      timespans[key] = {\n        description: description,\n        startTime: performanceNow()\n      };\n      cookies[key] = Systrace.beginAsyncEvent(key);\n\n      if (PRINT_TO_CONSOLE) {\n        infoLog('PerformanceLogger.js', 'start: ' + key);\n      }\n    },\n    stopTimespan: function stopTimespan(key) {\n      var timespan = timespans[key];\n\n      if (!timespan || !timespan.startTime) {\n        if (__DEV__) {\n          infoLog('PerformanceLogger: Attempting to end a timespan that has not started ', key);\n        }\n\n        return;\n      }\n\n      if (timespan.endTime) {\n        if (__DEV__) {\n          infoLog('PerformanceLogger: Attempting to end a timespan that has already ended ', key);\n        }\n\n        return;\n      }\n\n      timespan.endTime = performanceNow();\n      timespan.totalTime = timespan.endTime - (timespan.startTime || 0);\n\n      if (PRINT_TO_CONSOLE) {\n        infoLog('PerformanceLogger.js', 'end: ' + key);\n      }\n\n      Systrace.endAsyncEvent(key, cookies[key]);\n      delete cookies[key];\n    },\n    clear: function clear() {\n      timespans = {};\n      extras = {};\n\n      if (PRINT_TO_CONSOLE) {\n        infoLog('PerformanceLogger.js', 'clear');\n      }\n    },\n    clearCompleted: function clearCompleted() {\n      for (var _key in timespans) {\n        if (timespans[_key].totalTime) {\n          delete timespans[_key];\n        }\n      }\n\n      extras = {};\n\n      if (PRINT_TO_CONSOLE) {\n        infoLog('PerformanceLogger.js', 'clearCompleted');\n      }\n    },\n    clearExceptTimespans: function clearExceptTimespans(keys) {\n      timespans = Object.keys(timespans).reduce(function (previous, key) {\n        if (keys.indexOf(key) !== -1) {\n          previous[key] = timespans[key];\n        }\n\n        return previous;\n      }, {});\n      extras = {};\n\n      if (PRINT_TO_CONSOLE) {\n        infoLog('PerformanceLogger.js', 'clearExceptTimespans', keys);\n      }\n    },\n    currentTimestamp: function currentTimestamp() {\n      return performanceNow();\n    },\n    getTimespans: function getTimespans() {\n      return timespans;\n    },\n    hasTimespan: function hasTimespan(key) {\n      return !!timespans[key];\n    },\n    logTimespans: function logTimespans() {\n      for (var _key2 in timespans) {\n        if (timespans[_key2].totalTime) {\n          infoLog(_key2 + ': ' + timespans[_key2].totalTime + 'ms');\n        }\n      }\n    },\n    addTimespans: function addTimespans(newTimespans, labels) {\n      for (var ii = 0, l = newTimespans.length; ii < l; ii += 2) {\n        var label = labels[ii / 2];\n        PerformanceLogger.addTimespan(label, newTimespans[ii + 1] - newTimespans[ii], label);\n      }\n    },\n    setExtra: function setExtra(key, value) {\n      if (extras[key]) {\n        if (__DEV__) {\n          infoLog('PerformanceLogger: Attempting to set an extra that already exists ', {\n            key: key,\n            currentValue: extras[key],\n            attemptedValue: value\n          });\n        }\n\n        return;\n      }\n\n      extras[key] = value;\n    },\n    getExtras: function getExtras() {\n      return extras;\n    },\n    logExtras: function logExtras() {\n      infoLog(extras);\n    }\n  };\n  module.exports = PerformanceLogger;\n});","map":[[2,0,10,0],[4,0,12,0],[4,6,12,6,"Systrace"],[4,17,12,17,"require"],[4,48,12,25],[4,58,12,17],[4,59,12,0],[6,0,14,0],[6,6,14,6,"infoLog"],[6,16,14,16,"require"],[6,47,14,24],[6,56,14,16],[6,57,14,0],[8,0,15,0],[8,6,15,6,"performanceNow"],[8,23,19,2,"global"],[8,30,19,9,"nativeQPLTimestamp"],[8,48,19,2],[8,52,20,2,"global"],[8,59,20,9,"nativePerformanceNow"],[8,79,19,2],[8,83,21,2,"require"],[8,114,21,10],[8,139,21,2],[8,140,15,0],[10,0,30,0],[10,6,30,4,"timespans"],[10,18,30,43],[10,20,30,0],[11,0,31,0],[11,6,31,4,"extras"],[11,15,31,35],[11,17,31,0],[12,0,32,0],[12,6,32,6,"cookies"],[12,16,32,41],[12,18,32,0],[13,0,34,0],[13,6,34,6,"PRINT_TO_CONSOLE"],[13,25,34,32],[13,30,34,0],[14,0,40,0],[14,6,40,6,"PerformanceLogger"],[14,26,40,26],[15,0,41,2,"addTimespan"],[15,15,40,26],[15,38,41,14,"key"],[15,41,40,26],[15,43,41,27,"lengthInMs"],[15,53,40,26],[15,55,41,47,"description"],[15,66,40,26],[15,68,41,69],[16,0,42,4],[16,10,42,8,"timespans"],[16,20,42,18,"key"],[16,23,42,8],[16,24,42,4],[16,26,42,24],[17,0,43,6],[17,12,43,10,"__DEV__"],[17,19,43,6],[17,21,43,19],[18,0,44,8,"infoLog"],[18,18,45,10],[18,88,44,8],[18,90,46,10,"key"],[18,93,44,8],[19,0,48,7],[21,0,49,6],[22,0,50,5],[24,0,52,4,"timespans"],[24,16,52,14,"key"],[24,19,52,4],[24,23,52,21],[25,0,53,6,"description"],[25,21,53,19,"description"],[25,32,52,21],[26,0,54,6,"totalTime"],[26,19,54,17,"lengthInMs"],[27,0,52,21],[27,7,52,4],[28,0,56,3],[28,5,40,26],[29,0,58,2,"startTimespan"],[29,17,40,26],[29,42,58,16,"key"],[29,45,40,26],[29,47,58,29,"description"],[29,58,40,26],[29,60,58,51],[30,0,59,4],[30,10,59,8,"timespans"],[30,20,59,18,"key"],[30,23,59,8],[30,24,59,4],[30,26,59,24],[31,0,60,6],[31,12,60,10,"__DEV__"],[31,19,60,6],[31,21,60,19],[32,0,61,8,"infoLog"],[32,18,62,10],[32,90,61,8],[32,92,63,10,"key"],[32,95,61,8],[33,0,65,7],[35,0,66,6],[36,0,67,5],[38,0,69,4,"timespans"],[38,16,69,14,"key"],[38,19,69,4],[38,23,69,21],[39,0,70,6,"description"],[39,21,70,19,"description"],[39,32,69,21],[40,0,71,6,"startTime"],[40,19,71,17,"performanceNow"],[41,0,69,21],[41,7,69,4],[42,0,73,4,"cookies"],[42,14,73,12,"key"],[42,17,73,4],[42,21,73,19,"Systrace"],[42,30,73,28,"beginAsyncEvent"],[42,45,73,19],[42,46,73,44,"key"],[42,49,73,19],[42,50,73,4],[44,0,74,4],[44,10,74,8,"PRINT_TO_CONSOLE"],[44,26,74,4],[44,28,74,26],[45,0,75,6,"infoLog"],[45,16,75,14],[45,38,75,6],[45,40,75,38],[45,52,75,50,"key"],[45,55,75,6],[46,0,76,5],[47,0,77,3],[47,5,40,26],[48,0,79,2,"stopTimespan"],[48,16,40,26],[48,40,79,15,"key"],[48,43,40,26],[48,45,79,28],[49,0,80,4],[49,10,80,10,"timespan"],[49,21,80,21,"timespans"],[49,31,80,31,"key"],[49,34,80,21],[49,35,80,4],[51,0,81,4],[51,10,81,8],[51,11,81,9,"timespan"],[51,19,81,8],[51,23,81,21],[51,24,81,22,"timespan"],[51,33,81,31,"startTime"],[51,42,81,4],[51,44,81,42],[52,0,82,6],[52,12,82,10,"__DEV__"],[52,19,82,6],[52,21,82,19],[53,0,83,8,"infoLog"],[53,18,84,10],[53,89,83,8],[53,91,85,10,"key"],[53,94,83,8],[54,0,87,7],[56,0,88,6],[57,0,89,5],[59,0,90,4],[59,10,90,8,"timespan"],[59,19,90,17,"endTime"],[59,26,90,4],[59,28,90,26],[60,0,91,6],[60,12,91,10,"__DEV__"],[60,19,91,6],[60,21,91,19],[61,0,92,8,"infoLog"],[61,18,93,10],[61,91,92,8],[61,93,94,10,"key"],[61,96,92,8],[62,0,96,7],[64,0,97,6],[65,0,98,5],[67,0,100,4,"timespan"],[67,15,100,13,"endTime"],[67,22,100,4],[67,25,100,23,"performanceNow"],[67,41,100,4],[68,0,101,4,"timespan"],[68,15,101,13,"totalTime"],[68,24,101,4],[68,27,101,25,"timespan"],[68,36,101,34,"endTime"],[68,43,101,25],[68,47,101,45,"timespan"],[68,56,101,54,"startTime"],[68,65,101,45],[68,69,101,67],[68,70,101,25],[68,71,101,4],[70,0,102,4],[70,10,102,8,"PRINT_TO_CONSOLE"],[70,26,102,4],[70,28,102,26],[71,0,103,6,"infoLog"],[71,16,103,14],[71,38,103,6],[71,40,103,38],[71,50,103,48,"key"],[71,53,103,6],[72,0,104,5],[74,0,106,4,"Systrace"],[74,15,106,13,"endAsyncEvent"],[74,28,106,4],[74,29,106,27,"key"],[74,32,106,4],[74,34,106,32,"cookies"],[74,42,106,40,"key"],[74,45,106,32],[74,46,106,4],[75,0,107,4],[75,13,107,11,"cookies"],[75,21,107,19,"key"],[75,24,107,11],[75,25,107,4],[76,0,108,3],[76,5,40,26],[77,0,110,2,"clear"],[77,9,40,26],[77,28,110,10],[78,0,111,4,"timespans"],[78,18,111,16],[78,20,111,4],[79,0,112,4,"extras"],[79,15,112,13],[79,17,112,4],[81,0,113,4],[81,10,113,8,"PRINT_TO_CONSOLE"],[81,26,113,4],[81,28,113,26],[82,0,114,6,"infoLog"],[82,16,114,14],[82,38,114,6],[82,40,114,38],[82,47,114,6],[83,0,115,5],[84,0,116,3],[84,5,40,26],[85,0,118,2,"clearCompleted"],[85,18,40,26],[85,46,118,19],[86,0,119,4],[86,11,119,9],[86,15,119,15,"key"],[86,19,119,4],[86,23,119,22,"timespans"],[86,32,119,4],[86,34,119,33],[87,0,120,6],[87,12,120,10,"timespans"],[87,22,120,20,"key"],[87,26,120,10],[87,28,120,25,"totalTime"],[87,37,120,6],[87,39,120,36],[88,0,121,8],[88,17,121,15,"timespans"],[88,27,121,25,"key"],[88,31,121,15],[88,32,121,8],[89,0,122,7],[90,0,123,5],[92,0,124,4,"extras"],[92,15,124,13],[92,17,124,4],[94,0,125,4],[94,10,125,8,"PRINT_TO_CONSOLE"],[94,26,125,4],[94,28,125,26],[95,0,126,6,"infoLog"],[95,16,126,14],[95,38,126,6],[95,40,126,38],[95,56,126,6],[96,0,127,5],[97,0,128,3],[97,5,40,26],[98,0,130,2,"clearExceptTimespans"],[98,24,40,26],[98,56,130,23,"keys"],[98,60,40,26],[98,62,130,44],[99,0,131,4,"timespans"],[99,18,131,16,"Object"],[99,25,131,23,"keys"],[99,29,131,16],[99,30,131,28,"timespans"],[99,39,131,16],[99,41,131,39,"reduce"],[99,47,131,16],[99,48,131,46],[99,58,131,55,"previous"],[99,66,131,46],[99,68,131,65,"key"],[99,71,131,46],[99,73,131,70],[100,0,132,6],[100,12,132,10,"keys"],[100,17,132,15,"indexOf"],[100,24,132,10],[100,25,132,23,"key"],[100,28,132,10],[100,34,132,32],[100,35,132,33],[100,36,132,6],[100,38,132,36],[101,0,133,8,"previous"],[101,19,133,17,"key"],[101,22,133,8],[101,26,133,24,"timespans"],[101,36,133,34,"key"],[101,39,133,24],[101,40,133,8],[102,0,134,7],[104,0,135,6],[104,15,135,13,"previous"],[104,23,135,6],[105,0,136,5],[105,7,131,16],[105,9,136,7],[105,11,131,16],[105,12,131,4],[106,0,137,4,"extras"],[106,15,137,13],[106,17,137,4],[108,0,138,4],[108,10,138,8,"PRINT_TO_CONSOLE"],[108,26,138,4],[108,28,138,26],[109,0,139,6,"infoLog"],[109,16,139,14],[109,38,139,6],[109,40,139,38],[109,62,139,6],[109,64,139,62,"keys"],[109,68,139,6],[110,0,140,5],[111,0,141,3],[111,5,40,26],[112,0,143,2,"currentTimestamp"],[112,20,40,26],[112,50,143,21],[113,0,144,4],[113,13,144,11,"performanceNow"],[113,29,144,4],[114,0,145,3],[114,5,40,26],[115,0,147,2,"getTimespans"],[115,16,40,26],[115,42,147,17],[116,0,148,4],[116,13,148,11,"timespans"],[116,22,148,4],[117,0,149,3],[117,5,40,26],[118,0,151,2,"hasTimespan"],[118,15,40,26],[118,38,151,14,"key"],[118,41,40,26],[118,43,151,27],[119,0,152,4],[119,13,152,11],[119,14,152,12],[119,15,152,13,"timespans"],[119,25,152,23,"key"],[119,28,152,13],[119,29,152,4],[120,0,153,3],[120,5,40,26],[121,0,155,2,"logTimespans"],[121,16,40,26],[121,42,155,17],[122,0,156,4],[122,11,156,9],[122,15,156,15,"key"],[122,20,156,4],[122,24,156,22,"timespans"],[122,33,156,4],[122,35,156,33],[123,0,157,6],[123,12,157,10,"timespans"],[123,22,157,20,"key"],[123,27,157,10],[123,29,157,25,"totalTime"],[123,38,157,6],[123,40,157,36],[124,0,158,8,"infoLog"],[124,18,158,16,"key"],[124,26,158,22],[124,30,158,16],[124,33,158,29,"timespans"],[124,43,158,39,"key"],[124,48,158,29],[124,50,158,44,"totalTime"],[124,59,158,16],[124,62,158,56],[124,66,158,8],[125,0,159,7],[126,0,160,5],[127,0,161,3],[127,5,40,26],[128,0,163,2,"addTimespans"],[128,16,40,26],[128,40,163,15,"newTimespans"],[128,52,40,26],[128,54,163,44,"labels"],[128,60,40,26],[128,62,163,67],[129,0,164,4],[129,11,164,9],[129,15,164,13,"ii"],[129,20,164,18],[129,21,164,9],[129,23,164,21,"l"],[129,27,164,25,"newTimespans"],[129,40,164,38,"length"],[129,46,164,4],[129,48,164,46,"ii"],[129,53,164,51,"l"],[129,54,164,4],[129,56,164,54,"ii"],[129,62,164,60],[129,63,164,4],[129,65,164,63],[130,0,165,6],[130,12,165,12,"label"],[130,20,165,20,"labels"],[130,27,165,27,"ii"],[130,32,165,32],[130,33,165,20],[130,34,165,6],[131,0,166,6,"PerformanceLogger"],[131,26,166,24,"addTimespan"],[131,37,166,6],[131,38,167,8,"label"],[131,43,166,6],[131,45,168,8,"newTimespans"],[131,58,168,21,"ii"],[131,63,168,26],[131,64,168,8],[131,68,168,31,"newTimespans"],[131,81,168,44,"ii"],[131,83,168,31],[131,84,166,6],[131,86,169,8,"label"],[131,91,166,6],[132,0,171,5],[133,0,172,3],[133,5,40,26],[134,0,174,2,"setExtra"],[134,12,40,26],[134,32,174,11,"key"],[134,35,40,26],[134,37,174,24,"value"],[134,42,40,26],[134,44,174,36],[135,0,175,4],[135,10,175,8,"extras"],[135,17,175,15,"key"],[135,20,175,8],[135,21,175,4],[135,23,175,21],[136,0,176,6],[136,12,176,10,"__DEV__"],[136,19,176,6],[136,21,176,19],[137,0,177,8,"infoLog"],[137,18,178,10],[137,86,177,8],[137,88,179,10],[138,0,179,11,"key"],[138,20,179,10],[139,0,179,16,"currentValue"],[139,26,179,30,"extras"],[139,33,179,37,"key"],[139,36,179,30],[139,37,179,10],[140,0,179,43,"attemptedValue"],[140,28,179,59,"value"],[141,0,179,10],[141,11,177,8],[142,0,181,7],[144,0,182,6],[145,0,183,5],[147,0,184,4,"extras"],[147,13,184,11,"key"],[147,16,184,4],[147,20,184,18,"value"],[147,25,184,4],[148,0,185,3],[148,5,40,26],[149,0,187,2,"getExtras"],[149,13,40,26],[149,36,187,14],[150,0,188,4],[150,13,188,11,"extras"],[150,19,188,4],[151,0,189,3],[151,5,40,26],[152,0,191,2,"logExtras"],[152,13,40,26],[152,36,191,14],[153,0,192,4,"infoLog"],[153,14,192,12,"extras"],[153,20,192,4],[154,0,193,3],[155,0,40,26],[155,3,40,0],[156,0,196,0,"module"],[156,9,196,7,"exports"],[156,16,196,0],[156,19,196,17,"PerformanceLogger"],[156,36,196,0]]},"type":"js/module"}]}