{"dependencies":[{"name":"prop-types","isAsync":false},{"name":"react","isAsync":false},{"name":"react-native","isAsync":false},{"name":"../config/colors","isAsync":false},{"name":"../config/ViewPropTypes","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"prop-types\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _colors = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../config/colors\"));\n\n  var _ViewPropTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../config/ViewPropTypes\"));\n\n  var _jsxFileName = \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/react-native-elements/src/badge/badge.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\n  var Badge = function Badge(props) {\n    var containerStyle = props.containerStyle,\n        textStyle = props.textStyle,\n        wrapperStyle = props.wrapperStyle,\n        onPress = props.onPress,\n        component = props.component,\n        value = props.value,\n        children = props.children,\n        element = props.element,\n        attributes = _objectWithoutProperties(props, [\"containerStyle\", \"textStyle\", \"wrapperStyle\", \"onPress\", \"component\", \"value\", \"children\", \"element\"]);\n\n    if (element) return element;\n    var Component = _reactNative.View;\n\n    var childElement = _react.default.createElement(_reactNative.Text, {\n      style: [styles.text, textStyle && textStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      }\n    }, value);\n\n    if (children) {\n      childElement = children;\n    }\n\n    if (children && value) {\n      console.error('Badge can only contain either child element or value');\n    }\n\n    if (!component && onPress) {\n      Component = _reactNative.TouchableOpacity;\n    }\n\n    if (_react.default.isValidElement(component)) {\n      Component = component;\n    }\n\n    return _react.default.createElement(_reactNative.View, {\n      style: [styles.container && wrapperStyle && wrapperStyle],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      }\n    }, _react.default.createElement(Component, _extends({}, attributes, {\n      style: [styles.badge, containerStyle && containerStyle],\n      onPress: onPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      }\n    }), childElement));\n  };\n\n  Badge.propTypes = {\n    containerStyle: _ViewPropTypes.default.style,\n    wrapperStyle: _ViewPropTypes.default.style,\n    textStyle: _reactNative.Text.propTypes.style,\n    children: _propTypes.default.oneOfType([_propTypes.default.element, _propTypes.default.arrayOf(_propTypes.default.element)]),\n    value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n    onPress: _propTypes.default.func,\n    component: _propTypes.default.func,\n    element: _propTypes.default.element\n  };\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flexDirection: 'row'\n    },\n    badge: {\n      padding: 12,\n      paddingTop: 3,\n      paddingBottom: 3,\n      backgroundColor: _colors.default.grey1,\n      borderRadius: 20,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    text: {\n      fontSize: 14,\n      color: 'white'\n    }\n  });\n\n  var _default = Badge;\n  exports.default = _default;\n});","map":[[7,0,2,0],[9,0,3,0],[11,0,4,0],[13,0,5,0],[15,0,6,0],[25,0,8,0],[25,6,8,6,"Badge"],[25,14,8,14],[25,23,8,6,"Badge"],[25,28,8,14],[25,36,8,23],[26,0,8,23],[26,8,10,4,"containerStyle"],[26,22,8,23],[26,25,19,6,"props"],[26,30,8,23],[26,31,10,4,"containerStyle"],[26,45,8,23],[27,0,8,23],[27,8,11,4,"textStyle"],[27,17,8,23],[27,20,19,6,"props"],[27,25,8,23],[27,26,11,4,"textStyle"],[27,35,8,23],[28,0,8,23],[28,8,12,4,"wrapperStyle"],[28,20,8,23],[28,23,19,6,"props"],[28,28,8,23],[28,29,12,4,"wrapperStyle"],[28,41,8,23],[29,0,8,23],[29,8,13,4,"onPress"],[29,15,8,23],[29,18,19,6,"props"],[29,23,8,23],[29,24,13,4,"onPress"],[29,31,8,23],[30,0,8,23],[30,8,14,4,"component"],[30,17,8,23],[30,20,19,6,"props"],[30,25,8,23],[30,26,14,4,"component"],[30,35,8,23],[31,0,8,23],[31,8,15,4,"value"],[31,13,8,23],[31,16,19,6,"props"],[31,21,8,23],[31,22,15,4,"value"],[31,27,8,23],[32,0,8,23],[32,8,16,4,"children"],[32,16,8,23],[32,19,19,6,"props"],[32,24,8,23],[32,25,16,4,"children"],[32,33,8,23],[33,0,8,23],[33,8,17,4,"element"],[33,15,8,23],[33,18,19,6,"props"],[33,23,8,23],[33,24,17,4,"element"],[33,31,8,23],[34,0,8,23],[34,8,18,7,"attributes"],[34,18,8,23],[34,46,19,6,"props"],[34,51,8,23],[36,0,21,2],[36,8,21,6,"element"],[36,15,21,2],[36,17,21,15],[36,24,21,22,"element"],[36,31,21,15],[37,0,23,2],[37,8,23,6,"Component"],[37,20,23,18,"View"],[37,37,23,2],[39,0,24,2],[39,8,24,6,"childElement"],[39,23,25,4],[39,52,25,5],[39,69,25,4],[40,0,25,10],[40,13,25,17],[40,14,25,18,"styles"],[40,21,25,25,"text"],[40,25,25,17],[40,27,25,31,"textStyle"],[40,40,25,44,"textStyle"],[40,49,25,17],[40,50,25,4],[41,0,25,4],[42,0,25,4],[43,0,25,4],[44,0,25,4],[45,0,25,4],[45,7,26,7,"value"],[45,12,25,4],[45,13,24,2],[47,0,30,2],[47,8,30,6,"children"],[47,16,30,2],[47,18,30,16],[48,0,31,4,"childElement"],[48,21,31,19,"children"],[48,29,31,4],[49,0,32,3],[51,0,34,2],[51,8,34,6,"children"],[51,20,34,18,"value"],[51,25,34,2],[51,27,34,25],[52,0,35,4,"console"],[52,14,35,12,"error"],[52,19,35,4],[52,20,35,18],[52,74,35,4],[53,0,36,3],[55,0,38,2],[55,8,38,6],[55,9,38,7,"component"],[55,18,38,6],[55,22,38,20,"onPress"],[55,29,38,2],[55,31,38,29],[56,0,39,4,"Component"],[56,18,39,16,"TouchableOpacity"],[56,47,39,4],[57,0,40,3],[59,0,42,2],[59,8,42,6,"React"],[59,23,42,12,"isValidElement"],[59,37,42,6],[59,38,42,27,"component"],[59,47,42,6],[59,48,42,2],[59,50,42,39],[60,0,43,4,"Component"],[60,18,43,16,"component"],[60,27,43,4],[61,0,44,3],[63,0,46,2],[63,11,47,4],[63,40,47,5],[63,57,47,4],[64,0,47,10],[64,13,47,17],[64,14,47,18,"styles"],[64,21,47,25,"container"],[64,30,47,18],[64,34,47,38,"wrapperStyle"],[64,46,47,18],[64,50,47,54,"wrapperStyle"],[64,62,47,17],[64,63,47,4],[65,0,47,4],[66,0,47,4],[67,0,47,4],[68,0,47,4],[69,0,47,4],[69,7,48,6],[69,36,48,7],[69,45,48,6],[69,60,49,12,"attributes"],[69,70,48,6],[70,0,50,8],[70,13,50,15],[70,14,50,16,"styles"],[70,21,50,23,"badge"],[70,26,50,15],[70,28,50,30,"containerStyle"],[70,46,50,48,"containerStyle"],[70,60,50,15],[70,61,48,6],[71,0,51,8],[71,15,51,17,"onPress"],[71,22,48,6],[72,0,48,6],[73,0,48,6],[74,0,48,6],[75,0,48,6],[76,0,48,6],[76,8,53,9,"childElement"],[76,20,48,6],[76,21,47,4],[76,22,46,2],[77,0,57,1],[77,3,8,0],[79,0,59,0,"Badge"],[79,8,59,6,"propTypes"],[79,17,59,0],[79,20,59,18],[80,0,60,2,"containerStyle"],[80,20,60,18,"ViewPropTypes"],[80,43,60,32,"style"],[80,48,59,18],[81,0,61,2,"wrapperStyle"],[81,18,61,16,"ViewPropTypes"],[81,41,61,30,"style"],[81,46,59,18],[82,0,62,2,"textStyle"],[82,15,62,13,"Text"],[82,33,62,18,"propTypes"],[82,42,62,13],[82,43,62,28,"style"],[82,48,59,18],[83,0,63,2,"children"],[83,14,63,12,"PropTypes"],[83,33,63,22,"oneOfType"],[83,42,63,12],[83,43,63,32],[83,44,64,4,"PropTypes"],[83,63,64,14,"element"],[83,70,63,32],[83,72,65,4,"PropTypes"],[83,91,65,14,"arrayOf"],[83,98,65,4],[83,99,65,22,"PropTypes"],[83,118,65,32,"element"],[83,125,65,4],[83,126,63,32],[83,127,63,12],[83,128,59,18],[84,0,67,2,"value"],[84,11,67,9,"PropTypes"],[84,30,67,19,"oneOfType"],[84,39,67,9],[84,40,67,29],[84,41,67,30,"PropTypes"],[84,60,67,40,"string"],[84,66,67,29],[84,68,67,48,"PropTypes"],[84,87,67,58,"number"],[84,93,67,29],[84,94,67,9],[84,95,59,18],[85,0,68,2,"onPress"],[85,13,68,11,"PropTypes"],[85,32,68,21,"func"],[85,36,59,18],[86,0,69,2,"component"],[86,15,69,13,"PropTypes"],[86,34,69,23,"func"],[86,38,59,18],[87,0,70,2,"element"],[87,13,70,11,"PropTypes"],[87,32,70,21,"element"],[88,0,59,18],[88,3,59,0],[90,0,73,0],[90,6,73,6,"styles"],[90,15,73,15,"StyleSheet"],[90,39,73,26,"create"],[90,45,73,15],[90,46,73,33],[91,0,74,2,"container"],[91,15,74,13],[92,0,75,4,"flexDirection"],[92,21,75,19],[93,0,74,13],[93,5,73,33],[94,0,77,2,"badge"],[94,11,77,9],[95,0,78,4,"padding"],[95,15,78,13],[95,17,77,9],[96,0,79,4,"paddingTop"],[96,18,79,16],[96,19,77,9],[97,0,80,4,"paddingBottom"],[97,21,80,19],[97,22,77,9],[98,0,81,4,"backgroundColor"],[98,23,81,21,"colors"],[98,39,81,28,"grey1"],[98,44,77,9],[99,0,82,4,"borderRadius"],[99,20,82,18],[99,22,77,9],[100,0,83,4,"alignItems"],[100,18,83,16],[100,26,77,9],[101,0,84,4,"justifyContent"],[101,22,84,20],[102,0,77,9],[102,5,73,33],[103,0,86,2,"text"],[103,10,86,8],[104,0,87,4,"fontSize"],[104,16,87,14],[104,18,86,8],[105,0,88,4,"color"],[105,13,88,11],[106,0,86,8],[107,0,73,33],[107,3,73,15],[107,4,73,0],[109,17,92,15,"Badge"],[109,22]]},"type":"js/module"}]}