{"dependencies":[{"name":"NativeEventEmitter","isAsync":false},{"name":"NativeModules","isAsync":false},{"name":"Platform","isAsync":false},{"name":"fbjs/lib/invariant","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  var NativeEventEmitter = _$$_REQUIRE(_dependencyMap[0], 'NativeEventEmitter');\n\n  var NativeModules = _$$_REQUIRE(_dependencyMap[1], 'NativeModules');\n\n  var Platform = _$$_REQUIRE(_dependencyMap[2], 'Platform');\n\n  var invariant = _$$_REQUIRE(_dependencyMap[3], 'fbjs/lib/invariant');\n\n  var LinkingManager = Platform.OS === 'android' ? NativeModules.IntentAndroid : NativeModules.LinkingManager;\n\n  var Linking = function (_NativeEventEmitter) {\n    function Linking() {\n      _classCallCheck(this, Linking);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(Linking).call(this, LinkingManager));\n    }\n\n    _createClass(Linking, [{\n      key: \"addEventListener\",\n      value: function addEventListener(type, handler) {\n        this.addListener(type, handler);\n      }\n    }, {\n      key: \"removeEventListener\",\n      value: function removeEventListener(type, handler) {\n        this.removeListener(type, handler);\n      }\n    }, {\n      key: \"openURL\",\n      value: function openURL(url) {\n        this._validateURL(url);\n\n        return LinkingManager.openURL(url);\n      }\n    }, {\n      key: \"canOpenURL\",\n      value: function canOpenURL(url) {\n        this._validateURL(url);\n\n        return LinkingManager.canOpenURL(url);\n      }\n    }, {\n      key: \"getInitialURL\",\n      value: function getInitialURL() {\n        return LinkingManager.getInitialURL();\n      }\n    }, {\n      key: \"_validateURL\",\n      value: function _validateURL(url) {\n        invariant(typeof url === 'string', 'Invalid URL: should be a string. Was: ' + url);\n        invariant(url, 'Invalid URL: cannot be empty');\n      }\n    }]);\n\n    _inherits(Linking, _NativeEventEmitter);\n\n    return Linking;\n  }(NativeEventEmitter);\n\n  module.exports = new Linking();\n});","map":[[2,0,11,0],[20,0,13,0],[20,6,13,6,"NativeEventEmitter"],[20,27,13,27,"require"],[20,58,13,35],[20,78,13,27],[20,79,13,0],[22,0,14,0],[22,6,14,6,"NativeModules"],[22,22,14,22,"require"],[22,53,14,30],[22,68,14,22],[22,69,14,0],[24,0,15,0],[24,6,15,6,"Platform"],[24,17,15,17,"require"],[24,48,15,25],[24,58,15,17],[24,59,15,0],[26,0,17,0],[26,6,17,6,"invariant"],[26,18,17,18,"require"],[26,49,17,26],[26,69,17,18],[26,70,17,0],[28,0,19,0],[28,6,19,6,"LinkingManager"],[28,23,20,2,"Platform"],[28,32,20,11,"OS"],[28,34,20,2],[28,39,20,18],[28,48,20,2],[28,51,21,6,"NativeModules"],[28,65,21,20,"IntentAndroid"],[28,78,20,2],[28,81,22,6,"NativeModules"],[28,95,22,20,"LinkingManager"],[28,109,19,0],[30,6,30,6,"Linking"],[30,13],[31,0,31,2],[31,23,31,16],[32,0,31,16],[34,0,31,16],[34,82,32,10,"LinkingManager"],[34,96,31,16],[35,0,33,3],[39,39,41,19,"type"],[39,43],[39,45,41,33,"handler"],[39,52],[39,54,41,52],[40,0,42,4],[40,13,42,9,"addListener"],[40,24,42,4],[40,25,42,21,"type"],[40,29,42,4],[40,31,42,27,"handler"],[40,38,42,4],[41,0,43,3],[44,42,50,22,"type"],[44,46],[44,48,50,36,"handler"],[44,55],[44,57,50,55],[45,0,51,4],[45,13,51,9,"removeListener"],[45,27,51,4],[45,28,51,24,"type"],[45,32,51,4],[45,34,51,30,"handler"],[45,41,51,4],[46,0,52,3],[49,30,59,10,"url"],[49,33],[49,35,59,37],[50,0,60,4],[50,13,60,9,"_validateURL"],[50,25,60,4],[50,26,60,22,"url"],[50,29,60,4],[52,0,61,4],[52,15,61,11,"LinkingManager"],[52,30,61,26,"openURL"],[52,37,61,11],[52,38,61,34,"url"],[52,41,61,11],[52,42,61,4],[53,0,62,3],[56,33,69,13,"url"],[56,36],[56,38,69,44],[57,0,70,4],[57,13,70,9,"_validateURL"],[57,25,70,4],[57,26,70,22,"url"],[57,29,70,4],[59,0,71,4],[59,15,71,11,"LinkingManager"],[59,30,71,26,"canOpenURL"],[59,40,71,11],[59,41,71,37,"url"],[59,44,71,11],[59,45,71,4],[60,0,72,3],[63,38,80,36],[64,0,81,4],[64,15,81,11,"LinkingManager"],[64,30,81,26,"getInitialURL"],[64,43,81,11],[64,45,81,4],[65,0,82,3],[68,35,84,15,"url"],[68,38],[68,40,84,28],[69,0,85,4,"invariant"],[69,18,86,6],[69,25,86,13,"url"],[69,28,86,6],[69,33,86,21],[69,41,85,4],[69,43,87,6],[69,86,87,49,"url"],[69,89,85,4],[70,0,89,4,"invariant"],[70,18,89,14,"url"],[70,21,89,4],[70,23,89,19],[70,53,89,4],[71,0,90,3],[77,4,30,22,"NativeEventEmitter"],[77,22],[79,0,93,0,"module"],[79,9,93,7,"exports"],[79,16,93,0],[79,19,93,17],[79,23,93,21,"Linking"],[79,30,93,17],[79,32,93,0]]},"type":"js/module"}]}