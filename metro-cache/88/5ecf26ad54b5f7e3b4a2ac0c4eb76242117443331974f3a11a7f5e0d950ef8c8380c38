{"dependencies":[{"name":"react-navigation","isAsync":false},{"name":"./DrawerActions","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _reactNavigation = _$$_REQUIRE(_dependencyMap[0], \"react-navigation\");\n\n  var _DrawerActions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./DrawerActions\"));\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  function withDefaultValue(obj, key, defaultValue) {\n    if (obj.hasOwnProperty(key) && typeof obj[key] !== 'undefined') {\n      return obj;\n    }\n\n    obj[key] = defaultValue;\n    return obj;\n  }\n\n  var getActiveRouteKey = function getActiveRouteKey(route) {\n    if (route.routes && route.routes[route.index]) {\n      return getActiveRouteKey(route.routes[route.index]);\n    }\n\n    return route.key;\n  };\n\n  var _default = function _default(routeConfigs) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    config = _objectSpread({}, config);\n    config = withDefaultValue(config, 'resetOnBlur', false);\n    config = withDefaultValue(config, 'backBehavior', 'initialRoute');\n    var switchRouter = (0, _reactNavigation.SwitchRouter)(routeConfigs, config);\n    return _objectSpread({}, switchRouter, {\n      getActionCreators: function getActionCreators(route, navStateKey) {\n        return _objectSpread({\n          openDrawer: function openDrawer() {\n            return _DrawerActions.default.openDrawer({\n              key: navStateKey\n            });\n          },\n          closeDrawer: function closeDrawer() {\n            return _DrawerActions.default.closeDrawer({\n              key: navStateKey\n            });\n          },\n          toggleDrawer: function toggleDrawer() {\n            return _DrawerActions.default.toggleDrawer({\n              key: navStateKey\n            });\n          }\n        }, switchRouter.getActionCreators(route, navStateKey));\n      },\n      getStateForAction: function getStateForAction(action, state) {\n        if (!state) {\n          return _objectSpread({}, switchRouter.getStateForAction(action, undefined), {\n            isDrawerOpen: false,\n            openId: 0,\n            closeId: 0,\n            toggleId: 0\n          });\n        }\n\n        var isRouterTargeted = action.key == null || action.key === state.key;\n\n        if (isRouterTargeted) {\n          if (action.type === _DrawerActions.default.DRAWER_CLOSED) {\n            return _objectSpread({}, state, {\n              isDrawerOpen: false\n            });\n          }\n\n          if (action.type === _DrawerActions.default.DRAWER_OPENED) {\n            return _objectSpread({}, state, {\n              isDrawerOpen: true\n            });\n          }\n\n          if (action.type === _DrawerActions.default.CLOSE_DRAWER) {\n            return _objectSpread({}, state, {\n              closeId: state.closeId + 1\n            });\n          }\n\n          if (action.type === _reactNavigation.NavigationActions.BACK && state.isDrawerOpen) {\n            return _objectSpread({}, state, {\n              closeId: state.closeId + 1\n            });\n          }\n\n          if (action.type === _DrawerActions.default.OPEN_DRAWER) {\n            return _objectSpread({}, state, {\n              openId: state.openId + 1\n            });\n          }\n\n          if (action.type === _DrawerActions.default.TOGGLE_DRAWER) {\n            return _objectSpread({}, state, {\n              toggleId: state.toggleId + 1\n            });\n          }\n        }\n\n        var switchedState = switchRouter.getStateForAction(action, state);\n\n        if (switchedState === null) {\n          return null;\n        }\n\n        if (switchedState !== state) {\n          if (getActiveRouteKey(switchedState) !== getActiveRouteKey(state)) {\n            return _objectSpread({}, switchedState, {\n              closeId: state.closeId + 1\n            });\n          }\n\n          return switchedState;\n        }\n\n        return state;\n      }\n    });\n  };\n\n  exports.default = _default;\n});","map":[[7,0,1,0],[9,0,2,0],[17,0,4,0],[17,11,4,9,"withDefaultValue"],[17,27,4,0],[17,28,4,26,"obj"],[17,31,4,0],[17,33,4,31,"key"],[17,36,4,0],[17,38,4,36,"defaultValue"],[17,50,4,0],[17,52,4,50],[18,0,5,2],[18,8,5,6,"obj"],[18,12,5,10,"hasOwnProperty"],[18,26,5,6],[18,27,5,25,"key"],[18,30,5,6],[18,35,5,33],[18,42,5,40,"obj"],[18,46,5,44,"key"],[18,49,5,40],[18,50,5,33],[18,55,5,53],[18,66,5,2],[18,68,5,66],[19,0,6,4],[19,13,6,11,"obj"],[19,16,6,4],[20,0,7,3],[22,0,9,2,"obj"],[22,8,9,6,"key"],[22,11,9,2],[22,15,9,13,"defaultValue"],[22,27,9,2],[23,0,10,2],[23,11,10,9,"obj"],[23,14,10,2],[24,0,11,1],[26,0,13,0],[26,6,13,6,"getActiveRouteKey"],[26,26,13,26],[26,35,13,6,"getActiveRouteKey"],[26,52,13,26],[26,60,13,35],[27,0,14,2],[27,8,14,6,"route"],[27,14,14,12,"routes"],[27,20,14,6],[27,24,14,22,"route"],[27,30,14,28,"routes"],[27,36,14,22],[27,37,14,35,"route"],[27,43,14,41,"index"],[27,48,14,22],[27,49,14,2],[27,51,14,49],[28,0,15,4],[28,13,15,11,"getActiveRouteKey"],[28,31,15,29,"route"],[28,37,15,35,"routes"],[28,43,15,29],[28,44,15,42,"route"],[28,50,15,48,"index"],[28,55,15,29],[28,56,15,11],[28,57,15,4],[29,0,16,3],[31,0,17,2],[31,11,17,9,"route"],[31,17,17,15,"key"],[31,20,17,2],[32,0,18,1],[32,3,13,0],[34,17,20,16],[34,35,20,17,"routeConfigs"],[34,47,20,16],[34,49,20,47],[35,0,20,47],[35,8,20,31,"config"],[35,14,20,47],[35,85,20,40],[35,87,20,47],[36,0,21,2,"config"],[36,31,21,16,"config"],[36,37,21,2],[37,0,22,2,"config"],[37,13,22,11,"withDefaultValue"],[37,30,22,28,"config"],[37,36,22,11],[37,38,22,36],[37,51,22,11],[37,53,22,51],[37,58,22,11],[37,59,22,2],[38,0,23,2,"config"],[38,13,23,11,"withDefaultValue"],[38,30,23,28,"config"],[38,36,23,11],[38,38,23,36],[38,52,23,11],[38,54,23,52],[38,68,23,11],[38,69,23,2],[39,0,25,2],[39,8,25,8,"switchRouter"],[39,23,25,23],[39,58,25,36,"routeConfigs"],[39,70,25,23],[39,72,25,50,"config"],[39,78,25,23],[39,79,25,2],[40,0,27,2],[40,29,28,7,"switchRouter"],[40,41,27,2],[41,0,30,4,"getActionCreators"],[41,23,27,2],[41,52,30,22,"route"],[41,57,27,2],[41,59,30,29,"navStateKey"],[41,70,27,2],[41,72,30,42],[42,0,31,6],[43,0,32,8,"openDrawer"],[43,22,32,20],[44,0,32,20],[44,19,32,26,"DrawerActions"],[44,42,32,40,"openDrawer"],[44,52,32,26],[44,53,32,51],[45,0,32,53,"key"],[45,19,32,58,"navStateKey"],[46,0,32,51],[46,13,32,26],[46,14,32,20],[47,0,32,20],[47,11,31,6],[48,0,33,8,"closeDrawer"],[48,23,33,21],[49,0,33,21],[49,19,33,27,"DrawerActions"],[49,42,33,41,"closeDrawer"],[49,53,33,27],[49,54,33,53],[50,0,33,55,"key"],[50,19,33,60,"navStateKey"],[51,0,33,53],[51,13,33,27],[51,14,33,21],[52,0,33,21],[52,11,31,6],[53,0,34,8,"toggleDrawer"],[53,24,34,22],[54,0,34,22],[54,19,34,28,"DrawerActions"],[54,42,34,42,"toggleDrawer"],[54,54,34,28],[54,55,34,55],[55,0,34,57,"key"],[55,19,34,62,"navStateKey"],[56,0,34,55],[56,13,34,28],[56,14,34,22],[57,0,34,22],[58,0,31,6],[58,11,35,11,"switchRouter"],[58,24,35,24,"getActionCreators"],[58,41,35,11],[58,42,35,42,"route"],[58,47,35,11],[58,49,35,49,"navStateKey"],[58,60,35,11],[58,61,31,6],[59,0,37,5],[59,7,27,2],[60,0,39,4,"getStateForAction"],[60,23,27,2],[60,52,39,22,"action"],[60,58,27,2],[60,60,39,30,"state"],[60,65,27,2],[60,67,39,37],[61,0,41,6],[61,12,41,10],[61,13,41,11,"state"],[61,18,41,6],[61,20,41,18],[62,0,42,8],[62,35,43,13,"switchRouter"],[62,48,43,26,"getStateForAction"],[62,65,43,13],[62,66,43,44,"action"],[62,72,43,13],[62,74,43,52,"undefined"],[62,83,43,13],[62,84,42,8],[63,0,44,10,"isDrawerOpen"],[63,26,44,24],[63,31,42,8],[64,0,45,10,"openId"],[64,20,45,18],[64,21,42,8],[65,0,46,10,"closeId"],[65,21,46,19],[65,22,42,8],[66,0,47,10,"toggleId"],[66,22,47,20],[67,0,42,8],[68,0,49,7],[70,0,51,6],[70,12,51,12,"isRouterTargeted"],[70,31,51,31,"action"],[70,38,51,38,"key"],[70,41,51,31],[70,45,51,45],[70,49,51,31],[70,53,51,53,"action"],[70,60,51,60,"key"],[70,63,51,53],[70,68,51,68,"state"],[70,74,51,74,"key"],[70,77,51,6],[72,0,53,6],[72,12,53,10,"isRouterTargeted"],[72,28,53,6],[72,30,53,28],[73,0,56,8],[73,14,56,12,"action"],[73,21,56,19,"type"],[73,25,56,12],[73,30,56,28,"DrawerActions"],[73,53,56,42,"DRAWER_CLOSED"],[73,66,56,8],[73,68,56,57],[74,0,57,10],[74,37,58,15,"state"],[74,42,57,10],[75,0,59,12,"isDrawerOpen"],[75,28,59,26],[76,0,57,10],[77,0,61,9],[79,0,63,8],[79,14,63,12,"action"],[79,21,63,19,"type"],[79,25,63,12],[79,30,63,28,"DrawerActions"],[79,53,63,42,"DRAWER_OPENED"],[79,66,63,8],[79,68,63,57],[80,0,64,10],[80,37,65,15,"state"],[80,42,64,10],[81,0,66,12,"isDrawerOpen"],[81,28,66,26],[82,0,64,10],[83,0,68,9],[85,0,70,8],[85,14,70,12,"action"],[85,21,70,19,"type"],[85,25,70,12],[85,30,70,28,"DrawerActions"],[85,53,70,42,"CLOSE_DRAWER"],[85,65,70,8],[85,67,70,56],[86,0,71,10],[86,37,72,15,"state"],[86,42,71,10],[87,0,73,12,"closeId"],[87,23,73,21,"state"],[87,29,73,27,"closeId"],[87,36,73,21],[87,39,73,37],[88,0,71,10],[89,0,75,9],[91,0,77,8],[91,14,77,12,"action"],[91,21,77,19,"type"],[91,25,77,12],[91,30,77,28,"NavigationActions"],[91,65,77,46,"BACK"],[91,69,77,12],[91,73,77,54,"state"],[91,79,77,60,"isDrawerOpen"],[91,91,77,8],[91,93,77,74],[92,0,78,10],[92,37,79,15,"state"],[92,42,78,10],[93,0,80,12,"closeId"],[93,23,80,21,"state"],[93,29,80,27,"closeId"],[93,36,80,21],[93,39,80,37],[94,0,78,10],[95,0,82,9],[97,0,84,8],[97,14,84,12,"action"],[97,21,84,19,"type"],[97,25,84,12],[97,30,84,28,"DrawerActions"],[97,53,84,42,"OPEN_DRAWER"],[97,64,84,8],[97,66,84,55],[98,0,85,10],[98,37,86,15,"state"],[98,42,85,10],[99,0,87,12,"openId"],[99,22,87,20,"state"],[99,28,87,26,"openId"],[99,34,87,20],[99,37,87,35],[100,0,85,10],[101,0,89,9],[103,0,91,8],[103,14,91,12,"action"],[103,21,91,19,"type"],[103,25,91,12],[103,30,91,28,"DrawerActions"],[103,53,91,42,"TOGGLE_DRAWER"],[103,66,91,8],[103,68,91,57],[104,0,92,10],[104,37,93,15,"state"],[104,42,92,10],[105,0,94,12,"toggleId"],[105,24,94,22,"state"],[105,30,94,28,"toggleId"],[105,38,94,22],[105,41,94,39],[106,0,92,10],[107,0,96,9],[108,0,97,7],[110,0,100,6],[110,12,100,12,"switchedState"],[110,28,100,28,"switchRouter"],[110,41,100,41,"getStateForAction"],[110,58,100,28],[110,59,100,59,"action"],[110,65,100,28],[110,67,100,67,"state"],[110,72,100,28],[110,73,100,6],[112,0,102,6],[112,12,102,10,"switchedState"],[112,30,102,28],[112,34,102,6],[112,36,102,34],[113,0,104,8],[113,17,104,15],[113,21,104,8],[114,0,105,7],[116,0,108,6],[116,12,108,10,"switchedState"],[116,30,108,28,"state"],[116,35,108,6],[116,37,108,35],[117,0,109,8],[117,14,109,12,"getActiveRouteKey"],[117,32,109,30,"switchedState"],[117,45,109,12],[117,51,109,49,"getActiveRouteKey"],[117,69,109,67,"state"],[117,74,109,49],[117,75,109,8],[117,77,109,75],[118,0,111,10],[118,37,112,15,"switchedState"],[118,50,111,10],[119,0,113,12,"closeId"],[119,23,113,21,"state"],[119,29,113,27,"closeId"],[119,36,113,21],[119,39,113,37],[120,0,111,10],[121,0,115,9],[123,0,120,8],[123,17,120,15,"switchedState"],[123,30,120,8],[124,0,121,7],[126,0,123,6],[126,15,123,13,"state"],[126,20,123,6],[127,0,124,5],[128,0,27,2],[129,0,126,1],[129,3]]},"type":"js/module"}]}