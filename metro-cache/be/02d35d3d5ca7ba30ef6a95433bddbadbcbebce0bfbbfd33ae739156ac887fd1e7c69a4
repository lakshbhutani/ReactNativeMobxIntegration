{"dependencies":[{"name":"react","isAsync":false},{"name":"./../../../../react-transform-hmr/lib/index.js","isAsync":false},{"name":"React","isAsync":false},{"name":"prop-types","isAsync":false},{"name":"ColorPropType","isAsync":false},{"name":"Platform","isAsync":false},{"name":"processColor","isAsync":false},{"name":"NativeModules","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _default = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"react\")).default;\n\n  var _reactTransformHmrLibIndexJs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../../../react-transform-hmr/lib/index.js\")).default;\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  var _components = {\n    StatusBar: {\n      displayName: \"StatusBar\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = _reactTransformHmrLibIndexJs({\n    filename: \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/react-native/Libraries/Components/StatusBar/StatusBar.js\",\n    components: _components,\n    locals: [module],\n    imports: [_default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  var React = _$$_REQUIRE(_dependencyMap[2], 'React');\n\n  var PropTypes = _$$_REQUIRE(_dependencyMap[3], 'prop-types');\n\n  var ColorPropType = _$$_REQUIRE(_dependencyMap[4], 'ColorPropType');\n\n  var Platform = _$$_REQUIRE(_dependencyMap[5], 'Platform');\n\n  var processColor = _$$_REQUIRE(_dependencyMap[6], 'processColor');\n\n  var StatusBarManager = _$$_REQUIRE(_dependencyMap[7], 'NativeModules').StatusBarManager;\n\n  function mergePropsStack(propsStack, defaultValues) {\n    return propsStack.reduce(function (prev, cur) {\n      for (var prop in cur) {\n        if (cur[prop] != null) {\n          prev[prop] = cur[prop];\n        }\n      }\n\n      return prev;\n    }, _extends({}, defaultValues));\n  }\n\n  function createStackEntry(props) {\n    return {\n      backgroundColor: props.backgroundColor != null ? {\n        value: props.backgroundColor,\n        animated: props.animated\n      } : null,\n      barStyle: props.barStyle != null ? {\n        value: props.barStyle,\n        animated: props.animated\n      } : null,\n      translucent: props.translucent,\n      hidden: props.hidden != null ? {\n        value: props.hidden,\n        animated: props.animated,\n        transition: props.showHideTransition\n      } : null,\n      networkActivityIndicatorVisible: props.networkActivityIndicatorVisible\n    };\n  }\n\n  var StatusBar = function (_React$Component) {\n    function StatusBar() {\n      var _getPrototypeOf2;\n\n      var _temp, _this;\n\n      _classCallCheck(this, StatusBar);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StatusBar)).call.apply(_getPrototypeOf2, [this].concat(args))), _this._stackEntry = null, _this._updatePropsStack = function () {\n        clearImmediate(StatusBar._updateImmediate);\n        StatusBar._updateImmediate = setImmediate(function () {\n          var oldProps = StatusBar._currentValues;\n          var mergedProps = mergePropsStack(StatusBar._propsStack, StatusBar._defaultProps);\n\n          if (Platform.OS === 'ios') {\n            if (!oldProps || oldProps.barStyle.value !== mergedProps.barStyle.value) {\n              StatusBarManager.setStyle(mergedProps.barStyle.value, mergedProps.barStyle.animated);\n            }\n\n            if (!oldProps || oldProps.hidden.value !== mergedProps.hidden.value) {\n              StatusBarManager.setHidden(mergedProps.hidden.value, mergedProps.hidden.animated ? mergedProps.hidden.transition : 'none');\n            }\n\n            if (!oldProps || oldProps.networkActivityIndicatorVisible !== mergedProps.networkActivityIndicatorVisible) {\n              StatusBarManager.setNetworkActivityIndicatorVisible(mergedProps.networkActivityIndicatorVisible);\n            }\n          } else if (Platform.OS === 'android') {\n            if (!oldProps || oldProps.barStyle.value !== mergedProps.barStyle.value) {\n              StatusBarManager.setStyle(mergedProps.barStyle.value);\n            }\n\n            if (!oldProps || oldProps.backgroundColor.value !== mergedProps.backgroundColor.value) {\n              StatusBarManager.setColor(processColor(mergedProps.backgroundColor.value), mergedProps.backgroundColor.animated);\n            }\n\n            if (!oldProps || oldProps.hidden.value !== mergedProps.hidden.value) {\n              StatusBarManager.setHidden(mergedProps.hidden.value);\n            }\n\n            if (!oldProps || oldProps.translucent !== mergedProps.translucent) {\n              StatusBarManager.setTranslucent(mergedProps.translucent);\n            }\n          }\n\n          StatusBar._currentValues = mergedProps;\n        });\n      }, _temp));\n    }\n\n    _createClass(StatusBar, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this._stackEntry = createStackEntry(this.props);\n\n        StatusBar._propsStack.push(this._stackEntry);\n\n        this._updatePropsStack();\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        var index = StatusBar._propsStack.indexOf(this._stackEntry);\n\n        StatusBar._propsStack.splice(index, 1);\n\n        this._updatePropsStack();\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate() {\n        var index = StatusBar._propsStack.indexOf(this._stackEntry);\n\n        this._stackEntry = createStackEntry(this.props);\n        StatusBar._propsStack[index] = this._stackEntry;\n\n        this._updatePropsStack();\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return null;\n      }\n    }], [{\n      key: \"setHidden\",\n      value: function setHidden(hidden, animation) {\n        animation = animation || 'none';\n        StatusBar._defaultProps.hidden.value = hidden;\n\n        if (Platform.OS === 'ios') {\n          StatusBarManager.setHidden(hidden, animation);\n        } else if (Platform.OS === 'android') {\n          StatusBarManager.setHidden(hidden);\n        }\n      }\n    }, {\n      key: \"setBarStyle\",\n      value: function setBarStyle(style, animated) {\n        animated = animated || false;\n        StatusBar._defaultProps.barStyle.value = style;\n\n        if (Platform.OS === 'ios') {\n          StatusBarManager.setStyle(style, animated);\n        } else if (Platform.OS === 'android') {\n          StatusBarManager.setStyle(style);\n        }\n      }\n    }, {\n      key: \"setNetworkActivityIndicatorVisible\",\n      value: function setNetworkActivityIndicatorVisible(visible) {\n        if (Platform.OS !== 'ios') {\n          console.warn('`setNetworkActivityIndicatorVisible` is only available on iOS');\n          return;\n        }\n\n        StatusBar._defaultProps.networkActivityIndicatorVisible = visible;\n        StatusBarManager.setNetworkActivityIndicatorVisible(visible);\n      }\n    }, {\n      key: \"setBackgroundColor\",\n      value: function setBackgroundColor(color, animated) {\n        if (Platform.OS !== 'android') {\n          console.warn('`setBackgroundColor` is only available on Android');\n          return;\n        }\n\n        animated = animated || false;\n        StatusBar._defaultProps.backgroundColor.value = color;\n        StatusBarManager.setColor(processColor(color), animated);\n      }\n    }, {\n      key: \"setTranslucent\",\n      value: function setTranslucent(translucent) {\n        if (Platform.OS !== 'android') {\n          console.warn('`setTranslucent` is only available on Android');\n          return;\n        }\n\n        StatusBar._defaultProps.translucent = translucent;\n        StatusBarManager.setTranslucent(translucent);\n      }\n    }]);\n\n    _inherits(StatusBar, _React$Component);\n\n    return StatusBar;\n  }(React.Component);\n\n  StatusBar._propsStack = [];\n  StatusBar._defaultProps = createStackEntry({\n    animated: false,\n    showHideTransition: 'fade',\n    backgroundColor: 'black',\n    barStyle: 'default',\n    translucent: false,\n    hidden: false,\n    networkActivityIndicatorVisible: false\n  });\n  StatusBar._updateImmediate = null;\n  StatusBar._currentValues = null;\n  StatusBar.currentHeight = StatusBarManager.HEIGHT;\n  StatusBar.propTypes = {\n    hidden: PropTypes.bool,\n    animated: PropTypes.bool,\n    backgroundColor: ColorPropType,\n    translucent: PropTypes.bool,\n    barStyle: PropTypes.oneOf(['default', 'light-content', 'dark-content']),\n    networkActivityIndicatorVisible: PropTypes.bool,\n    showHideTransition: PropTypes.oneOf(['fade', 'slide'])\n  };\n  StatusBar.defaultProps = {\n    animated: false,\n    showHideTransition: 'fade'\n  };\n  StatusBar = _wrapComponent(\"StatusBar\")(StatusBar);\n  module.exports = StatusBar;\n});","map":[[2,0,11,0],[47,0,13,0],[47,6,13,6,"React"],[47,14,13,14,"require"],[47,45,13,22],[47,52,13,14],[47,53,13,0],[49,0,14,0],[49,6,14,6,"PropTypes"],[49,18,14,18,"require"],[49,49,14,26],[49,61,14,18],[49,62,14,0],[51,0,15,0],[51,6,15,6,"ColorPropType"],[51,22,15,22,"require"],[51,53,15,30],[51,68,15,22],[51,69,15,0],[53,0,16,0],[53,6,16,6,"Platform"],[53,17,16,17,"require"],[53,48,16,25],[53,58,16,17],[53,59,16,0],[55,0,18,0],[55,6,18,6,"processColor"],[55,21,18,21,"require"],[55,52,18,29],[55,66,18,21],[55,67,18,0],[57,0,20,0],[57,6,20,6,"StatusBarManager"],[57,25,20,25,"require"],[57,56,20,33],[57,71,20,25],[57,73,20,50,"StatusBarManager"],[57,89,20,0],[59,0,65,0],[59,11,65,9,"mergePropsStack"],[59,26,65,0],[59,27,66,2,"propsStack"],[59,37,65,0],[59,39,67,2,"defaultValues"],[59,52,65,0],[59,54,68,10],[60,0,69,2],[60,11,69,9,"propsStack"],[60,22,69,20,"reduce"],[60,28,69,9],[60,29,69,27],[60,39,69,28,"prev"],[60,43,69,27],[60,45,69,34,"cur"],[60,48,69,27],[60,50,69,42],[61,0,70,4],[61,11,70,9],[61,15,70,15,"prop"],[61,19,70,4],[61,23,70,23,"cur"],[61,26,70,4],[61,28,70,28],[62,0,71,6],[62,12,71,10,"cur"],[62,16,71,14,"prop"],[62,20,71,10],[62,25,71,23],[62,29,71,6],[62,31,71,29],[63,0,72,8,"prev"],[63,15,72,13,"prop"],[63,19,72,8],[63,23,72,21,"cur"],[63,27,72,25,"prop"],[63,31,72,21],[63,32,72,8],[64,0,73,7],[65,0,74,5],[67,0,75,4],[67,13,75,11,"prev"],[67,17,75,4],[68,0,76,3],[68,5,69,9],[68,7,76,5],[68,16,76,19],[68,18,76,5],[68,20,76,23,"defaultValues"],[68,33,76,5],[68,34,69,9],[68,35,69,2],[69,0,77,1],[71,0,83,0],[71,11,83,9,"createStackEntry"],[71,27,83,0],[71,28,83,26,"props"],[71,33,83,0],[71,35,83,43],[72,0,84,2],[72,11,84,9],[73,0,85,4,"backgroundColor"],[73,23,86,6,"props"],[73,29,86,12,"backgroundColor"],[73,44,86,6],[73,48,86,31],[73,52,86,6],[73,55,87,10],[74,0,88,12,"value"],[74,15,88,19,"props"],[74,21,88,25,"backgroundColor"],[74,36,87,10],[75,0,89,12,"animated"],[75,18,89,22,"props"],[75,24,89,28,"animated"],[76,0,87,10],[76,7,86,6],[76,10,91,10],[76,14,84,9],[77,0,92,4,"barStyle"],[77,16,93,6,"props"],[77,22,93,12,"barStyle"],[77,30,93,6],[77,34,93,24],[77,38,93,6],[77,41,94,10],[78,0,95,12,"value"],[78,15,95,19,"props"],[78,21,95,25,"barStyle"],[78,29,94,10],[79,0,96,12,"animated"],[79,18,96,22,"props"],[79,24,96,28,"animated"],[80,0,94,10],[80,7,93,6],[80,10,98,10],[80,14,84,9],[81,0,99,4,"translucent"],[81,19,99,17,"props"],[81,25,99,23,"translucent"],[81,36,84,9],[82,0,100,4,"hidden"],[82,14,101,6,"props"],[82,20,101,12,"hidden"],[82,26,101,6],[82,30,101,22],[82,34,101,6],[82,37,102,10],[83,0,103,12,"value"],[83,15,103,19,"props"],[83,21,103,25,"hidden"],[83,27,102,10],[84,0,104,12,"animated"],[84,18,104,22,"props"],[84,24,104,28,"animated"],[84,32,102,10],[85,0,105,12,"transition"],[85,20,105,24,"props"],[85,26,105,30,"showHideTransition"],[86,0,102,10],[86,7,101,6],[86,10,107,10],[86,14,84,9],[87,0,108,4,"networkActivityIndicatorVisible"],[87,39,108,37,"props"],[87,45,108,43,"networkActivityIndicatorVisible"],[88,0,84,9],[88,5,84,2],[89,0,110,1],[91,6,151,6,"StatusBar"],[91,15],[103,203,311,2,"_stackEntry"],[103,214],[103,217,311,16],[103,221],[103,229,343,2,"_updatePropsStack"],[103,246],[103,249,343,22],[103,261,343,28],[104,0,345,4,"clearImmediate"],[104,23,345,19,"StatusBar"],[104,33,345,29,"_updateImmediate"],[104,49,345,4],[105,0,346,4,"StatusBar"],[105,18,346,14,"_updateImmediate"],[105,34,346,4],[105,37,346,33,"setImmediate"],[105,50,346,46],[105,62,346,52],[106,0,347,6],[106,14,347,12,"oldProps"],[106,25,347,23,"StatusBar"],[106,35,347,33,"_currentValues"],[106,49,347,6],[107,0,348,6],[107,14,348,12,"mergedProps"],[107,28,348,26,"mergePropsStack"],[107,44,349,8,"StatusBar"],[107,54,349,18,"_propsStack"],[107,65,348,26],[107,67,350,8,"StatusBar"],[107,77,350,18,"_defaultProps"],[107,90,348,26],[107,91,348,6],[109,0,354,6],[109,14,354,10,"Platform"],[109,23,354,19,"OS"],[109,25,354,10],[109,30,354,26],[109,35,354,6],[109,37,354,33],[110,0,355,8],[110,16,356,10],[110,17,356,11,"oldProps"],[110,25,356,10],[110,29,357,10,"oldProps"],[110,38,357,19,"barStyle"],[110,46,357,10],[110,47,357,28,"value"],[110,52,357,10],[110,57,357,38,"mergedProps"],[110,69,357,50,"barStyle"],[110,77,357,38],[110,78,357,59,"value"],[110,83,355,8],[110,85,358,10],[111,0,359,10,"StatusBarManager"],[111,31,359,27,"setStyle"],[111,39,359,10],[111,40,360,12,"mergedProps"],[111,52,360,24,"barStyle"],[111,60,360,12],[111,61,360,33,"value"],[111,66,359,10],[111,68,361,12,"mergedProps"],[111,80,361,24,"barStyle"],[111,88,361,12],[111,89,361,33,"animated"],[111,97,359,10],[112,0,363,9],[114,0,364,8],[114,16,364,12],[114,17,364,13,"oldProps"],[114,25,364,12],[114,29,364,25,"oldProps"],[114,38,364,34,"hidden"],[114,44,364,25],[114,45,364,41,"value"],[114,50,364,25],[114,55,364,51,"mergedProps"],[114,67,364,63,"hidden"],[114,73,364,51],[114,74,364,70,"value"],[114,79,364,8],[114,81,364,77],[115,0,365,10,"StatusBarManager"],[115,31,365,27,"setHidden"],[115,40,365,10],[115,41,366,12,"mergedProps"],[115,53,366,24,"hidden"],[115,59,366,12],[115,60,366,31,"value"],[115,65,365,10],[115,67,367,12,"mergedProps"],[115,79,367,24,"hidden"],[115,85,367,12],[115,86,367,31,"animated"],[115,94,367,12],[115,97,368,16,"mergedProps"],[115,109,368,28,"hidden"],[115,115,368,16],[115,116,368,35,"transition"],[115,126,367,12],[115,129,369,16],[115,135,365,10],[116,0,371,9],[118,0,373,8],[118,16,374,10],[118,17,374,11,"oldProps"],[118,25,374,10],[118,29,375,10,"oldProps"],[118,38,375,19,"networkActivityIndicatorVisible"],[118,69,375,10],[118,74,376,12,"mergedProps"],[118,86,376,24,"networkActivityIndicatorVisible"],[118,117,373,8],[118,119,377,10],[119,0,378,10,"StatusBarManager"],[119,31,378,27,"setNetworkActivityIndicatorVisible"],[119,65,378,10],[119,66,379,12,"mergedProps"],[119,78,379,24,"networkActivityIndicatorVisible"],[119,109,378,10],[120,0,381,9],[121,0,382,7],[121,11,354,6],[121,17,382,13],[121,21,382,17,"Platform"],[121,30,382,26,"OS"],[121,32,382,17],[121,37,382,33],[121,46,382,13],[121,48,382,44],[122,0,383,8],[122,16,384,10],[122,17,384,11,"oldProps"],[122,25,384,10],[122,29,385,10,"oldProps"],[122,38,385,19,"barStyle"],[122,46,385,10],[122,47,385,28,"value"],[122,52,385,10],[122,57,385,38,"mergedProps"],[122,69,385,50,"barStyle"],[122,77,385,38],[122,78,385,59,"value"],[122,83,383,8],[122,85,386,10],[123,0,387,10,"StatusBarManager"],[123,31,387,27,"setStyle"],[123,39,387,10],[123,40,387,36,"mergedProps"],[123,52,387,48,"barStyle"],[123,60,387,36],[123,61,387,57,"value"],[123,66,387,10],[124,0,388,9],[126,0,389,8],[126,16,390,10],[126,17,390,11,"oldProps"],[126,25,390,10],[126,29,391,10,"oldProps"],[126,38,391,19,"backgroundColor"],[126,53,391,10],[126,54,391,35,"value"],[126,59,391,10],[126,64,391,45,"mergedProps"],[126,76,391,57,"backgroundColor"],[126,91,391,45],[126,92,391,73,"value"],[126,97,389,8],[126,99,392,10],[127,0,393,10,"StatusBarManager"],[127,31,393,27,"setColor"],[127,39,393,10],[127,40,394,12,"processColor"],[127,53,394,25,"mergedProps"],[127,65,394,37,"backgroundColor"],[127,80,394,25],[127,81,394,53,"value"],[127,86,394,12],[127,87,393,10],[127,89,395,12,"mergedProps"],[127,101,395,24,"backgroundColor"],[127,116,395,12],[127,117,395,40,"animated"],[127,125,393,10],[128,0,397,9],[130,0,398,8],[130,16,398,12],[130,17,398,13,"oldProps"],[130,25,398,12],[130,29,398,25,"oldProps"],[130,38,398,34,"hidden"],[130,44,398,25],[130,45,398,41,"value"],[130,50,398,25],[130,55,398,51,"mergedProps"],[130,67,398,63,"hidden"],[130,73,398,51],[130,74,398,70,"value"],[130,79,398,8],[130,81,398,77],[131,0,399,10,"StatusBarManager"],[131,31,399,27,"setHidden"],[131,40,399,10],[131,41,399,37,"mergedProps"],[131,53,399,49,"hidden"],[131,59,399,37],[131,60,399,56,"value"],[131,65,399,10],[132,0,400,9],[134,0,401,8],[134,16,401,12],[134,17,401,13,"oldProps"],[134,25,401,12],[134,29,401,25,"oldProps"],[134,38,401,34,"translucent"],[134,49,401,25],[134,54,401,50,"mergedProps"],[134,66,401,62,"translucent"],[134,77,401,8],[134,79,401,75],[135,0,402,10,"StatusBarManager"],[135,31,402,27,"setTranslucent"],[135,45,402,10],[135,46,402,42,"mergedProps"],[135,58,402,54,"translucent"],[135,69,402,10],[136,0,403,9],[137,0,404,7],[139,0,406,6,"StatusBar"],[139,20,406,16,"_currentValues"],[139,34,406,6],[139,37,406,33,"mergedProps"],[139,48,406,6],[140,0,407,5],[140,9,346,33],[140,10,346,4],[141,0,408,3],[141,7],[146,42,313,22],[147,0,318,4],[147,13,318,9,"_stackEntry"],[147,24,318,4],[147,27,318,23,"createStackEntry"],[147,44,318,40],[147,49,318,45,"props"],[147,54,318,23],[147,55,318,4],[149,0,319,4,"StatusBar"],[149,18,319,14,"_propsStack"],[149,29,319,4],[149,30,319,26,"push"],[149,34,319,4],[149,35,319,31],[149,40,319,36,"_stackEntry"],[149,51,319,4],[151,0,320,4],[151,13,320,9,"_updatePropsStack"],[151,30,320,4],[152,0,321,3],[155,45,323,25],[156,0,326,4],[156,12,326,10,"index"],[156,20,326,18,"StatusBar"],[156,30,326,28,"_propsStack"],[156,41,326,18],[156,42,326,40,"indexOf"],[156,49,326,18],[156,50,326,48],[156,55,326,53,"_stackEntry"],[156,66,326,18],[156,67,326,4],[158,0,327,4,"StatusBar"],[158,18,327,14,"_propsStack"],[158,29,327,4],[158,30,327,26,"splice"],[158,36,327,4],[158,37,327,33,"index"],[158,42,327,4],[158,44,327,40],[158,45,327,4],[160,0,329,4],[160,13,329,9,"_updatePropsStack"],[160,30,329,4],[161,0,330,3],[164,43,332,23],[165,0,333,4],[165,12,333,10,"index"],[165,20,333,18,"StatusBar"],[165,30,333,28,"_propsStack"],[165,41,333,18],[165,42,333,40,"indexOf"],[165,49,333,18],[165,50,333,48],[165,55,333,53,"_stackEntry"],[165,66,333,18],[165,67,333,4],[167,0,334,4],[167,13,334,9,"_stackEntry"],[167,24,334,4],[167,27,334,23,"createStackEntry"],[167,44,334,40],[167,49,334,45,"props"],[167,54,334,23],[167,55,334,4],[168,0,335,4,"StatusBar"],[168,18,335,14,"_propsStack"],[168,29,335,4],[168,30,335,26,"index"],[168,35,335,4],[168,39,335,35],[168,44,335,40,"_stackEntry"],[168,55,335,4],[170,0,337,4],[170,13,337,9,"_updatePropsStack"],[170,30,337,4],[171,0,338,3],[174,31,410,23],[175,0,411,4],[175,15,411,11],[175,19,411,4],[176,0,412,3],[179,32,196,19,"hidden"],[179,38],[179,40,196,36,"animation"],[179,49],[179,51,196,68],[180,0,197,4,"animation"],[180,20,197,16,"animation"],[180,33,197,29],[180,39,197,4],[181,0,198,4,"StatusBar"],[181,18,198,14,"_defaultProps"],[181,31,198,4],[181,32,198,28,"hidden"],[181,38,198,4],[181,39,198,35,"value"],[181,44,198,4],[181,47,198,43,"hidden"],[181,53,198,4],[183,0,199,4],[183,12,199,8,"Platform"],[183,21,199,17,"OS"],[183,23,199,8],[183,28,199,24],[183,33,199,4],[183,35,199,31],[184,0,200,6,"StatusBarManager"],[184,27,200,23,"setHidden"],[184,36,200,6],[184,37,200,33,"hidden"],[184,43,200,6],[184,45,200,41,"animation"],[184,54,200,6],[185,0,201,5],[185,9,199,4],[185,15,201,11],[185,19,201,15,"Platform"],[185,28,201,24,"OS"],[185,30,201,15],[185,35,201,31],[185,44,201,11],[185,46,201,42],[186,0,202,6,"StatusBarManager"],[186,27,202,23,"setHidden"],[186,36,202,6],[186,37,202,33,"hidden"],[186,43,202,6],[187,0,203,5],[188,0,204,3],[191,34,211,21,"style"],[191,39],[191,41,211,44,"animated"],[191,49],[191,51,211,64],[192,0,212,4,"animated"],[192,19,212,15,"animated"],[192,31,212,27],[192,36,212,4],[193,0,213,4,"StatusBar"],[193,18,213,14,"_defaultProps"],[193,31,213,4],[193,32,213,28,"barStyle"],[193,40,213,4],[193,41,213,37,"value"],[193,46,213,4],[193,49,213,45,"style"],[193,54,213,4],[195,0,214,4],[195,12,214,8,"Platform"],[195,21,214,17,"OS"],[195,23,214,8],[195,28,214,24],[195,33,214,4],[195,35,214,31],[196,0,215,6,"StatusBarManager"],[196,27,215,23,"setStyle"],[196,35,215,6],[196,36,215,32,"style"],[196,41,215,6],[196,43,215,39,"animated"],[196,51,215,6],[197,0,216,5],[197,9,214,4],[197,15,216,11],[197,19,216,15,"Platform"],[197,28,216,24,"OS"],[197,30,216,15],[197,35,216,31],[197,44,216,11],[197,46,216,42],[198,0,217,6,"StatusBarManager"],[198,27,217,23,"setStyle"],[198,35,217,6],[198,36,217,32,"style"],[198,41,217,6],[199,0,218,5],[200,0,219,3],[203,57,225,44,"visible"],[203,64],[203,66,225,62],[204,0,226,4],[204,12,226,8,"Platform"],[204,21,226,17,"OS"],[204,23,226,8],[204,28,226,24],[204,33,226,4],[204,35,226,31],[205,0,227,6,"console"],[205,18,227,14,"warn"],[205,22,227,6],[205,23,228,8],[205,86,227,6],[206,0,230,6],[207,0,231,5],[209,0,232,4,"StatusBar"],[209,18,232,14,"_defaultProps"],[209,31,232,4],[209,32,232,28,"networkActivityIndicatorVisible"],[209,63,232,4],[209,66,232,62,"visible"],[209,73,232,4],[210,0,233,4,"StatusBarManager"],[210,25,233,21,"setNetworkActivityIndicatorVisible"],[210,59,233,4],[210,60,233,56,"visible"],[210,67,233,4],[211,0,234,3],[214,41,241,28,"color"],[214,46],[214,48,241,43,"animated"],[214,56],[214,58,241,63],[215,0,242,4],[215,12,242,8,"Platform"],[215,21,242,17,"OS"],[215,23,242,8],[215,28,242,24],[215,37,242,4],[215,39,242,35],[216,0,243,6,"console"],[216,18,243,14,"warn"],[216,22,243,6],[216,23,243,19],[216,74,243,6],[217,0,244,6],[218,0,245,5],[220,0,246,4,"animated"],[220,19,246,15,"animated"],[220,31,246,27],[220,36,246,4],[221,0,247,4,"StatusBar"],[221,18,247,14,"_defaultProps"],[221,31,247,4],[221,32,247,28,"backgroundColor"],[221,47,247,4],[221,48,247,44,"value"],[221,53,247,4],[221,56,247,52,"color"],[221,61,247,4],[222,0,248,4,"StatusBarManager"],[222,25,248,21,"setColor"],[222,33,248,4],[222,34,248,30,"processColor"],[222,47,248,43,"color"],[222,52,248,30],[222,53,248,4],[222,55,248,51,"animated"],[222,63,248,4],[223,0,249,3],[226,37,255,24,"translucent"],[226,48],[226,50,255,46],[227,0,256,4],[227,12,256,8,"Platform"],[227,21,256,17,"OS"],[227,23,256,8],[227,28,256,24],[227,37,256,4],[227,39,256,35],[228,0,257,6,"console"],[228,18,257,14,"warn"],[228,22,257,6],[228,23,257,19],[228,70,257,6],[229,0,258,6],[230,0,259,5],[232,0,260,4,"StatusBar"],[232,18,260,14,"_defaultProps"],[232,31,260,4],[232,32,260,28,"translucent"],[232,43,260,4],[232,46,260,42,"translucent"],[232,57,260,4],[233,0,261,4,"StatusBarManager"],[233,25,261,21,"setTranslucent"],[233,39,261,4],[233,40,261,36,"translucent"],[233,51,261,4],[234,0,262,3],[240,4,151,24,"React"],[240,10,151,30,"Component"],[240,19],[242,0,151,6,"StatusBar"],[242,11],[242,12,160,9,"_propsStack"],[242,23],[242,26,160,23],[242,28],[243,0,151,6,"StatusBar"],[243,11],[243,12,162,9,"_defaultProps"],[243,25],[243,28,162,25,"createStackEntry"],[243,45,162,42],[244,0,163,4,"animated"],[244,14,163,14],[244,19,162,42],[245,0,164,4,"showHideTransition"],[245,24,164,24],[245,30,162,42],[246,0,165,4,"backgroundColor"],[246,21,165,21],[246,28,162,42],[247,0,166,4,"barStyle"],[247,14,166,14],[247,23,162,42],[248,0,167,4,"translucent"],[248,17,167,17],[248,22,162,42],[249,0,168,4,"hidden"],[249,12,168,12],[249,17,162,42],[250,0,169,4,"networkActivityIndicatorVisible"],[250,37,169,37],[251,0,162,42],[251,3,162,25],[251,4],[252,0,151,6,"StatusBar"],[252,11],[252,12,173,9,"_updateImmediate"],[252,28],[252,31,173,28],[252,35],[253,0,151,6,"StatusBar"],[253,11],[253,12,176,9,"_currentValues"],[253,26],[253,29,176,26],[253,33],[254,0,151,6,"StatusBar"],[254,11],[254,12,185,9,"currentHeight"],[254,25],[254,28,185,25,"StatusBarManager"],[254,45,185,42,"HEIGHT"],[254,51],[255,0,151,6,"StatusBar"],[255,11],[255,12,264,9,"propTypes"],[255,21],[255,24,264,21],[256,0,268,4,"hidden"],[256,12,268,12,"PropTypes"],[256,22,268,22,"bool"],[256,26,264,21],[257,0,273,4,"animated"],[257,14,273,14,"PropTypes"],[257,24,273,24,"bool"],[257,28,264,21],[258,0,278,4,"backgroundColor"],[258,21,278,21,"ColorPropType"],[258,34,264,21],[259,0,286,4,"translucent"],[259,17,286,17,"PropTypes"],[259,27,286,27,"bool"],[259,31,264,21],[260,0,290,4,"barStyle"],[260,14,290,14,"PropTypes"],[260,24,290,24,"oneOf"],[260,29,290,14],[260,30,290,30],[260,31,290,31],[260,40,290,30],[260,42,290,42],[260,57,290,30],[260,59,290,59],[260,73,290,30],[260,74,290,14],[260,75,264,21],[261,0,296,4,"networkActivityIndicatorVisible"],[261,37,296,37,"PropTypes"],[261,47,296,47,"bool"],[261,51,264,21],[262,0,303,4,"showHideTransition"],[262,24,303,24,"PropTypes"],[262,34,303,34,"oneOf"],[262,39,303,24],[262,40,303,40],[262,41,303,41],[262,47,303,40],[262,49,303,49],[262,56,303,40],[262,57,303,24],[263,0,264,21],[263,3],[264,0,151,6,"StatusBar"],[264,11],[264,12,306,9,"defaultProps"],[264,24],[264,27,306,24],[265,0,307,4,"animated"],[265,14,307,14],[265,19,306,24],[266,0,308,4,"showHideTransition"],[266,24,308,24],[267,0,306,24],[267,3],[269,0,415,0,"module"],[269,9,415,7,"exports"],[269,16,415,0],[269,19,415,17,"StatusBar"],[269,28,415,0]]},"type":"js/module"}]}