{"dependencies":[{"name":"bezier","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  var _ease;\n\n  var Easing = function () {\n    function Easing() {\n      _classCallCheck(this, Easing);\n    }\n\n    _createClass(Easing, null, [{\n      key: \"step0\",\n      value: function step0(n) {\n        return n > 0 ? 1 : 0;\n      }\n    }, {\n      key: \"step1\",\n      value: function step1(n) {\n        return n >= 1 ? 1 : 0;\n      }\n    }, {\n      key: \"linear\",\n      value: function linear(t) {\n        return t;\n      }\n    }, {\n      key: \"ease\",\n      value: function ease(t) {\n        if (!_ease) {\n          _ease = Easing.bezier(0.42, 0, 1, 1);\n        }\n\n        return _ease(t);\n      }\n    }, {\n      key: \"quad\",\n      value: function quad(t) {\n        return t * t;\n      }\n    }, {\n      key: \"cubic\",\n      value: function cubic(t) {\n        return t * t * t;\n      }\n    }, {\n      key: \"poly\",\n      value: function poly(n) {\n        return function (t) {\n          return Math.pow(t, n);\n        };\n      }\n    }, {\n      key: \"sin\",\n      value: function sin(t) {\n        return 1 - Math.cos(t * Math.PI / 2);\n      }\n    }, {\n      key: \"circle\",\n      value: function circle(t) {\n        return 1 - Math.sqrt(1 - t * t);\n      }\n    }, {\n      key: \"exp\",\n      value: function exp(t) {\n        return Math.pow(2, 10 * (t - 1));\n      }\n    }, {\n      key: \"elastic\",\n      value: function elastic() {\n        var bounciness = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        var p = bounciness * Math.PI;\n        return function (t) {\n          return 1 - Math.pow(Math.cos(t * Math.PI / 2), 3) * Math.cos(t * p);\n        };\n      }\n    }, {\n      key: \"back\",\n      value: function back(s) {\n        if (s === undefined) {\n          s = 1.70158;\n        }\n\n        return function (t) {\n          return t * t * ((s + 1) * t - s);\n        };\n      }\n    }, {\n      key: \"bounce\",\n      value: function bounce(t) {\n        if (t < 1 / 2.75) {\n          return 7.5625 * t * t;\n        }\n\n        if (t < 2 / 2.75) {\n          t -= 1.5 / 2.75;\n          return 7.5625 * t * t + 0.75;\n        }\n\n        if (t < 2.5 / 2.75) {\n          t -= 2.25 / 2.75;\n          return 7.5625 * t * t + 0.9375;\n        }\n\n        t -= 2.625 / 2.75;\n        return 7.5625 * t * t + 0.984375;\n      }\n    }, {\n      key: \"bezier\",\n      value: function bezier(x1, y1, x2, y2) {\n        var _bezier = _$$_REQUIRE(_dependencyMap[0], 'bezier');\n\n        return _bezier(x1, y1, x2, y2);\n      }\n    }, {\n      key: \"in\",\n      value: function _in(easing) {\n        return easing;\n      }\n    }, {\n      key: \"out\",\n      value: function out(easing) {\n        return function (t) {\n          return 1 - easing(1 - t);\n        };\n      }\n    }, {\n      key: \"inOut\",\n      value: function inOut(easing) {\n        return function (t) {\n          if (t < 0.5) {\n            return easing(t * 2) / 2;\n          }\n\n          return 1 - easing((1 - t) * 2) / 2;\n        };\n      }\n    }]);\n\n    return Easing;\n  }();\n\n  module.exports = Easing;\n});","map":[[2,0,11,0],[10,0,13,0],[10,6,13,4,"ease"],[10,11,13,0],[12,6,60,6,"Easing"],[12,12],[19,28,64,15,"n"],[19,29],[19,31,64,26],[20,0,65,4],[20,15,65,11,"n"],[20,19,65,15],[20,20,65,11],[20,23,65,19],[20,24,65,11],[20,27,65,23],[20,28,65,4],[21,0,66,3],[24,28,71,15,"n"],[24,29],[24,31,71,26],[25,0,72,4],[25,15,72,11,"n"],[25,20,72,16],[25,21,72,11],[25,24,72,20],[25,25,72,11],[25,28,72,24],[25,29,72,4],[26,0,73,3],[29,29,81,16,"t"],[29,30],[29,32,81,27],[30,0,82,4],[30,15,82,11,"t"],[30,16,82,4],[31,0,83,3],[34,27,91,14,"t"],[34,28],[34,30,91,33],[35,0,92,4],[35,12,92,8],[35,13,92,9,"ease"],[35,18,92,4],[35,20,92,15],[36,0,93,6,"ease"],[36,18,93,13,"Easing"],[36,25,93,20,"bezier"],[36,31,93,13],[36,32,93,27],[36,36,93,13],[36,38,93,33],[36,39,93,13],[36,41,93,36],[36,42,93,13],[36,44,93,39],[36,45,93,13],[36,46,93,6],[37,0,94,5],[39,0,95,4],[39,15,95,11,"ease"],[39,21,95,16,"t"],[39,22,95,11],[39,23,95,4],[40,0,96,3],[43,27,104,14,"t"],[43,28],[43,30,104,25],[44,0,105,4],[44,15,105,11,"t"],[44,19,105,15,"t"],[44,20,105,4],[45,0,106,3],[48,28,114,15,"t"],[48,29],[48,31,114,26],[49,0,115,4],[49,15,115,11,"t"],[49,19,115,15,"t"],[49,20,115,11],[49,23,115,19,"t"],[49,24,115,4],[50,0,116,3],[53,27,124,14,"n"],[53,28],[53,30,124,25],[54,0,125,4],[54,15,125,11],[54,25,125,12,"t"],[54,26,125,11],[55,0,125,11],[55,17,125,26,"Math"],[55,22,125,31,"pow"],[55,25,125,26],[55,26,125,35,"t"],[55,27,125,26],[55,29,125,38,"n"],[55,30,125,26],[55,31,125,11],[56,0,125,11],[56,9,125,4],[57,0,126,3],[60,26,133,13,"t"],[60,27],[60,29,133,24],[61,0,134,4],[61,15,134,11],[61,19,134,15,"Math"],[61,24,134,20,"cos"],[61,27,134,15],[61,28,134,25,"t"],[61,32,134,29,"Math"],[61,37,134,34,"PI"],[61,39,134,24],[61,42,134,40],[61,43,134,15],[61,44,134,4],[62,0,135,3],[65,29,142,16,"t"],[65,30],[65,32,142,27],[66,0,143,4],[66,15,143,11],[66,19,143,15,"Math"],[66,24,143,20,"sqrt"],[66,28,143,15],[66,29,143,25],[66,33,143,29,"t"],[66,37,143,33,"t"],[66,38,143,15],[66,39,143,4],[67,0,144,3],[70,26,151,13,"t"],[70,27],[70,29,151,24],[71,0,152,4],[71,15,152,11,"Math"],[71,20,152,16,"pow"],[71,23,152,11],[71,24,152,20],[71,25,152,11],[71,27,152,23],[71,33,152,29,"t"],[71,37,152,33],[71,38,152,23],[71,39,152,11],[71,40,152,4],[72,0,153,3],[75,32,165,64],[76,0,165,64],[76,12,165,17,"bounciness"],[76,22,165,64],[76,93,165,38],[76,94,165,64],[77,0,166,4],[77,12,166,10,"p"],[77,16,166,14,"bounciness"],[77,29,166,27,"Math"],[77,34,166,32,"PI"],[77,36,166,4],[78,0,167,4],[78,15,167,11],[79,0,167,11],[79,17,167,16],[79,21,167,20,"Math"],[79,26,167,25,"pow"],[79,29,167,20],[79,30,167,29,"Math"],[79,35,167,34,"cos"],[79,38,167,29],[79,39,167,39,"t"],[79,43,167,43,"Math"],[79,48,167,48,"PI"],[79,50,167,38],[79,53,167,54],[79,54,167,29],[79,55,167,20],[79,57,167,58],[79,58,167,20],[79,62,167,63,"Math"],[79,67,167,68,"cos"],[79,70,167,63],[79,71,167,72,"t"],[79,75,167,76,"p"],[79,76,167,63],[79,77,167,11],[80,0,167,11],[80,9,167,4],[81,0,168,3],[84,27,178,14,"s"],[84,28],[84,30,178,48],[85,0,179,4],[85,12,179,8,"s"],[85,18,179,14,"undefined"],[85,27,179,4],[85,29,179,25],[86,0,180,6,"s"],[86,14,180,10],[86,21,180,6],[87,0,181,5],[89,0,182,4],[89,15,182,11],[90,0,182,11],[90,17,182,16,"t"],[90,21,182,20,"t"],[90,22,182,16],[90,26,182,25],[90,27,182,26,"s"],[90,31,182,30],[90,32,182,25],[90,36,182,35,"t"],[90,37,182,25],[90,40,182,39,"s"],[90,41,182,16],[90,42,182,11],[91,0,182,11],[91,9,182,4],[92,0,183,3],[95,29,190,16,"t"],[95,30],[95,32,190,35],[96,0,191,4],[96,12,191,8,"t"],[96,16,191,12],[96,20,191,16],[96,24,191,4],[96,26,191,22],[97,0,192,6],[97,17,192,13],[97,26,192,22,"t"],[97,27,192,13],[97,30,192,26,"t"],[97,31,192,6],[98,0,193,5],[100,0,195,4],[100,12,195,8,"t"],[100,16,195,12],[100,20,195,16],[100,24,195,4],[100,26,195,22],[101,0,196,6,"t"],[101,15,196,11],[101,21,196,17],[101,25,196,6],[102,0,197,6],[102,17,197,13],[102,26,197,22,"t"],[102,27,197,13],[102,30,197,26,"t"],[102,31,197,13],[102,34,197,30],[102,38,197,6],[103,0,198,5],[105,0,200,4],[105,12,200,8,"t"],[105,16,200,12],[105,22,200,18],[105,26,200,4],[105,28,200,24],[106,0,201,6,"t"],[106,15,201,11],[106,22,201,18],[106,26,201,6],[107,0,202,6],[107,17,202,13],[107,26,202,22,"t"],[107,27,202,13],[107,30,202,26,"t"],[107,31,202,13],[107,34,202,30],[107,40,202,6],[108,0,203,5],[110,0,205,4,"t"],[110,13,205,9],[110,21,205,17],[110,25,205,4],[111,0,206,4],[111,15,206,11],[111,24,206,20,"t"],[111,25,206,11],[111,28,206,24,"t"],[111,29,206,11],[111,32,206,28],[111,40,206,4],[112,0,207,3],[115,29,217,4,"x1"],[115,31],[115,33,218,4,"y1"],[115,35],[115,37,219,4,"x2"],[115,39],[115,41,220,4,"y2"],[115,43],[115,45,221,27],[116,0,222,4],[116,12,222,10,"_bezier"],[116,22,222,20,"require"],[116,53,222,28],[116,61,222,20],[116,62,222,4],[118,0,223,4],[118,15,223,11,"_bezier"],[118,23,223,19,"x1"],[118,25,223,11],[118,27,223,23,"y1"],[118,29,223,11],[118,31,223,27,"x2"],[118,33,223,11],[118,35,223,31,"y2"],[118,37,223,11],[118,38,223,4],[119,0,224,3],[122,26,229,12,"easing"],[122,32],[122,34,229,66],[123,0,230,4],[123,15,230,11,"easing"],[123,21,230,4],[124,0,231,3],[127,26,236,13,"easing"],[127,32],[127,34,236,67],[128,0,237,4],[128,15,237,11],[129,0,237,11],[129,17,237,16],[129,21,237,20,"easing"],[129,28,237,27],[129,32,237,31,"t"],[129,33,237,20],[129,34,237,11],[130,0,237,11],[130,9,237,4],[131,0,238,3],[134,28,245,15,"easing"],[134,34],[134,36,245,69],[135,0,246,4],[135,15,246,11],[135,28,246,16],[136,0,247,6],[136,14,247,10,"t"],[136,18,247,14],[136,21,247,6],[136,23,247,19],[137,0,248,8],[137,19,248,15,"easing"],[137,26,248,22,"t"],[137,30,248,26],[137,31,248,15],[137,35,248,31],[137,36,248,8],[138,0,249,7],[140,0,250,6],[140,17,250,13],[140,21,250,17,"easing"],[140,28,250,24],[140,29,250,25],[140,33,250,29,"t"],[140,34,250,24],[140,38,250,34],[140,39,250,17],[140,43,250,39],[140,44,250,6],[141,0,251,5],[141,9,246,4],[142,0,252,3],[148,0,255,0,"module"],[148,9,255,7,"exports"],[148,16,255,0],[148,19,255,17,"Easing"],[148,25,255,0]]},"type":"js/module"}]}