{"dependencies":[{"name":"React","isAsync":false},{"name":"ListViewDataSource","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  var React = _$$_REQUIRE(_dependencyMap[0], 'React');\n\n  var ListViewDataSource = _$$_REQUIRE(_dependencyMap[1], 'ListViewDataSource');\n\n  var InternalListViewType = function (_React$Component) {\n    \"use strict\";\n\n    function InternalListViewType() {\n      _classCallCheck(this, InternalListViewType);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(InternalListViewType).apply(this, arguments));\n    }\n\n    _createClass(InternalListViewType, [{\n      key: \"setNativeProps\",\n      value: function setNativeProps(props) {}\n    }, {\n      key: \"flashScrollIndicators\",\n      value: function flashScrollIndicators() {}\n    }, {\n      key: \"getScrollResponder\",\n      value: function getScrollResponder() {}\n    }, {\n      key: \"getScrollableNode\",\n      value: function getScrollableNode() {}\n    }, {\n      key: \"getMetrics\",\n      value: function getMetrics() {}\n    }, {\n      key: \"scrollTo\",\n      value: function scrollTo() {}\n    }, {\n      key: \"scrollToEnd\",\n      value: function scrollToEnd(options) {}\n    }]);\n\n    _inherits(InternalListViewType, _React$Component);\n\n    return InternalListViewType;\n  }(React.Component);\n\n  InternalListViewType.DataSource = ListViewDataSource;\n  module.exports = InternalListViewType;\n});","map":[[18,0,11,0],[18,6,11,6,"React"],[18,14,11,14,"require"],[18,45,11,22],[18,52,11,14],[18,53,11,0],[20,0,12,0],[20,6,12,6,"ListViewDataSource"],[20,27,12,27,"require"],[20,58,12,35],[20,78,12,27],[20,79,12,0],[22,6,18,6,"InternalListViewType"],[22,26],[33,37,20,17,"props"],[33,42],[33,44,20,32],[33,45,20,34],[36,46,21,26],[36,47,21,28],[39,43,22,28],[39,44,22,30],[42,42,23,27],[42,43,23,29],[45,35,25,23],[45,36,25,25],[48,33,26,34],[48,34,26,36],[51,34,27,14,"options"],[51,41],[51,43,27,48],[51,44,27,50],[57,4,18,42,"React"],[57,10,18,48,"Component"],[57,19],[59,0,18,6,"InternalListViewType"],[59,22],[59,23,19,9,"DataSource"],[59,33],[59,36,19,22,"ListViewDataSource"],[59,54],[60,0,30,0,"module"],[60,9,30,7,"exports"],[60,16,30,0],[60,19,30,17,"InternalListViewType"],[60,39,30,0]]},"type":"js/module"}]}