{"dependencies":[{"name":"react","isAsync":false},{"name":"./../../../react-transform-hmr/lib/index.js","isAsync":false},{"name":"react-native","isAsync":false},{"name":"react-navigation","isAsync":false},{"name":"./TabBarIcon","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _reactNavigation = _$$_REQUIRE(_dependencyMap[3], \"react-navigation\");\n\n  var _TabBarIcon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./TabBarIcon\"));\n\n  var _jsxFileName = \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/react-navigation-deprecated-tab-navigator/src/views/TabBarBottom.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\n  function _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\n  function _iterableToArray(iter) { if ((typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\") in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\n  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  var _components = {\n    TabBarBottom: {\n      displayName: \"TabBarBottom\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/react-navigation-deprecated-tab-navigator/src/views/TabBarBottom.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var majorVersion = parseInt(_reactNative.Platform.Version, 10);\n  var isIos = _reactNative.Platform.OS === 'ios';\n  var isIOS11 = majorVersion >= 11 && isIos;\n  var defaultMaxTabBarItemWidth = 125;\n\n  var TabBarBottom = function (_React$PureComponent) {\n    function TabBarBottom() {\n      var _getPrototypeOf2;\n\n      var _temp, _this;\n\n      _classCallCheck(this, TabBarBottom);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TabBarBottom)).call.apply(_getPrototypeOf2, [this].concat(args))), _this._renderLabel = function (scene) {\n        var _this$props = _this.props,\n            position = _this$props.position,\n            navigation = _this$props.navigation,\n            activeTintColor = _this$props.activeTintColor,\n            inactiveTintColor = _this$props.inactiveTintColor,\n            labelStyle = _this$props.labelStyle,\n            showLabel = _this$props.showLabel,\n            showIcon = _this$props.showIcon,\n            isLandscape = _this$props.isLandscape,\n            allowFontScaling = _this$props.allowFontScaling;\n\n        if (showLabel === false) {\n          return null;\n        }\n\n        var index = scene.index;\n        var routes = navigation.state.routes;\n        var inputRange = [-1].concat(_toConsumableArray(routes.map(function (x, i) {\n          return i;\n        })));\n        var outputRange = inputRange.map(function (inputIndex) {\n          return inputIndex === index ? activeTintColor : inactiveTintColor;\n        });\n        var color = position.interpolate({\n          inputRange: inputRange,\n          outputRange: outputRange\n        });\n        var tintColor = scene.focused ? activeTintColor : inactiveTintColor;\n\n        var label = _this.props.getLabel(_objectSpread({}, scene, {\n          tintColor: tintColor\n        }));\n\n        if (typeof label === 'string') {\n          return _react.default.createElement(_reactNative.Animated.Text, {\n            numberOfLines: 1,\n            style: [styles.label, {\n              color: color\n            }, showIcon && _this._shouldUseHorizontalTabs() ? styles.labelBeside : styles.labelBeneath, labelStyle],\n            allowFontScaling: allowFontScaling,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            }\n          }, label);\n        }\n\n        if (typeof label === 'function') {\n          return label(_objectSpread({}, scene, {\n            tintColor: tintColor\n          }));\n        }\n\n        return label;\n      }, _this._renderIcon = function (scene) {\n        var _this$props2 = _this.props,\n            position = _this$props2.position,\n            navigation = _this$props2.navigation,\n            activeTintColor = _this$props2.activeTintColor,\n            inactiveTintColor = _this$props2.inactiveTintColor,\n            renderIcon = _this$props2.renderIcon,\n            showIcon = _this$props2.showIcon,\n            showLabel = _this$props2.showLabel;\n\n        if (showIcon === false) {\n          return null;\n        }\n\n        var horizontal = _this._shouldUseHorizontalTabs();\n\n        return _react.default.createElement(_TabBarIcon.default, {\n          position: position,\n          navigation: navigation,\n          activeTintColor: activeTintColor,\n          inactiveTintColor: inactiveTintColor,\n          renderIcon: renderIcon,\n          scene: scene,\n          style: [styles.iconWithExplicitHeight, showLabel === false && !horizontal && styles.iconWithoutLabel, showLabel !== false && !horizontal && styles.iconWithLabel],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          }\n        });\n      }, _this._renderTestIDProps = function (scene) {\n        var testIDProps = _this.props.getTestIDProps && _this.props.getTestIDProps(scene);\n\n        return testIDProps;\n      }, _this._handleTabPress = function (index) {\n        var _this$props3 = _this.props,\n            jumpToIndex = _this$props3.jumpToIndex,\n            navigation = _this$props3.navigation;\n        var currentIndex = navigation.state.index;\n\n        if (currentIndex === index) {\n          var childRoute = navigation.state.routes[index];\n\n          if (childRoute.hasOwnProperty('index') && childRoute.index > 0) {\n            navigation.dispatch(_reactNavigation.StackActions.popToTop({\n              key: childRoute.key\n            }));\n          } else {}\n        } else {\n          jumpToIndex(index);\n        }\n      }, _temp));\n    }\n\n    _createClass(TabBarBottom, [{\n      key: \"_tabItemMaxWidth\",\n      value: function _tabItemMaxWidth() {\n        var _this$props4 = this.props,\n            tabStyle = _this$props4.tabStyle,\n            layout = _this$props4.layout;\n        var maxTabBarItemWidth;\n\n        var flattenedTabStyle = _reactNative.StyleSheet.flatten(tabStyle);\n\n        if (flattenedTabStyle) {\n          if (typeof flattenedTabStyle.width === 'number') {\n            maxTabBarItemWidth = flattenedTabStyle.width;\n          } else if (typeof flattenedTabStyle.width === 'string' && flattenedTabStyle.width.endsWith('%')) {\n            var width = parseFloat(flattenedTabStyle.width);\n\n            if (Number.isFinite(width)) {\n              maxTabBarItemWidth = layout.width * (width / 100);\n            }\n          } else if (typeof flattenedTabStyle.maxWidth === 'number') {\n            maxTabBarItemWidth = flattenedTabStyle.maxWidth;\n          } else if (typeof flattenedTabStyle.maxWidth === 'string' && flattenedTabStyle.width.endsWith('%')) {\n            var _width = parseFloat(flattenedTabStyle.maxWidth);\n\n            if (Number.isFinite(_width)) {\n              maxTabBarItemWidth = layout.width * (_width / 100);\n            }\n          }\n        }\n\n        if (!maxTabBarItemWidth) {\n          maxTabBarItemWidth = defaultMaxTabBarItemWidth;\n        }\n\n        return maxTabBarItemWidth;\n      }\n    }, {\n      key: \"_shouldUseHorizontalTabs\",\n      value: function _shouldUseHorizontalTabs() {\n        var routes = this.props.navigation.state.routes;\n        var _this$props5 = this.props,\n            isLandscape = _this$props5.isLandscape,\n            layout = _this$props5.layout,\n            adaptive = _this$props5.adaptive,\n            tabStyle = _this$props5.tabStyle;\n\n        if (!adaptive) {\n          return false;\n        }\n\n        var tabBarWidth = layout.width;\n\n        if (tabBarWidth === 0) {\n          return _reactNative.Platform.isPad;\n        }\n\n        if (!_reactNative.Platform.isPad) {\n          return isLandscape;\n        } else {\n          var maxTabBarItemWidth = this._tabItemMaxWidth();\n\n          return routes.length * maxTabBarItemWidth <= tabBarWidth;\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        var _this$props6 = this.props,\n            position = _this$props6.position,\n            navigation = _this$props6.navigation,\n            jumpToIndex = _this$props6.jumpToIndex,\n            getOnPress = _this$props6.getOnPress,\n            getTestIDProps = _this$props6.getTestIDProps,\n            activeBackgroundColor = _this$props6.activeBackgroundColor,\n            inactiveBackgroundColor = _this$props6.inactiveBackgroundColor,\n            style = _this$props6.style,\n            animateStyle = _this$props6.animateStyle,\n            tabStyle = _this$props6.tabStyle,\n            isLandscape = _this$props6.isLandscape;\n        var routes = navigation.state.routes;\n        var previousScene = routes[navigation.state.index];\n        var inputRange = [-1].concat(_toConsumableArray(routes.map(function (x, i) {\n          return i;\n        })));\n        var tabBarStyle = [styles.tabBar, this._shouldUseHorizontalTabs() && !_reactNative.Platform.isPad ? styles.tabBarCompact : styles.tabBarRegular, style];\n        return _react.default.createElement(_reactNative.Animated.View, {\n          style: animateStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          }\n        }, _react.default.createElement(_reactNavigation.SafeAreaView, {\n          style: tabBarStyle,\n          forceInset: {\n            bottom: 'always',\n            top: 'never'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          }\n        }, routes.map(function (route, index) {\n          var focused = index === navigation.state.index;\n          var scene = {\n            route: route,\n            index: index,\n            focused: focused\n          };\n\n          var _onPress = getOnPress(previousScene, scene);\n\n          var outputRange = inputRange.map(function (inputIndex) {\n            return inputIndex === index ? activeBackgroundColor : inactiveBackgroundColor;\n          });\n          var backgroundColor = position.interpolate({\n            inputRange: inputRange,\n            outputRange: outputRange\n          });\n          var justifyContent = _this2.props.showIcon ? 'flex-end' : 'center';\n          var extraProps = _this2._renderTestIDProps(scene) || {};\n          var testID = extraProps.testID,\n              accessibilityLabel = extraProps.accessibilityLabel;\n          return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {\n            key: route.key,\n            testID: testID,\n            accessibilityLabel: accessibilityLabel,\n            onPress: function onPress() {\n              return _onPress ? _onPress({\n                previousScene: previousScene,\n                scene: scene,\n                jumpToIndex: jumpToIndex,\n                defaultHandler: _this2._handleTabPress\n              }) : _this2._handleTabPress(index);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 261\n            }\n          }, _react.default.createElement(_reactNative.Animated.View, {\n            style: [styles.tab, {\n              backgroundColor: backgroundColor\n            }],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 276\n            }\n          }, _react.default.createElement(_reactNative.View, {\n            style: [styles.tab, _this2._shouldUseHorizontalTabs() ? styles.tabLandscape : styles.tabPortrait, tabStyle],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 277\n            }\n          }, _this2._renderIcon(scene), _this2._renderLabel(scene))));\n        })));\n      }\n    }]);\n\n    _inherits(TabBarBottom, _React$PureComponent);\n\n    return TabBarBottom;\n  }(_react.default.PureComponent);\n\n  TabBarBottom.defaultProps = {\n    activeTintColor: '#3478f6',\n    activeBackgroundColor: 'transparent',\n    inactiveTintColor: '#929292',\n    inactiveBackgroundColor: 'transparent',\n    showLabel: true,\n    showIcon: true,\n    allowFontScaling: true,\n    adaptive: isIOS11\n  };\n  TabBarBottom = _wrapComponent(\"TabBarBottom\")(TabBarBottom);\n  var DEFAULT_HEIGHT = 49;\n  var COMPACT_HEIGHT = 29;\n\n  var styles = _reactNative.StyleSheet.create({\n    tabBar: {\n      backgroundColor: '#F7F7F7',\n      borderTopWidth: _reactNative.StyleSheet.hairlineWidth,\n      borderTopColor: 'rgba(0, 0, 0, .3)',\n      flexDirection: 'row'\n    },\n    tabBarCompact: {\n      height: COMPACT_HEIGHT\n    },\n    tabBarRegular: {\n      height: DEFAULT_HEIGHT\n    },\n    tab: {\n      flex: 1,\n      alignItems: isIos ? 'center' : 'stretch'\n    },\n    tabPortrait: {\n      justifyContent: 'flex-end',\n      flexDirection: 'column'\n    },\n    tabLandscape: {\n      justifyContent: 'center',\n      flexDirection: 'row'\n    },\n    iconWithoutLabel: {\n      flex: 1\n    },\n    iconWithLabel: {\n      flex: 1\n    },\n    iconWithExplicitHeight: {\n      height: _reactNative.Platform.isPad ? DEFAULT_HEIGHT : COMPACT_HEIGHT\n    },\n    label: {\n      textAlign: 'center',\n      backgroundColor: 'transparent'\n    },\n    labelBeneath: {\n      fontSize: 10,\n      marginBottom: 1.5\n    },\n    labelBeside: {\n      fontSize: 13,\n      marginLeft: 20\n    }\n  });\n\n  var _default2 = (0, _reactNavigation.withOrientation)(TabBarBottom);\n\n  exports.default = _default2;\n});","map":[[7,0,1,0],[11,0,2,0],[13,0,10,0],[15,0,17,0],[68,0,19,0],[68,6,19,6,"majorVersion"],[68,21,19,21,"parseInt"],[68,30,19,30,"Platform"],[68,52,19,39,"Version"],[68,59,19,21],[68,61,19,48],[68,63,19,21],[68,64,19,0],[69,0,20,0],[69,6,20,6,"isIos"],[69,14,20,14,"Platform"],[69,36,20,23,"OS"],[69,38,20,14],[69,43,20,30],[69,48,20,0],[70,0,21,0],[70,6,21,6,"isIOS11"],[70,16,21,16,"majorVersion"],[70,32,21,32],[70,34,21,16],[70,38,21,38,"isIos"],[70,43,21,0],[71,0,22,0],[71,6,22,6,"defaultMaxTabBarItemWidth"],[71,34,22,34],[71,37,22,0],[73,6,24,6,"TabBarBottom"],[73,18],[85,206,37,2,"_renderLabel"],[85,218],[85,221,37,17],[85,238,37,26],[86,0,37,26],[86,26,48,8],[86,32,48,13,"props"],[86,37,37,26],[87,0,37,26],[87,12,39,6,"position"],[87,20,37,26],[87,35,39,6,"position"],[87,43,37,26],[88,0,37,26],[88,12,40,6,"navigation"],[88,22,37,26],[88,37,40,6,"navigation"],[88,47,37,26],[89,0,37,26],[89,12,41,6,"activeTintColor"],[89,27,37,26],[89,42,41,6,"activeTintColor"],[89,57,37,26],[90,0,37,26],[90,12,42,6,"inactiveTintColor"],[90,29,37,26],[90,44,42,6,"inactiveTintColor"],[90,61,37,26],[91,0,37,26],[91,12,43,6,"labelStyle"],[91,22,37,26],[91,37,43,6,"labelStyle"],[91,47,37,26],[92,0,37,26],[92,12,44,6,"showLabel"],[92,21,37,26],[92,36,44,6,"showLabel"],[92,45,37,26],[93,0,37,26],[93,12,45,6,"showIcon"],[93,20,37,26],[93,35,45,6,"showIcon"],[93,43,37,26],[94,0,37,26],[94,12,46,6,"isLandscape"],[94,23,37,26],[94,38,46,6,"isLandscape"],[94,49,37,26],[95,0,37,26],[95,12,47,6,"allowFontScaling"],[95,28,37,26],[95,43,47,6,"allowFontScaling"],[95,59,37,26],[97,0,49,4],[97,12,49,8,"showLabel"],[97,26,49,22],[97,31,49,4],[97,33,49,29],[98,0,50,6],[98,17,50,13],[98,21,50,6],[99,0,51,5],[101,0,37,26],[101,12,52,12,"index"],[101,17,37,26],[101,20,52,22,"scene"],[101,25,37,26],[101,26,52,12,"index"],[101,31,37,26],[102,0,37,26],[102,12,53,12,"routes"],[102,18,37,26],[102,21,53,23,"navigation"],[102,32,53,34,"state"],[102,37,37,26],[102,38,53,12,"routes"],[102,44,37,26],[103,0,55,4],[103,12,55,10,"inputRange"],[103,26,55,24],[103,27,55,25],[103,28,55,10],[103,56,55,31,"routes"],[103,63,55,38,"map"],[103,66,55,31],[103,67,55,42],[103,77,55,43,"x"],[103,78,55,42],[103,80,55,46,"i"],[103,81,55,42],[104,0,55,42],[104,17,55,52,"i"],[104,18,55,42],[105,0,55,42],[105,9,55,31],[105,10,55,10],[105,12,55,4],[106,0,56,4],[106,12,56,10,"outputRange"],[106,26,56,24,"inputRange"],[106,37,56,35,"map"],[106,40,56,24],[106,41,57,6],[107,0,57,6],[107,17,57,21,"inputIndex"],[107,32,57,36,"index"],[107,37,57,21],[107,40,57,44,"activeTintColor"],[107,55,57,21],[107,58,57,62,"inactiveTintColor"],[107,75,57,6],[108,0,57,6],[108,9,56,24],[108,10,56,4],[109,0,59,4],[109,12,59,10,"color"],[109,20,59,18,"position"],[109,29,59,27,"interpolate"],[109,40,59,18],[109,41,59,39],[110,0,60,6,"inputRange"],[110,32,59,39],[111,0,61,6,"outputRange"],[111,23,61,19,"outputRange"],[112,0,59,39],[112,9,59,18],[112,10,59,4],[113,0,64,4],[113,12,64,10,"tintColor"],[113,24,64,22,"scene"],[113,30,64,28,"focused"],[113,37,64,22],[113,40,64,38,"activeTintColor"],[113,55,64,22],[113,58,64,56,"inactiveTintColor"],[113,75,64,4],[115,0,65,4],[115,12,65,10,"label"],[115,20,65,18],[115,26,65,23,"props"],[115,31,65,18],[115,32,65,29,"getLabel"],[115,40,65,18],[115,59,65,43,"scene"],[115,64,65,18],[116,0,65,50,"tintColor"],[117,0,65,18],[117,11,65,4],[119,0,67,4],[119,12,67,8],[119,19,67,15,"label"],[119,24,67,8],[119,29,67,25],[119,37,67,4],[119,39,67,35],[120,0,68,6],[120,17,69,8],[120,46,69,9],[120,67,69,8],[120,68,69,18],[120,72,69,8],[121,0,70,10],[121,27,70,25],[121,28,69,8],[122,0,71,10],[122,19,71,17],[122,20,72,12,"styles"],[122,27,72,19,"label"],[122,32,71,17],[122,34,73,12],[123,0,73,14,"color"],[124,0,73,12],[124,13,71,17],[124,15,74,12,"showIcon"],[124,27,74,24],[124,33,74,29,"_shouldUseHorizontalTabs"],[124,57,74,24],[124,59,74,12],[124,62,75,16,"styles"],[124,69,75,23,"labelBeside"],[124,80,74,12],[124,83,76,16,"styles"],[124,90,76,23,"labelBeneath"],[124,102,71,17],[124,104,77,12,"labelStyle"],[124,114,71,17],[124,115,69,8],[125,0,79,10],[125,30,79,28,"allowFontScaling"],[125,46,69,8],[126,0,69,8],[127,0,69,8],[128,0,69,8],[129,0,69,8],[130,0,69,8],[130,13,81,11,"label"],[130,18,69,8],[130,19,68,6],[131,0,84,5],[133,0,86,4],[133,12,86,8],[133,19,86,15,"label"],[133,24,86,8],[133,29,86,25],[133,39,86,4],[133,41,86,37],[134,0,87,6],[134,17,87,13,"label"],[134,41,87,24,"scene"],[134,46,87,13],[135,0,87,31,"tintColor"],[136,0,87,13],[136,13,87,6],[137,0,88,5],[139,0,90,4],[139,15,90,11,"label"],[139,20,90,4],[140,0,91,3],[140,7],[140,15,93,2,"_renderIcon"],[140,26],[140,29,93,16],[140,46,93,25],[141,0,93,25],[141,27,102,8],[141,33,102,13,"props"],[141,38,93,25],[142,0,93,25],[142,12,95,6,"position"],[142,20,93,25],[142,36,95,6,"position"],[142,44,93,25],[143,0,93,25],[143,12,96,6,"navigation"],[143,22,93,25],[143,38,96,6,"navigation"],[143,48,93,25],[144,0,93,25],[144,12,97,6,"activeTintColor"],[144,27,93,25],[144,43,97,6,"activeTintColor"],[144,58,93,25],[145,0,93,25],[145,12,98,6,"inactiveTintColor"],[145,29,93,25],[145,45,98,6,"inactiveTintColor"],[145,62,93,25],[146,0,93,25],[146,12,99,6,"renderIcon"],[146,22,93,25],[146,38,99,6,"renderIcon"],[146,48,93,25],[147,0,93,25],[147,12,100,6,"showIcon"],[147,20,93,25],[147,36,100,6,"showIcon"],[147,44,93,25],[148,0,93,25],[148,12,101,6,"showLabel"],[148,21,93,25],[148,37,101,6,"showLabel"],[148,46,93,25],[150,0,103,4],[150,12,103,8,"showIcon"],[150,25,103,21],[150,30,103,4],[150,32,103,28],[151,0,104,6],[151,17,104,13],[151,21,104,6],[152,0,105,5],[154,0,107,4],[154,12,107,10,"horizontal"],[154,25,107,23],[154,31,107,28,"_shouldUseHorizontalTabs"],[154,55,107,23],[154,57,107,4],[156,0,109,4],[156,15,110,6],[156,44,110,7],[156,63,110,6],[157,0,111,8],[157,20,111,18,"position"],[157,28,110,6],[158,0,112,8],[158,22,112,20,"navigation"],[158,32,110,6],[159,0,113,8],[159,27,113,25,"activeTintColor"],[159,42,110,6],[160,0,114,8],[160,29,114,27,"inactiveTintColor"],[160,46,110,6],[161,0,115,8],[161,22,115,20,"renderIcon"],[161,32,110,6],[162,0,116,8],[162,17,116,15,"scene"],[162,22,110,6],[163,0,117,8],[163,17,117,15],[163,18,118,10,"styles"],[163,25,118,17,"iconWithExplicitHeight"],[163,47,117,15],[163,49,119,10,"showLabel"],[163,63,119,24],[163,68,119,10],[163,72,119,33],[163,73,119,34,"horizontal"],[163,83,119,10],[163,87,119,48,"styles"],[163,94,119,55,"iconWithoutLabel"],[163,110,117,15],[163,112,120,10,"showLabel"],[163,126,120,24],[163,131,120,10],[163,135,120,33],[163,136,120,34,"horizontal"],[163,146,120,10],[163,150,120,48,"styles"],[163,157,120,55,"iconWithLabel"],[163,170,117,15],[163,171,110,6],[164,0,110,6],[165,0,110,6],[166,0,110,6],[167,0,110,6],[168,0,110,6],[168,10,109,4],[169,0,124,3],[169,7],[169,15,126,2,"_renderTestIDProps"],[169,33],[169,36,126,23],[169,53,126,32],[170,0,127,4],[170,12,127,10,"testIDProps"],[170,26,128,6],[170,32,128,11,"props"],[170,37,128,6],[170,38,128,17,"getTestIDProps"],[170,52,128,6],[170,56,128,35],[170,62,128,40,"props"],[170,67,128,35],[170,68,128,46,"getTestIDProps"],[170,82,128,35],[170,83,128,61,"scene"],[170,88,128,35],[170,89,127,4],[172,0,129,4],[172,15,129,11,"testIDProps"],[172,26,129,4],[173,0,130,3],[173,7],[173,15,190,2,"_handleTabPress"],[173,30],[173,33,190,20],[173,50,190,29],[174,0,190,29],[174,27,191,40],[174,33,191,45,"props"],[174,38,190,29],[175,0,190,29],[175,12,191,12,"jumpToIndex"],[175,23,190,29],[175,39,191,12,"jumpToIndex"],[175,50,190,29],[176,0,190,29],[176,12,191,25,"navigation"],[176,22,190,29],[176,38,191,25,"navigation"],[176,48,190,29],[177,0,192,4],[177,12,192,10,"currentIndex"],[177,27,192,25,"navigation"],[177,38,192,36,"state"],[177,43,192,25],[177,44,192,42,"index"],[177,49,192,4],[179,0,194,4],[179,12,194,8,"currentIndex"],[179,29,194,25,"index"],[179,34,194,4],[179,36,194,32],[180,0,195,6],[180,14,195,10,"childRoute"],[180,27,195,23,"navigation"],[180,38,195,34,"state"],[180,43,195,23],[180,44,195,40,"routes"],[180,50,195,23],[180,51,195,47,"index"],[180,56,195,23],[180,57,195,6],[182,0,196,6],[182,14,196,10,"childRoute"],[182,25,196,21,"hasOwnProperty"],[182,39,196,10],[182,40,196,36],[182,47,196,10],[182,52,196,48,"childRoute"],[182,63,196,59,"index"],[182,68,196,48],[182,71,196,67],[182,72,196,6],[182,74,196,70],[183,0,197,8,"navigation"],[183,23,197,19,"dispatch"],[183,31,197,8],[183,32,198,10,"StackActions"],[183,62,198,23,"popToTop"],[183,70,198,10],[183,71,198,32],[184,0,198,34,"key"],[184,19,198,39,"childRoute"],[184,30,198,50,"key"],[185,0,198,32],[185,13,198,10],[185,14,197,8],[186,0,200,7],[186,11,196,6],[186,17,200,13],[186,18,202,7],[187,0,203,5],[187,9,194,4],[187,15,203,11],[188,0,204,6,"jumpToIndex"],[188,22,204,18,"index"],[188,27,204,6],[189,0,205,5],[190,0,206,3],[190,7],[195,41,132,21],[196,0,132,21],[196,27,133,33],[196,32,133,38,"props"],[196,37,132,21],[197,0,132,21],[197,12,133,12,"tabStyle"],[197,20,132,21],[197,36,133,12,"tabStyle"],[197,44,132,21],[198,0,132,21],[198,12,133,22,"layout"],[198,18,132,21],[198,34,133,22,"layout"],[198,40,132,21],[199,0,134,4],[199,12,134,8,"maxTabBarItemWidth"],[199,30,134,4],[201,0,136,4],[201,12,136,10,"flattenedTabStyle"],[201,32,136,30,"StyleSheet"],[201,56,136,41,"flatten"],[201,63,136,30],[201,64,136,49,"tabStyle"],[201,72,136,30],[201,73,136,4],[203,0,138,4],[203,12,138,8,"flattenedTabStyle"],[203,29,138,4],[203,31,138,27],[204,0,139,6],[204,14,139,10],[204,21,139,17,"flattenedTabStyle"],[204,39,139,35,"width"],[204,44,139,10],[204,49,139,45],[204,57,139,6],[204,59,139,55],[205,0,140,8,"maxTabBarItemWidth"],[205,33,140,29,"flattenedTabStyle"],[205,51,140,47,"width"],[205,56,140,8],[206,0,141,7],[206,11,139,6],[206,17,141,13],[206,21,142,8],[206,28,142,15,"flattenedTabStyle"],[206,46,142,33,"width"],[206,51,142,8],[206,56,142,43],[206,64,142,8],[206,68,143,8,"flattenedTabStyle"],[206,86,143,26,"width"],[206,91,143,8],[206,92,143,32,"endsWith"],[206,100,143,8],[206,101,143,41],[206,104,143,8],[206,105,141,13],[206,107,144,8],[207,0,145,8],[207,16,145,14,"width"],[207,24,145,22,"parseFloat"],[207,35,145,33,"flattenedTabStyle"],[207,53,145,51,"width"],[207,58,145,22],[207,59,145,8],[209,0,146,8],[209,16,146,12,"Number"],[209,23,146,19,"isFinite"],[209,31,146,12],[209,32,146,28,"width"],[209,37,146,12],[209,38,146,8],[209,40,146,36],[210,0,147,10,"maxTabBarItemWidth"],[210,35,147,31,"layout"],[210,42,147,38,"width"],[210,47,147,31],[210,51,147,47,"width"],[210,59,147,55],[210,62,147,31],[210,63,147,10],[211,0,148,9],[212,0,149,7],[212,11,141,13],[212,17,149,13],[212,21,149,17],[212,28,149,24,"flattenedTabStyle"],[212,46,149,42,"maxWidth"],[212,54,149,17],[212,59,149,55],[212,67,149,13],[212,69,149,65],[213,0,150,8,"maxTabBarItemWidth"],[213,33,150,29,"flattenedTabStyle"],[213,51,150,47,"maxWidth"],[213,59,150,8],[214,0,151,7],[214,11,149,13],[214,17,151,13],[214,21,152,8],[214,28,152,15,"flattenedTabStyle"],[214,46,152,33,"maxWidth"],[214,54,152,8],[214,59,152,46],[214,67,152,8],[214,71,153,8,"flattenedTabStyle"],[214,89,153,26,"width"],[214,94,153,8],[214,95,153,32,"endsWith"],[214,103,153,8],[214,104,153,41],[214,107,153,8],[214,108,151,13],[214,110,154,8],[215,0,155,8],[215,16,155,14,"width"],[215,25,155,22,"parseFloat"],[215,36,155,33,"flattenedTabStyle"],[215,54,155,51,"maxWidth"],[215,62,155,22],[215,63,155,8],[217,0,156,8],[217,16,156,12,"Number"],[217,23,156,19,"isFinite"],[217,31,156,12],[217,32,156,28,"width"],[217,38,156,12],[217,39,156,8],[217,41,156,36],[218,0,157,10,"maxTabBarItemWidth"],[218,35,157,31,"layout"],[218,42,157,38,"width"],[218,47,157,31],[218,51,157,47,"width"],[218,60,157,55],[218,63,157,31],[218,64,157,10],[219,0,158,9],[220,0,159,7],[221,0,160,5],[223,0,162,4],[223,12,162,8],[223,13,162,9,"maxTabBarItemWidth"],[223,31,162,4],[223,33,162,29],[224,0,163,6,"maxTabBarItemWidth"],[224,31,163,27,"defaultMaxTabBarItemWidth"],[224,56,163,6],[225,0,164,5],[227,0,166,4],[227,15,166,11,"maxTabBarItemWidth"],[227,33,166,4],[228,0,167,3],[231,49,169,29],[232,0,169,29],[232,12,170,12,"routes"],[232,18,169,29],[232,21,170,23],[232,26,170,28,"props"],[232,31,170,23],[232,32,170,34,"navigation"],[232,42,170,23],[232,43,170,45,"state"],[232,48,169,29],[232,49,170,12,"routes"],[232,55,169,29],[233,0,169,29],[233,27,171,56],[233,32,171,61,"props"],[233,37,169,29],[234,0,169,29],[234,12,171,12,"isLandscape"],[234,23,169,29],[234,39,171,12,"isLandscape"],[234,50,169,29],[235,0,169,29],[235,12,171,25,"layout"],[235,18,169,29],[235,34,171,25,"layout"],[235,40,169,29],[236,0,169,29],[236,12,171,33,"adaptive"],[236,20,169,29],[236,36,171,33,"adaptive"],[236,44,169,29],[237,0,169,29],[237,12,171,43,"tabStyle"],[237,20,169,29],[237,36,171,43,"tabStyle"],[237,44,169,29],[239,0,173,4],[239,12,173,8],[239,13,173,9,"adaptive"],[239,21,173,4],[239,23,173,19],[240,0,174,6],[240,17,174,13],[240,22,174,6],[241,0,175,5],[243,0,177,4],[243,12,177,8,"tabBarWidth"],[243,26,177,22,"layout"],[243,33,177,29,"width"],[243,38,177,4],[245,0,178,4],[245,12,178,8,"tabBarWidth"],[245,28,178,24],[245,29,178,4],[245,31,178,27],[246,0,179,6],[246,17,179,13,"Platform"],[246,39,179,22,"isPad"],[246,44,179,6],[247,0,180,5],[249,0,182,4],[249,12,182,8],[249,13,182,9,"Platform"],[249,35,182,18,"isPad"],[249,40,182,4],[249,42,182,25],[250,0,183,6],[250,17,183,13,"isLandscape"],[250,28,183,6],[251,0,184,5],[251,9,182,4],[251,15,184,11],[252,0,185,6],[252,14,185,12,"maxTabBarItemWidth"],[252,35,185,33],[252,40,185,38,"_tabItemMaxWidth"],[252,56,185,33],[252,58,185,6],[254,0,186,6],[254,17,186,13,"routes"],[254,24,186,20,"length"],[254,30,186,13],[254,33,186,29,"maxTabBarItemWidth"],[254,51,186,13],[254,55,186,51,"tabBarWidth"],[254,66,186,6],[255,0,187,5],[256,0,188,3],[259,31,208,11],[260,0,208,11],[262,0,208,11],[262,27,221,8],[262,32,221,13,"props"],[262,37,208,11],[263,0,208,11],[263,12,210,6,"position"],[263,20,208,11],[263,36,210,6,"position"],[263,44,208,11],[264,0,208,11],[264,12,211,6,"navigation"],[264,22,208,11],[264,38,211,6,"navigation"],[264,48,208,11],[265,0,208,11],[265,12,212,6,"jumpToIndex"],[265,23,208,11],[265,39,212,6,"jumpToIndex"],[265,50,208,11],[266,0,208,11],[266,12,213,6,"getOnPress"],[266,22,208,11],[266,38,213,6,"getOnPress"],[266,48,208,11],[267,0,208,11],[267,12,214,6,"getTestIDProps"],[267,26,208,11],[267,42,214,6,"getTestIDProps"],[267,56,208,11],[268,0,208,11],[268,12,215,6,"activeBackgroundColor"],[268,33,208,11],[268,49,215,6,"activeBackgroundColor"],[268,70,208,11],[269,0,208,11],[269,12,216,6,"inactiveBackgroundColor"],[269,35,208,11],[269,51,216,6,"inactiveBackgroundColor"],[269,74,208,11],[270,0,208,11],[270,12,217,6,"style"],[270,17,208,11],[270,33,217,6,"style"],[270,38,208,11],[271,0,208,11],[271,12,218,6,"animateStyle"],[271,24,208,11],[271,40,218,6,"animateStyle"],[271,52,208,11],[272,0,208,11],[272,12,219,6,"tabStyle"],[272,20,208,11],[272,36,219,6,"tabStyle"],[272,44,208,11],[273,0,208,11],[273,12,220,6,"isLandscape"],[273,23,208,11],[273,39,220,6,"isLandscape"],[273,50,208,11],[274,0,208,11],[274,12,222,12,"routes"],[274,18,208,11],[274,21,222,23,"navigation"],[274,32,222,34,"state"],[274,37,208,11],[274,38,222,12,"routes"],[274,44,208,11],[275,0,223,4],[275,12,223,10,"previousScene"],[275,28,223,26,"routes"],[275,35,223,33,"navigation"],[275,46,223,44,"state"],[275,51,223,33],[275,52,223,50,"index"],[275,57,223,26],[275,58,223,4],[276,0,225,4],[276,12,225,10,"inputRange"],[276,26,225,24],[276,27,225,25],[276,28,225,10],[276,56,225,31,"routes"],[276,63,225,38,"map"],[276,66,225,31],[276,67,225,42],[276,77,225,43,"x"],[276,78,225,42],[276,80,225,46,"i"],[276,81,225,42],[277,0,225,42],[277,17,225,52,"i"],[277,18,225,42],[278,0,225,42],[278,9,225,31],[278,10,225,10],[278,12,225,4],[279,0,227,4],[279,12,227,10,"tabBarStyle"],[279,26,227,24],[279,27,228,6,"styles"],[279,34,228,13,"tabBar"],[279,40,227,24],[279,42,229,6],[279,47,229,11,"_shouldUseHorizontalTabs"],[279,71,229,6],[279,77,229,41],[279,78,229,42,"Platform"],[279,100,229,51,"isPad"],[279,105,229,6],[279,108,230,10,"styles"],[279,115,230,17,"tabBarCompact"],[279,128,229,6],[279,131,231,10,"styles"],[279,138,231,17,"tabBarRegular"],[279,151,227,24],[279,153,232,6,"style"],[279,158,227,24],[279,159,227,4],[280,0,235,4],[280,15,236,6],[280,44,236,7],[280,65,236,6],[280,66,236,16],[280,70,236,6],[281,0,236,21],[281,17,236,28,"animateStyle"],[281,29,236,6],[282,0,236,6],[283,0,236,6],[284,0,236,6],[285,0,236,6],[286,0,236,6],[286,11,237,8],[286,40,237,9],[286,69,237,8],[287,0,238,10],[287,17,238,17,"tabBarStyle"],[287,28,237,8],[288,0,239,10],[288,22,239,22],[289,0,239,24,"bottom"],[289,20,239,32],[289,28,239,22],[290,0,239,42,"top"],[290,17,239,47],[291,0,239,22],[291,11,237,8],[292,0,237,8],[293,0,237,8],[294,0,237,8],[295,0,237,8],[296,0,237,8],[296,11,241,11,"routes"],[296,18,241,18,"map"],[296,21,241,11],[296,22,241,22],[296,32,241,23,"route"],[296,37,241,22],[296,39,241,30,"index"],[296,44,241,22],[296,46,241,40],[297,0,242,12],[297,14,242,18,"focused"],[297,24,242,28,"index"],[297,34,242,38,"navigation"],[297,45,242,49,"state"],[297,50,242,38],[297,51,242,55,"index"],[297,56,242,12],[298,0,243,12],[298,14,243,18,"scene"],[298,22,243,26],[299,0,243,28,"route"],[299,24,243,26],[300,0,243,35,"index"],[300,24,243,26],[301,0,243,42,"focused"],[302,0,243,26],[302,11,243,12],[304,0,244,12],[304,14,244,18,"onPress"],[304,25,244,28,"getOnPress"],[304,36,244,39,"previousScene"],[304,49,244,28],[304,51,244,54,"scene"],[304,56,244,28],[304,57,244,12],[306,0,245,12],[306,14,245,18,"outputRange"],[306,28,245,32,"inputRange"],[306,39,245,43,"map"],[306,42,245,32],[306,43,246,14],[307,0,246,14],[307,19,247,16,"inputIndex"],[307,34,247,31,"index"],[307,39,247,16],[307,42,248,20,"activeBackgroundColor"],[307,63,247,16],[307,66,249,20,"inactiveBackgroundColor"],[307,89,246,14],[308,0,246,14],[308,11,245,32],[308,12,245,12],[309,0,251,12],[309,14,251,18,"backgroundColor"],[309,32,251,36,"position"],[309,41,251,45,"interpolate"],[309,52,251,36],[309,53,251,57],[310,0,252,14,"inputRange"],[310,34,251,57],[311,0,253,14,"outputRange"],[311,25,253,27,"outputRange"],[312,0,251,57],[312,11,251,36],[312,12,251,12],[313,0,256,12],[313,14,256,18,"justifyContent"],[313,31,256,35],[313,38,256,40,"props"],[313,43,256,35],[313,44,256,46,"showIcon"],[313,52,256,35],[313,55,256,57],[313,65,256,35],[313,68,256,70],[313,76,256,12],[314,0,257,12],[314,14,257,18,"extraProps"],[314,27,257,31],[314,34,257,36,"_renderTestIDProps"],[314,52,257,31],[314,53,257,55,"scene"],[314,58,257,31],[314,63,257,65],[314,65,257,12],[315,0,241,40],[315,14,258,20,"testID"],[315,20,241,40],[315,23,258,51,"extraProps"],[315,33,241,40],[315,34,258,20,"testID"],[315,40,241,40],[316,0,241,40],[316,14,258,28,"accessibilityLabel"],[316,32,241,40],[316,35,258,51,"extraProps"],[316,45,241,40],[316,46,258,28,"accessibilityLabel"],[316,64,241,40],[317,0,260,12],[317,17,261,14],[317,46,261,15],[317,83,261,14],[318,0,262,16],[318,17,262,21,"route"],[318,23,262,27,"key"],[318,26,261,14],[319,0,263,16],[319,20,263,24,"testID"],[319,26,261,14],[320,0,264,16],[320,32,264,36,"accessibilityLabel"],[320,50,261,14],[321,0,265,16],[321,21,265,25],[322,0,265,25],[322,21,266,18,"onPress"],[322,32,267,22,"onPress"],[322,41,267,30],[323,0,268,24,"previousScene"],[323,44,267,30],[324,0,269,24,"scene"],[324,28,267,30],[325,0,270,24,"jumpToIndex"],[325,40,267,30],[326,0,271,24,"defaultHandler"],[326,32,271,40],[326,39,271,45,"_handleTabPress"],[327,0,267,30],[327,15,267,22],[327,16,266,18],[327,19,273,22],[327,26,273,27,"_handleTabPress"],[327,41,273,22],[327,42,273,43,"index"],[327,47,273,22],[327,48,265,25],[328,0,265,25],[328,13,261,14],[329,0,261,14],[330,0,261,14],[331,0,261,14],[332,0,261,14],[333,0,261,14],[333,13,276,16],[333,42,276,17],[333,63,276,16],[333,64,276,26],[333,68,276,16],[334,0,276,31],[334,19,276,38],[334,20,276,39,"styles"],[334,27,276,46,"tab"],[334,30,276,38],[334,32,276,51],[335,0,276,53,"backgroundColor"],[336,0,276,51],[336,13,276,38],[336,14,276,16],[337,0,276,16],[338,0,276,16],[339,0,276,16],[340,0,276,16],[341,0,276,16],[341,13,277,18],[341,42,277,19],[341,59,277,18],[342,0,278,20],[342,19,278,27],[342,20,279,22,"styles"],[342,27,279,29,"tab"],[342,30,278,27],[342,32,280,22],[342,39,280,27,"_shouldUseHorizontalTabs"],[342,63,280,22],[342,68,281,26,"styles"],[342,75,281,33,"tabLandscape"],[342,87,280,22],[342,90,282,26,"styles"],[342,97,282,33,"tabPortrait"],[342,108,278,27],[342,110,283,22,"tabStyle"],[342,118,278,27],[342,119,277,18],[343,0,277,18],[344,0,277,18],[345,0,277,18],[346,0,277,18],[347,0,277,18],[347,13,286,21],[347,20,286,26,"_renderIcon"],[347,31,286,21],[347,32,286,38,"scene"],[347,37,286,21],[347,38,277,18],[347,40,287,21],[347,47,287,26,"_renderLabel"],[347,59,287,21],[347,60,287,39,"scene"],[347,65,287,21],[347,66,277,18],[347,67,276,16],[347,68,261,14],[347,69,260,12],[348,0,292,11],[348,9,241,11],[348,10,237,8],[348,11,236,6],[348,12,235,4],[349,0,296,3],[355,4,24,27,"React"],[355,19,24,33,"PureComponent"],[355,32],[357,0,24,6,"TabBarBottom"],[357,14],[357,15,26,9,"defaultProps"],[357,27],[357,30,26,24],[358,0,27,4,"activeTintColor"],[358,21,27,21],[358,30,26,24],[359,0,28,4,"activeBackgroundColor"],[359,27,28,27],[359,40,26,24],[360,0,29,4,"inactiveTintColor"],[360,23,29,23],[360,32,26,24],[361,0,30,4,"inactiveBackgroundColor"],[361,29,30,29],[361,42,26,24],[362,0,31,4,"showLabel"],[362,15,31,15],[362,19,26,24],[363,0,32,4,"showIcon"],[363,14,32,14],[363,18,26,24],[364,0,33,4,"allowFontScaling"],[364,22,33,22],[364,26,26,24],[365,0,34,4,"adaptive"],[365,14,34,14,"isIOS11"],[366,0,26,24],[366,3],[368,0,299,0],[368,6,299,6,"DEFAULT_HEIGHT"],[368,23,299,23],[368,25,299,0],[369,0,300,0],[369,6,300,6,"COMPACT_HEIGHT"],[369,23,300,23],[369,25,300,0],[371,0,302,0],[371,6,302,6,"styles"],[371,15,302,15,"StyleSheet"],[371,39,302,26,"create"],[371,45,302,15],[371,46,302,33],[372,0,303,2,"tabBar"],[372,12,303,10],[373,0,304,4,"backgroundColor"],[373,23,304,21],[373,32,303,10],[374,0,305,4,"borderTopWidth"],[374,22,305,20,"StyleSheet"],[374,46,305,31,"hairlineWidth"],[374,59,303,10],[375,0,306,4,"borderTopColor"],[375,22,306,20],[375,41,303,10],[376,0,307,4,"flexDirection"],[376,21,307,19],[377,0,303,10],[377,5,302,33],[378,0,309,2,"tabBarCompact"],[378,19,309,17],[379,0,310,4,"height"],[379,14,310,12,"COMPACT_HEIGHT"],[380,0,309,17],[380,5,302,33],[381,0,312,2,"tabBarRegular"],[381,19,312,17],[382,0,313,4,"height"],[382,14,313,12,"DEFAULT_HEIGHT"],[383,0,312,17],[383,5,302,33],[384,0,315,2,"tab"],[384,9,315,7],[385,0,316,4,"flex"],[385,12,316,10],[385,13,315,7],[386,0,317,4,"alignItems"],[386,18,317,16,"isIos"],[386,26,317,24],[386,34,317,16],[386,37,317,35],[387,0,315,7],[387,5,302,33],[388,0,319,2,"tabPortrait"],[388,17,319,15],[389,0,320,4,"justifyContent"],[389,22,320,20],[389,32,319,15],[390,0,321,4,"flexDirection"],[390,21,321,19],[391,0,319,15],[391,5,302,33],[392,0,323,2,"tabLandscape"],[392,18,323,16],[393,0,324,4,"justifyContent"],[393,22,324,20],[393,30,323,16],[394,0,325,4,"flexDirection"],[394,21,325,19],[395,0,323,16],[395,5,302,33],[396,0,327,2,"iconWithoutLabel"],[396,22,327,20],[397,0,328,4,"flex"],[397,12,328,10],[398,0,327,20],[398,5,302,33],[399,0,330,2,"iconWithLabel"],[399,19,330,17],[400,0,331,4,"flex"],[400,12,331,10],[401,0,330,17],[401,5,302,33],[402,0,333,2,"iconWithExplicitHeight"],[402,28,333,26],[403,0,334,4,"height"],[403,14,334,12,"Platform"],[403,36,334,21,"isPad"],[403,41,334,12],[403,44,334,29,"DEFAULT_HEIGHT"],[403,58,334,12],[403,61,334,46,"COMPACT_HEIGHT"],[404,0,333,26],[404,5,302,33],[405,0,336,2,"label"],[405,11,336,9],[406,0,337,4,"textAlign"],[406,17,337,15],[406,25,336,9],[407,0,338,4,"backgroundColor"],[407,23,338,21],[408,0,336,9],[408,5,302,33],[409,0,340,2,"labelBeneath"],[409,18,340,16],[410,0,341,4,"fontSize"],[410,16,341,14],[410,18,340,16],[411,0,342,4,"marginBottom"],[411,20,342,18],[412,0,340,16],[412,5,302,33],[413,0,344,2,"labelBeside"],[413,17,344,15],[414,0,345,4,"fontSize"],[414,16,345,14],[414,18,344,15],[415,0,346,4,"marginLeft"],[415,18,346,16],[416,0,344,15],[417,0,302,33],[417,3,302,15],[417,4,302,0],[419,18,350,15],[419,56,350,31,"TabBarBottom"],[419,68,350,15],[419,69]]},"type":"js/module"}]}