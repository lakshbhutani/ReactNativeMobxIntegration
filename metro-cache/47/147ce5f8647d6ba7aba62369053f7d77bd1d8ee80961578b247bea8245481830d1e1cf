{"dependencies":[{"name":"Platform","isAsync":false},{"name":"React","isAsync":false},{"name":"prop-types","isAsync":false},{"name":"ReactNative","isAsync":false},{"name":"Touchable","isAsync":false},{"name":"TouchableWithoutFeedback","isAsync":false},{"name":"UIManager","isAsync":false},{"name":"create-react-class","isAsync":false},{"name":"ensurePositiveDelayProps","isAsync":false},{"name":"processColor","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var Platform = _$$_REQUIRE(_dependencyMap[0], 'Platform');\n\n  var React = _$$_REQUIRE(_dependencyMap[1], 'React');\n\n  var PropTypes = _$$_REQUIRE(_dependencyMap[2], 'prop-types');\n\n  var ReactNative = _$$_REQUIRE(_dependencyMap[3], 'ReactNative');\n\n  var Touchable = _$$_REQUIRE(_dependencyMap[4], 'Touchable');\n\n  var TouchableWithoutFeedback = _$$_REQUIRE(_dependencyMap[5], 'TouchableWithoutFeedback');\n\n  var UIManager = _$$_REQUIRE(_dependencyMap[6], 'UIManager');\n\n  var createReactClass = _$$_REQUIRE(_dependencyMap[7], 'create-react-class');\n\n  var ensurePositiveDelayProps = _$$_REQUIRE(_dependencyMap[8], 'ensurePositiveDelayProps');\n\n  var processColor = _$$_REQUIRE(_dependencyMap[9], 'processColor');\n\n  var rippleBackgroundPropType = PropTypes.shape({\n    type: PropTypes.oneOf(['RippleAndroid']),\n    color: PropTypes.number,\n    borderless: PropTypes.bool\n  });\n  var themeAttributeBackgroundPropType = PropTypes.shape({\n    type: PropTypes.oneOf(['ThemeAttrAndroid']),\n    attribute: PropTypes.string.isRequired\n  });\n  var backgroundPropType = PropTypes.oneOfType([rippleBackgroundPropType, themeAttributeBackgroundPropType]);\n  var PRESS_RETENTION_OFFSET = {\n    top: 20,\n    left: 20,\n    right: 20,\n    bottom: 30\n  };\n  var TouchableNativeFeedback = createReactClass({\n    displayName: 'TouchableNativeFeedback',\n    propTypes: _objectSpread({}, TouchableWithoutFeedback.propTypes, {\n      background: backgroundPropType,\n      hasTVPreferredFocus: PropTypes.bool,\n      useForeground: PropTypes.bool\n    }),\n    statics: {\n      SelectableBackground: function SelectableBackground() {\n        return {\n          type: 'ThemeAttrAndroid',\n          attribute: 'selectableItemBackground'\n        };\n      },\n      SelectableBackgroundBorderless: function SelectableBackgroundBorderless() {\n        return {\n          type: 'ThemeAttrAndroid',\n          attribute: 'selectableItemBackgroundBorderless'\n        };\n      },\n      Ripple: function Ripple(color, borderless) {\n        return {\n          type: 'RippleAndroid',\n          color: processColor(color),\n          borderless: borderless\n        };\n      },\n      canUseNativeForeground: function canUseNativeForeground() {\n        return Platform.OS === 'android' && Platform.Version >= 23;\n      }\n    },\n    mixins: [Touchable.Mixin],\n    getDefaultProps: function getDefaultProps() {\n      return {\n        background: this.SelectableBackground()\n      };\n    },\n    getInitialState: function getInitialState() {\n      return this.touchableGetInitialState();\n    },\n    componentDidMount: function componentDidMount() {\n      ensurePositiveDelayProps(this.props);\n    },\n    UNSAFE_componentWillReceiveProps: function UNSAFE_componentWillReceiveProps(nextProps) {\n      ensurePositiveDelayProps(nextProps);\n    },\n    touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {\n      this.props.onPressIn && this.props.onPressIn(e);\n\n      this._dispatchPressedStateChange(true);\n\n      if (this.pressInLocation) {\n        this._dispatchHotspotUpdate(this.pressInLocation.locationX, this.pressInLocation.locationY);\n      }\n    },\n    touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {\n      this.props.onPressOut && this.props.onPressOut(e);\n\n      this._dispatchPressedStateChange(false);\n    },\n    touchableHandlePress: function touchableHandlePress(e) {\n      this.props.onPress && this.props.onPress(e);\n    },\n    touchableHandleLongPress: function touchableHandleLongPress(e) {\n      this.props.onLongPress && this.props.onLongPress(e);\n    },\n    touchableGetPressRectOffset: function touchableGetPressRectOffset() {\n      return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;\n    },\n    touchableGetHitSlop: function touchableGetHitSlop() {\n      return this.props.hitSlop;\n    },\n    touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {\n      return this.props.delayPressIn;\n    },\n    touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {\n      return this.props.delayLongPress;\n    },\n    touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {\n      return this.props.delayPressOut;\n    },\n    _handleResponderMove: function _handleResponderMove(e) {\n      this.touchableHandleResponderMove(e);\n\n      this._dispatchHotspotUpdate(e.nativeEvent.locationX, e.nativeEvent.locationY);\n    },\n    _dispatchHotspotUpdate: function _dispatchHotspotUpdate(destX, destY) {\n      UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(this), UIManager.RCTView.Commands.hotspotUpdate, [destX || 0, destY || 0]);\n    },\n    _dispatchPressedStateChange: function _dispatchPressedStateChange(pressed) {\n      UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(this), UIManager.RCTView.Commands.setPressed, [pressed]);\n    },\n    render: function render() {\n      var _objectSpread2;\n\n      var child = React.Children.only(this.props.children);\n      var children = child.props.children;\n\n      if (Touchable.TOUCH_TARGET_DEBUG && child.type.displayName === 'View') {\n        if (!Array.isArray(children)) {\n          children = [children];\n        }\n\n        children.push(Touchable.renderDebugView({\n          color: 'brown',\n          hitSlop: this.props.hitSlop\n        }));\n      }\n\n      if (this.props.useForeground && !TouchableNativeFeedback.canUseNativeForeground()) {\n        console.warn('Requested foreground ripple, but it is not available on this version of Android. ' + 'Consider calling TouchableNativeFeedback.canUseNativeForeground() and using a different ' + 'Touchable if the result is false.');\n      }\n\n      var drawableProp = this.props.useForeground && TouchableNativeFeedback.canUseNativeForeground() ? 'nativeForegroundAndroid' : 'nativeBackgroundAndroid';\n\n      var childProps = _objectSpread({}, child.props, (_objectSpread2 = {}, _defineProperty(_objectSpread2, drawableProp, this.props.background), _defineProperty(_objectSpread2, \"accessible\", this.props.accessible !== false), _defineProperty(_objectSpread2, \"accessibilityLabel\", this.props.accessibilityLabel), _defineProperty(_objectSpread2, \"accessibilityComponentType\", this.props.accessibilityComponentType), _defineProperty(_objectSpread2, \"accessibilityTraits\", this.props.accessibilityTraits), _defineProperty(_objectSpread2, \"children\", children), _defineProperty(_objectSpread2, \"testID\", this.props.testID), _defineProperty(_objectSpread2, \"onLayout\", this.props.onLayout), _defineProperty(_objectSpread2, \"hitSlop\", this.props.hitSlop), _defineProperty(_objectSpread2, \"isTVSelectable\", true), _defineProperty(_objectSpread2, \"hasTVPreferredFocus\", this.props.hasTVPreferredFocus), _defineProperty(_objectSpread2, \"onStartShouldSetResponder\", this.touchableHandleStartShouldSetResponder), _defineProperty(_objectSpread2, \"onResponderTerminationRequest\", this.touchableHandleResponderTerminationRequest), _defineProperty(_objectSpread2, \"onResponderGrant\", this.touchableHandleResponderGrant), _defineProperty(_objectSpread2, \"onResponderMove\", this._handleResponderMove), _defineProperty(_objectSpread2, \"onResponderRelease\", this.touchableHandleResponderRelease), _defineProperty(_objectSpread2, \"onResponderTerminate\", this.touchableHandleResponderTerminate), _objectSpread2));\n\n      return React.cloneElement(child, childProps);\n    }\n  });\n  module.exports = TouchableNativeFeedback;\n});","map":[[2,0,10,0],[8,0,12,0],[8,6,12,6,"Platform"],[8,17,12,17,"require"],[8,48,12,25],[8,58,12,17],[8,59,12,0],[10,0,13,0],[10,6,13,6,"React"],[10,14,13,14,"require"],[10,45,13,22],[10,52,13,14],[10,53,13,0],[12,0,14,0],[12,6,14,6,"PropTypes"],[12,18,14,18,"require"],[12,49,14,26],[12,61,14,18],[12,62,14,0],[14,0,15,0],[14,6,15,6,"ReactNative"],[14,20,15,20,"require"],[14,51,15,28],[14,64,15,20],[14,65,15,0],[16,0,16,0],[16,6,16,6,"Touchable"],[16,18,16,18,"require"],[16,49,16,26],[16,60,16,18],[16,61,16,0],[18,0,17,0],[18,6,17,6,"TouchableWithoutFeedback"],[18,33,17,33,"require"],[18,64,17,41],[18,90,17,33],[18,91,17,0],[20,0,18,0],[20,6,18,6,"UIManager"],[20,18,18,18,"require"],[20,49,18,26],[20,60,18,18],[20,61,18,0],[22,0,20,0],[22,6,20,6,"createReactClass"],[22,25,20,25,"require"],[22,56,20,33],[22,76,20,25],[22,77,20,0],[24,0,21,0],[24,6,21,6,"ensurePositiveDelayProps"],[24,33,21,33,"require"],[24,64,21,41],[24,90,21,33],[24,91,21,0],[26,0,22,0],[26,6,22,6,"processColor"],[26,21,22,21,"require"],[26,52,22,29],[26,66,22,21],[26,67,22,0],[28,0,24,0],[28,6,24,6,"rippleBackgroundPropType"],[28,33,24,33,"PropTypes"],[28,43,24,43,"shape"],[28,48,24,33],[28,49,24,49],[29,0,25,2,"type"],[29,10,25,8,"PropTypes"],[29,20,25,18,"oneOf"],[29,25,25,8],[29,26,25,24],[29,27,25,25],[29,42,25,24],[29,43,25,8],[29,44,24,49],[30,0,26,2,"color"],[30,11,26,9,"PropTypes"],[30,21,26,19,"number"],[30,27,24,49],[31,0,27,2,"borderless"],[31,16,27,14,"PropTypes"],[31,26,27,24,"bool"],[32,0,24,49],[32,3,24,33],[32,4,24,0],[33,0,30,0],[33,6,30,6,"themeAttributeBackgroundPropType"],[33,41,30,41,"PropTypes"],[33,51,30,51,"shape"],[33,56,30,41],[33,57,30,57],[34,0,31,2,"type"],[34,10,31,8,"PropTypes"],[34,20,31,18,"oneOf"],[34,25,31,8],[34,26,31,24],[34,27,31,25],[34,45,31,24],[34,46,31,8],[34,47,30,57],[35,0,32,2,"attribute"],[35,15,32,13,"PropTypes"],[35,25,32,23,"string"],[35,31,32,13],[35,32,32,30,"isRequired"],[36,0,30,57],[36,3,30,41],[36,4,30,0],[37,0,35,0],[37,6,35,6,"backgroundPropType"],[37,27,35,27,"PropTypes"],[37,37,35,37,"oneOfType"],[37,46,35,27],[37,47,35,47],[37,48,36,2,"rippleBackgroundPropType"],[37,72,35,47],[37,74,37,2,"themeAttributeBackgroundPropType"],[37,106,35,47],[37,107,35,27],[37,108,35,0],[38,0,42,0],[38,6,42,6,"PRESS_RETENTION_OFFSET"],[38,31,42,31],[39,0,42,32,"top"],[39,9,42,37],[39,11,42,31],[40,0,42,41,"left"],[40,10,42,47],[40,12,42,31],[41,0,42,51,"right"],[41,11,42,58],[41,13,42,31],[42,0,42,62,"bottom"],[42,12,42,70],[43,0,42,31],[43,3,42,0],[44,0,73,0],[44,6,73,6,"TouchableNativeFeedback"],[44,32,73,32,"createReactClass"],[44,49,73,49],[45,0,74,2,"displayName"],[45,17,74,15],[45,42,73,49],[46,0,75,2,"propTypes"],[46,33,76,7,"TouchableWithoutFeedback"],[46,58,76,32,"propTypes"],[46,67,75,2],[47,0,84,4,"background"],[47,18,84,16,"backgroundPropType"],[47,36,75,2],[48,0,89,4,"hasTVPreferredFocus"],[48,27,89,25,"PropTypes"],[48,37,89,35,"bool"],[48,41,75,2],[49,0,100,4,"useForeground"],[49,21,100,19,"PropTypes"],[49,31,100,29,"bool"],[50,0,75,2],[50,6,73,49],[51,0,103,2,"statics"],[51,13,103,11],[52,0,108,4,"SelectableBackground"],[52,28,108,26],[52,60,108,37],[53,0,109,6],[53,15,109,13],[54,0,109,14,"type"],[54,16,109,20],[54,34,109,13],[55,0,109,40,"attribute"],[55,21,109,51],[56,0,109,13],[56,9,109,6],[57,0,110,5],[57,7,103,11],[58,0,116,4,"SelectableBackgroundBorderless"],[58,38,116,36],[58,80,116,47],[59,0,117,6],[59,15,117,13],[60,0,118,8,"type"],[60,16,118,14],[60,34,117,13],[61,0,119,8,"attribute"],[61,21,119,19],[62,0,117,13],[62,9,117,6],[63,0,121,5],[63,7,103,11],[64,0,132,4,"Ripple"],[64,14,132,12],[64,30,132,21,"color"],[64,35,132,12],[64,37,132,36,"borderless"],[64,47,132,12],[64,49,132,57],[65,0,133,6],[65,15,133,13],[66,0,134,8,"type"],[66,16,134,14],[66,31,133,13],[67,0,135,8,"color"],[67,17,135,15,"processColor"],[67,30,135,28,"color"],[67,35,135,15],[67,36,133,13],[68,0,136,8,"borderless"],[68,22,136,20,"borderless"],[69,0,133,13],[69,9,133,6],[70,0,138,5],[70,7,103,11],[71,0,140,4,"canUseNativeForeground"],[71,30,140,28],[71,64,140,39],[72,0,141,6],[72,15,141,13,"Platform"],[72,24,141,22,"OS"],[72,26,141,13],[72,31,141,29],[72,40,141,13],[72,44,141,42,"Platform"],[72,53,141,51,"Version"],[72,60,141,42],[72,64,141,62],[72,66,141,6],[73,0,142,5],[74,0,103,11],[74,5,73,49],[75,0,145,2,"mixins"],[75,12,145,10],[75,13,145,11,"Touchable"],[75,23,145,21,"Mixin"],[75,28,145,10],[75,29,73,49],[76,0,147,2,"getDefaultProps"],[76,21,147,19],[76,48,147,30],[77,0,148,4],[77,13,148,11],[78,0,149,6,"background"],[78,20,149,18],[78,25,149,23,"SelectableBackground"],[78,45,149,18],[79,0,148,11],[79,7,148,4],[80,0,151,3],[80,5,73,49],[81,0,153,2,"getInitialState"],[81,21,153,19],[81,48,153,30],[82,0,154,4],[82,13,154,11],[82,18,154,16,"touchableGetInitialState"],[82,42,154,11],[82,44,154,4],[83,0,155,3],[83,5,73,49],[84,0,157,2,"componentDidMount"],[84,23,157,21],[84,52,157,32],[85,0,158,4,"ensurePositiveDelayProps"],[85,31,158,29],[85,36,158,34,"props"],[85,41,158,4],[86,0,159,3],[86,5,73,49],[87,0,161,2,"UNSAFE_componentWillReceiveProps"],[87,38,161,36],[87,80,161,45,"nextProps"],[87,89,161,36],[87,91,161,56],[88,0,162,4,"ensurePositiveDelayProps"],[88,31,162,29,"nextProps"],[88,40,162,4],[89,0,163,3],[89,5,73,49],[90,0,169,2,"touchableHandleActivePressIn"],[90,34,169,32],[90,72,169,41,"e"],[90,73,169,32],[90,75,169,51],[91,0,170,4],[91,11,170,9,"props"],[91,16,170,4],[91,17,170,15,"onPressIn"],[91,26,170,4],[91,30,170,28],[91,35,170,33,"props"],[91,40,170,28],[91,41,170,39,"onPressIn"],[91,50,170,28],[91,51,170,49,"e"],[91,52,170,28],[91,53,170,4],[93,0,171,4],[93,11,171,9,"_dispatchPressedStateChange"],[93,38,171,4],[93,39,171,37],[93,43,171,4],[95,0,172,4],[95,10,172,8],[95,15,172,13,"pressInLocation"],[95,30,172,4],[95,32,172,30],[96,0,173,6],[96,13,173,11,"_dispatchHotspotUpdate"],[96,35,173,6],[96,36,174,8],[96,41,174,13,"pressInLocation"],[96,56,174,8],[96,57,174,29,"locationX"],[96,66,173,6],[96,68,175,8],[96,73,175,13,"pressInLocation"],[96,88,175,8],[96,89,175,29,"locationY"],[96,98,173,6],[97,0,177,5],[98,0,178,3],[98,5,73,49],[99,0,180,2,"touchableHandleActivePressOut"],[99,35,180,33],[99,74,180,42,"e"],[99,75,180,33],[99,77,180,52],[100,0,181,4],[100,11,181,9,"props"],[100,16,181,4],[100,17,181,15,"onPressOut"],[100,27,181,4],[100,31,181,29],[100,36,181,34,"props"],[100,41,181,29],[100,42,181,40,"onPressOut"],[100,52,181,29],[100,53,181,51,"e"],[100,54,181,29],[100,55,181,4],[102,0,182,4],[102,11,182,9,"_dispatchPressedStateChange"],[102,38,182,4],[102,39,182,37],[102,44,182,4],[103,0,183,3],[103,5,73,49],[104,0,185,2,"touchableHandlePress"],[104,26,185,24],[104,56,185,33,"e"],[104,57,185,24],[104,59,185,43],[105,0,186,4],[105,11,186,9,"props"],[105,16,186,4],[105,17,186,15,"onPress"],[105,24,186,4],[105,28,186,26],[105,33,186,31,"props"],[105,38,186,26],[105,39,186,37,"onPress"],[105,46,186,26],[105,47,186,45,"e"],[105,48,186,26],[105,49,186,4],[106,0,187,3],[106,5,73,49],[107,0,189,2,"touchableHandleLongPress"],[107,30,189,28],[107,64,189,37,"e"],[107,65,189,28],[107,67,189,47],[108,0,190,4],[108,11,190,9,"props"],[108,16,190,4],[108,17,190,15,"onLongPress"],[108,28,190,4],[108,32,190,30],[108,37,190,35,"props"],[108,42,190,30],[108,43,190,41,"onLongPress"],[108,54,190,30],[108,55,190,53,"e"],[108,56,190,30],[108,57,190,4],[109,0,191,3],[109,5,73,49],[110,0,193,2,"touchableGetPressRectOffset"],[110,33,193,31],[110,72,193,42],[111,0,195,4],[111,13,195,11],[111,18,195,16,"props"],[111,23,195,11],[111,24,195,22,"pressRetentionOffset"],[111,44,195,11],[111,48,195,46,"PRESS_RETENTION_OFFSET"],[111,70,195,4],[112,0,196,3],[112,5,73,49],[113,0,198,2,"touchableGetHitSlop"],[113,25,198,23],[113,56,198,34],[114,0,199,4],[114,13,199,11],[114,18,199,16,"props"],[114,23,199,11],[114,24,199,22,"hitSlop"],[114,31,199,4],[115,0,200,3],[115,5,73,49],[116,0,202,2,"touchableGetHighlightDelayMS"],[116,34,202,32],[116,74,202,43],[117,0,203,4],[117,13,203,11],[117,18,203,16,"props"],[117,23,203,11],[117,24,203,22,"delayPressIn"],[117,36,203,4],[118,0,204,3],[118,5,73,49],[119,0,206,2,"touchableGetLongPressDelayMS"],[119,34,206,32],[119,74,206,43],[120,0,207,4],[120,13,207,11],[120,18,207,16,"props"],[120,23,207,11],[120,24,207,22,"delayLongPress"],[120,38,207,4],[121,0,208,3],[121,5,73,49],[122,0,210,2,"touchableGetPressOutDelayMS"],[122,33,210,31],[122,72,210,42],[123,0,211,4],[123,13,211,11],[123,18,211,16,"props"],[123,23,211,11],[123,24,211,22,"delayPressOut"],[123,37,211,4],[124,0,212,3],[124,5,73,49],[125,0,214,2,"_handleResponderMove"],[125,26,214,24],[125,56,214,33,"e"],[125,57,214,24],[125,59,214,36],[126,0,215,4],[126,11,215,9,"touchableHandleResponderMove"],[126,39,215,4],[126,40,215,38,"e"],[126,41,215,4],[128,0,216,4],[128,11,216,9,"_dispatchHotspotUpdate"],[128,33,216,4],[128,34,217,6,"e"],[128,36,217,8,"nativeEvent"],[128,47,217,6],[128,48,217,20,"locationX"],[128,57,216,4],[128,59,218,6,"e"],[128,61,218,8,"nativeEvent"],[128,72,218,6],[128,73,218,20,"locationY"],[128,82,216,4],[129,0,220,3],[129,5,73,49],[130,0,222,2,"_dispatchHotspotUpdate"],[130,28,222,26],[130,60,222,35,"destX"],[130,65,222,26],[130,67,222,42,"destY"],[130,72,222,26],[130,74,222,49],[131,0,223,4,"UIManager"],[131,16,223,14,"dispatchViewManagerCommand"],[131,42,223,4],[131,43,224,6,"ReactNative"],[131,55,224,18,"findNodeHandle"],[131,69,224,6],[131,70,224,33],[131,74,224,6],[131,75,223,4],[131,77,225,6,"UIManager"],[131,87,225,16,"RCTView"],[131,94,225,6],[131,95,225,24,"Commands"],[131,103,225,6],[131,104,225,33,"hotspotUpdate"],[131,117,223,4],[131,119,226,6],[131,120,226,7,"destX"],[131,129,226,16],[131,130,226,6],[131,132,226,19,"destY"],[131,141,226,28],[131,142,226,6],[131,143,223,4],[132,0,228,3],[132,5,73,49],[133,0,230,2,"_dispatchPressedStateChange"],[133,33,230,31],[133,70,230,40,"pressed"],[133,77,230,31],[133,79,230,49],[134,0,231,4,"UIManager"],[134,16,231,14,"dispatchViewManagerCommand"],[134,42,231,4],[134,43,232,6,"ReactNative"],[134,55,232,18,"findNodeHandle"],[134,69,232,6],[134,70,232,33],[134,74,232,6],[134,75,231,4],[134,77,233,6,"UIManager"],[134,87,233,16,"RCTView"],[134,94,233,6],[134,95,233,24,"Commands"],[134,103,233,6],[134,104,233,33,"setPressed"],[134,114,231,4],[134,116,234,6],[134,117,234,7,"pressed"],[134,124,234,6],[134,125,231,4],[135,0,236,3],[135,5,73,49],[136,0,238,2,"render"],[136,12,238,10],[136,30,238,21],[137,0,238,21],[139,0,239,4],[139,10,239,10,"child"],[139,18,239,18,"React"],[139,24,239,24,"Children"],[139,32,239,18],[139,33,239,33,"only"],[139,37,239,18],[139,38,239,38],[139,43,239,43,"props"],[139,48,239,38],[139,49,239,49,"children"],[139,57,239,18],[139,58,239,4],[140,0,240,4],[140,10,240,8,"children"],[140,21,240,19,"child"],[140,27,240,25,"props"],[140,32,240,19],[140,33,240,31,"children"],[140,41,240,4],[142,0,241,4],[142,10,241,8,"Touchable"],[142,20,241,18,"TOUCH_TARGET_DEBUG"],[142,38,241,8],[142,42,241,40,"child"],[142,48,241,46,"type"],[142,52,241,40],[142,53,241,51,"displayName"],[142,64,241,40],[142,69,241,67],[142,75,241,4],[142,77,241,75],[143,0,242,6],[143,12,242,10],[143,13,242,11,"Array"],[143,19,242,17,"isArray"],[143,26,242,11],[143,27,242,25,"children"],[143,35,242,11],[143,36,242,6],[143,38,242,36],[144,0,243,8,"children"],[144,21,243,19],[144,22,243,20,"children"],[144,30,243,19],[144,31,243,8],[145,0,244,7],[147,0,245,6,"children"],[147,17,245,15,"push"],[147,21,245,6],[147,22,246,8,"Touchable"],[147,32,246,18,"renderDebugView"],[147,47,246,8],[147,48,246,34],[148,0,247,10,"color"],[148,17,247,17],[148,24,246,34],[149,0,248,10,"hitSlop"],[149,19,248,19],[149,24,248,24,"props"],[149,29,248,19],[149,30,248,30,"hitSlop"],[150,0,246,34],[150,9,246,8],[150,10,245,6],[151,0,251,5],[153,0,252,4],[153,10,253,6],[153,15,253,11,"props"],[153,20,253,6],[153,21,253,17,"useForeground"],[153,34,253,6],[153,38,254,6],[153,39,254,7,"TouchableNativeFeedback"],[153,63,254,31,"canUseNativeForeground"],[153,85,254,7],[153,87,252,4],[153,89,255,6],[154,0,256,6,"console"],[154,16,256,14,"warn"],[154,20,256,6],[154,21,257,8],[154,107,258,10],[154,197,257,8],[154,200,259,10],[154,235,256,6],[155,0,261,5],[157,0,262,4],[157,10,262,10,"drawableProp"],[157,25,263,6],[157,30,263,11,"props"],[157,35,263,6],[157,36,263,17,"useForeground"],[157,49,263,6],[157,53,264,6,"TouchableNativeFeedback"],[157,77,264,30,"canUseNativeForeground"],[157,99,264,6],[157,101,263,6],[157,104,265,10],[157,129,263,6],[157,132,266,10],[157,157,262,4],[159,0,267,4],[159,10,267,10,"childProps"],[159,41,268,9,"child"],[159,47,268,15,"props"],[159,52,267,10],[159,108,269,7,"drawableProp"],[159,120,267,10],[159,122,269,22],[159,127,269,27,"props"],[159,132,269,22],[159,133,269,33,"background"],[159,143,267,10],[159,192,270,18],[159,197,270,23,"props"],[159,202,270,18],[159,203,270,29,"accessible"],[159,213,270,18],[159,218,270,44],[159,223,267,10],[159,280,271,26],[159,285,271,31,"props"],[159,290,271,26],[159,291,271,37,"accessibilityLabel"],[159,309,267,10],[159,374,272,34],[159,379,272,39,"props"],[159,384,272,34],[159,385,272,45,"accessibilityComponentType"],[159,411,267,10],[159,469,273,27],[159,474,273,32,"props"],[159,479,273,27],[159,480,273,38,"accessibilityTraits"],[159,499,267,10],[159,546,274,6,"children"],[159,554,267,10],[159,599,275,14],[159,604,275,19,"props"],[159,609,275,14],[159,610,275,25,"testID"],[159,616,267,10],[159,663,276,16],[159,668,276,21,"props"],[159,673,276,16],[159,674,276,27,"onLayout"],[159,682,267,10],[159,728,277,15],[159,733,277,20,"props"],[159,738,277,15],[159,739,277,26,"hitSlop"],[159,746,267,10],[159,799,278,22],[159,803,267,10],[159,861,279,27],[159,866,279,32,"props"],[159,871,279,27],[159,872,279,38,"hasTVPreferredFocus"],[159,891,267,10],[159,955,280,33],[159,960,280,38,"touchableHandleStartShouldSetResponder"],[159,998,267,10],[159,1066,281,37],[159,1071,282,9,"touchableHandleResponderTerminationRequest"],[159,1113,267,10],[159,1168,283,24],[159,1173,283,29,"touchableHandleResponderGrant"],[159,1202,267,10],[159,1256,284,23],[159,1261,284,28,"_handleResponderMove"],[159,1281,267,10],[159,1338,285,26],[159,1343,285,31,"touchableHandleResponderRelease"],[159,1374,267,10],[159,1433,286,28],[159,1438,286,33,"touchableHandleResponderTerminate"],[159,1471,267,10],[159,1490,267,4],[161,0,292,4],[161,13,292,11,"React"],[161,19,292,17,"cloneElement"],[161,31,292,11],[161,32,292,30,"child"],[161,37,292,11],[161,39,292,37,"childProps"],[161,49,292,11],[161,50,292,4],[162,0,293,3],[163,0,73,49],[163,3,73,32],[163,4,73,0],[164,0,296,0,"module"],[164,9,296,7,"exports"],[164,16,296,0],[164,19,296,17,"TouchableNativeFeedback"],[164,42,296,0]]},"type":"js/module"}]}