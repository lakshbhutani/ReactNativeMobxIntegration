{"dependencies":[{"name":"react","isAsync":false},{"name":"./../../../../react-transform-hmr/lib/index.js","isAsync":false},{"name":"React","isAsync":false},{"name":"prop-types","isAsync":false},{"name":"ReactNative","isAsync":false},{"name":"UIManager","isAsync":false},{"name":"ViewPropTypes","isAsync":false},{"name":"dismissKeyboard","isAsync":false},{"name":"requireNativeComponent","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _default = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"react\")).default;\n\n  var _reactTransformHmrLibIndexJs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../../../react-transform-hmr/lib/index.js\")).default;\n\n  var _jsxFileName = \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/react-native/Libraries/Components/ViewPager/ViewPagerAndroid.android.js\";\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  var _components = {\n    ViewPagerAndroid: {\n      displayName: \"ViewPagerAndroid\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = _reactTransformHmrLibIndexJs({\n    filename: \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/react-native/Libraries/Components/ViewPager/ViewPagerAndroid.android.js\",\n    components: _components,\n    locals: [module],\n    imports: [_default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  var React = _$$_REQUIRE(_dependencyMap[2], 'React');\n\n  var PropTypes = _$$_REQUIRE(_dependencyMap[3], 'prop-types');\n\n  var ReactNative = _$$_REQUIRE(_dependencyMap[4], 'ReactNative');\n\n  var UIManager = _$$_REQUIRE(_dependencyMap[5], 'UIManager');\n\n  var ViewPropTypes = _$$_REQUIRE(_dependencyMap[6], 'ViewPropTypes');\n\n  var dismissKeyboard = _$$_REQUIRE(_dependencyMap[7], 'dismissKeyboard');\n\n  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[8], 'requireNativeComponent');\n\n  var NativeAndroidViewPager = requireNativeComponent('AndroidViewPager');\n  var VIEWPAGER_REF = 'viewPager';\n\n  var ViewPagerAndroid = function (_React$Component) {\n    function ViewPagerAndroid() {\n      var _getPrototypeOf2;\n\n      var _temp, _this;\n\n      _classCallCheck(this, ViewPagerAndroid);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ViewPagerAndroid)).call.apply(_getPrototypeOf2, [this].concat(args))), _this.getInnerViewNode = function () {\n        return _this.refs[VIEWPAGER_REF].getInnerViewNode();\n      }, _this._childrenWithOverridenStyle = function () {\n        return React.Children.map(_this.props.children, function (child) {\n          if (!child) {\n            return null;\n          }\n\n          var newProps = _objectSpread({}, child.props, {\n            style: [child.props.style, {\n              position: 'absolute',\n              left: 0,\n              top: 0,\n              right: 0,\n              bottom: 0,\n              width: undefined,\n              height: undefined\n            }],\n            collapsable: false\n          });\n\n          if (child.type && child.type.displayName && child.type.displayName !== 'RCTView' && child.type.displayName !== 'View') {\n            console.warn('Each ViewPager child must be a <View>. Was ' + child.type.displayName);\n          }\n\n          return React.createElement(child.type, newProps);\n        });\n      }, _this._onPageScroll = function (e) {\n        if (_this.props.onPageScroll) {\n          _this.props.onPageScroll(e);\n        }\n\n        if (_this.props.keyboardDismissMode === 'on-drag') {\n          dismissKeyboard();\n        }\n      }, _this._onPageScrollStateChanged = function (e) {\n        if (_this.props.onPageScrollStateChanged) {\n          _this.props.onPageScrollStateChanged(e.nativeEvent.pageScrollState);\n        }\n      }, _this._onPageSelected = function (e) {\n        if (_this.props.onPageSelected) {\n          _this.props.onPageSelected(e);\n        }\n      }, _this.setPage = function (selectedPage) {\n        UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(_assertThisInitialized(_assertThisInitialized(_this))), UIManager.AndroidViewPager.Commands.setPage, [selectedPage]);\n      }, _this.setPageWithoutAnimation = function (selectedPage) {\n        UIManager.dispatchViewManagerCommand(ReactNative.findNodeHandle(_assertThisInitialized(_assertThisInitialized(_this))), UIManager.AndroidViewPager.Commands.setPageWithoutAnimation, [selectedPage]);\n      }, _temp));\n    }\n\n    _createClass(ViewPagerAndroid, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        if (this.props.initialPage != null) {\n          this.setPageWithoutAnimation(this.props.initialPage);\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return React.createElement(NativeAndroidViewPager, _extends({}, this.props, {\n          ref: VIEWPAGER_REF,\n          style: this.props.style,\n          onPageScroll: this._onPageScroll,\n          onPageScrollStateChanged: this._onPageScrollStateChanged,\n          onPageSelected: this._onPageSelected,\n          children: this._childrenWithOverridenStyle(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          }\n        }));\n      }\n    }]);\n\n    _inherits(ViewPagerAndroid, _React$Component);\n\n    return ViewPagerAndroid;\n  }(React.Component);\n\n  ViewPagerAndroid.propTypes = _objectSpread({}, ViewPropTypes, {\n    initialPage: PropTypes.number,\n    onPageScroll: PropTypes.func,\n    onPageScrollStateChanged: PropTypes.func,\n    onPageSelected: PropTypes.func,\n    pageMargin: PropTypes.number,\n    keyboardDismissMode: PropTypes.oneOf(['none', 'on-drag']),\n    scrollEnabled: PropTypes.bool,\n    peekEnabled: PropTypes.bool\n  });\n  ViewPagerAndroid = _wrapComponent(\"ViewPagerAndroid\")(ViewPagerAndroid);\n  module.exports = ViewPagerAndroid;\n});","map":[[2,0,11,0],[53,0,13,0],[53,6,13,6,"React"],[53,14,13,14,"require"],[53,45,13,22],[53,52,13,14],[53,53,13,0],[55,0,14,0],[55,6,14,6,"PropTypes"],[55,18,14,18,"require"],[55,49,14,26],[55,61,14,18],[55,62,14,0],[57,0,15,0],[57,6,15,6,"ReactNative"],[57,20,15,20,"require"],[57,51,15,28],[57,64,15,20],[57,65,15,0],[59,0,16,0],[59,6,16,6,"UIManager"],[59,18,16,18,"require"],[59,49,16,26],[59,60,16,18],[59,61,16,0],[61,0,17,0],[61,6,17,6,"ViewPropTypes"],[61,22,17,22,"require"],[61,53,17,30],[61,68,17,22],[61,69,17,0],[63,0,19,0],[63,6,19,6,"dismissKeyboard"],[63,24,19,24,"require"],[63,55,19,32],[63,72,19,24],[63,73,19,0],[65,0,20,0],[65,6,20,6,"requireNativeComponent"],[65,31,20,31,"require"],[65,62,20,39],[65,86,20,31],[65,87,20,0],[67,0,22,0],[67,6,22,6,"NativeAndroidViewPager"],[67,31,22,31,"requireNativeComponent"],[67,54,22,54],[67,72,22,31],[67,73,22,0],[68,0,24,0],[68,6,24,6,"VIEWPAGER_REF"],[68,22,24,22],[68,33,24,0],[70,6,75,6,"ViewPagerAndroid"],[70,22],[82,210,157,2,"getInnerViewNode"],[82,226],[82,229,157,21],[82,241,157,43],[83,0,158,4],[83,15,158,11],[83,21,158,16,"refs"],[83,25,158,11],[83,26,158,21,"VIEWPAGER_REF"],[83,39,158,11],[83,41,158,36,"getInnerViewNode"],[83,57,158,11],[83,59,158,4],[84,0,159,3],[84,7],[84,15,161,2,"_childrenWithOverridenStyle"],[84,42],[84,45,161,32],[84,57,161,45],[85,0,165,4],[85,15,165,11,"React"],[85,21,165,17,"Children"],[85,29,165,11],[85,30,165,26,"map"],[85,33,165,11],[85,34,165,30],[85,40,165,35,"props"],[85,45,165,30],[85,46,165,41,"children"],[85,54,165,11],[85,56,165,51],[85,66,165,60,"child"],[85,71,165,51],[85,73,165,67],[86,0,166,6],[86,14,166,10],[86,15,166,11,"child"],[86,20,166,6],[86,22,166,18],[87,0,167,8],[87,19,167,15],[87,23,167,8],[88,0,168,7],[90,0,169,6],[90,14,169,12,"newProps"],[90,43,170,11,"child"],[90,49,170,17,"props"],[90,54,169,12],[91,0,171,8,"style"],[91,19,171,15],[91,20,172,10,"child"],[91,26,172,16,"props"],[91,31,172,10],[91,32,172,22,"style"],[91,37,171,15],[91,39,173,10],[92,0,174,12,"position"],[92,24,174,22],[92,34,173,10],[93,0,175,12,"left"],[93,20,175,18],[93,21,173,10],[94,0,176,12,"top"],[94,19,176,17],[94,20,173,10],[95,0,177,12,"right"],[95,21,177,19],[95,22,173,10],[96,0,178,12,"bottom"],[96,22,178,20],[96,23,173,10],[97,0,179,12,"width"],[97,21,179,19,"undefined"],[97,30,173,10],[98,0,180,12,"height"],[98,22,180,20,"undefined"],[99,0,173,10],[99,13,171,15],[99,14,169,12],[100,0,183,8,"collapsable"],[100,25,183,21],[101,0,169,12],[101,12,169,6],[103,0,185,6],[103,14,186,8,"child"],[103,20,186,14,"type"],[103,24,186,8],[103,28,187,8,"child"],[103,34,187,14,"type"],[103,38,187,8],[103,39,187,19,"displayName"],[103,50,186,8],[103,54,188,8,"child"],[103,60,188,14,"type"],[103,64,188,8],[103,65,188,19,"displayName"],[103,76,188,8],[103,81,188,35],[103,90,186,8],[103,94,189,8,"child"],[103,100,189,14,"type"],[103,104,189,8],[103,105,189,19,"displayName"],[103,116,189,8],[103,121,189,35],[103,127,185,6],[103,129,190,8],[104,0,191,8,"console"],[104,20,191,16,"warn"],[104,24,191,8],[104,25,192,10],[104,73,193,12,"child"],[104,79,193,18,"type"],[104,83,193,12],[104,84,193,23,"displayName"],[104,95,191,8],[105,0,195,7],[107,0,196,6],[107,17,196,13,"React"],[107,23,196,19,"createElement"],[107,36,196,13],[107,37,196,33,"child"],[107,43,196,39,"type"],[107,47,196,13],[107,49,196,45,"newProps"],[107,57,196,13],[107,58,196,6],[108,0,197,5],[108,9,165,11],[108,10,165,4],[109,0,198,3],[109,7],[109,15,200,2,"_onPageScroll"],[109,28],[109,31,200,18],[109,41,200,19,"e"],[109,42,200,18],[109,44,200,32],[110,0,201,4],[110,12,201,8],[110,18,201,13,"props"],[110,23,201,8],[110,24,201,19,"onPageScroll"],[110,36,201,4],[110,38,201,33],[111,0,202,6],[111,16,202,11,"props"],[111,21,202,6],[111,22,202,17,"onPageScroll"],[111,34,202,6],[111,35,202,30,"e"],[111,36,202,6],[112,0,203,5],[114,0,204,4],[114,12,204,8],[114,18,204,13,"props"],[114,23,204,8],[114,24,204,19,"keyboardDismissMode"],[114,43,204,8],[114,48,204,43],[114,57,204,4],[114,59,204,54],[115,0,205,6,"dismissKeyboard"],[116,0,206,5],[117,0,207,3],[117,7],[117,15,209,2,"_onPageScrollStateChanged"],[117,40],[117,43,209,30],[117,53,209,31,"e"],[117,54,209,30],[117,56,209,44],[118,0,210,4],[118,12,210,8],[118,18,210,13,"props"],[118,23,210,8],[118,24,210,19,"onPageScrollStateChanged"],[118,48,210,4],[118,50,210,45],[119,0,211,6],[119,16,211,11,"props"],[119,21,211,6],[119,22,211,17,"onPageScrollStateChanged"],[119,46,211,6],[119,47,211,42,"e"],[119,49,211,44,"nativeEvent"],[119,60,211,42],[119,61,211,56,"pageScrollState"],[119,76,211,6],[120,0,212,5],[121,0,213,3],[121,7],[121,15,215,2,"_onPageSelected"],[121,30],[121,33,215,20],[121,43,215,21,"e"],[121,44,215,20],[121,46,215,34],[122,0,216,4],[122,12,216,8],[122,18,216,13,"props"],[122,23,216,8],[122,24,216,19,"onPageSelected"],[122,38,216,4],[122,40,216,35],[123,0,217,6],[123,16,217,11,"props"],[123,21,217,6],[123,22,217,17,"onPageSelected"],[123,36,217,6],[123,37,217,32,"e"],[123,38,217,6],[124,0,218,5],[125,0,219,3],[125,7],[125,15,225,2,"setPage"],[125,22],[125,25,225,12],[125,35,225,13,"selectedPage"],[125,47,225,12],[125,49,225,38],[126,0,226,4,"UIManager"],[126,18,226,14,"dispatchViewManagerCommand"],[126,44,226,4],[126,45,227,6,"ReactNative"],[126,57,227,18,"findNodeHandle"],[126,71,227,6],[126,126,226,4],[126,128,228,6,"UIManager"],[126,138,228,16,"AndroidViewPager"],[126,154,228,6],[126,155,228,33,"Commands"],[126,163,228,6],[126,164,228,42,"setPage"],[126,171,226,4],[126,173,229,6],[126,174,229,7,"selectedPage"],[126,186,229,6],[126,187,226,4],[127,0,231,3],[127,7],[127,15,237,2,"setPageWithoutAnimation"],[127,38],[127,41,237,28],[127,51,237,29,"selectedPage"],[127,63,237,28],[127,65,237,54],[128,0,238,4,"UIManager"],[128,18,238,14,"dispatchViewManagerCommand"],[128,44,238,4],[128,45,239,6,"ReactNative"],[128,57,239,18,"findNodeHandle"],[128,71,239,6],[128,126,238,4],[128,128,240,6,"UIManager"],[128,138,240,16,"AndroidViewPager"],[128,154,240,6],[128,155,240,33,"Commands"],[128,163,240,6],[128,164,240,42,"setPageWithoutAnimation"],[128,187,238,4],[128,189,241,6],[128,190,241,7,"selectedPage"],[128,202,241,6],[128,203,238,4],[129,0,243,3],[129,7],[134,42,151,22],[135,0,152,4],[135,12,152,8],[135,17,152,13,"props"],[135,22,152,8],[135,23,152,19,"initialPage"],[135,34,152,8],[135,38,152,34],[135,42,152,4],[135,44,152,40],[136,0,153,6],[136,15,153,11,"setPageWithoutAnimation"],[136,38,153,6],[136,39,153,35],[136,44,153,40,"props"],[136,49,153,35],[136,50,153,46,"initialPage"],[136,61,153,6],[137,0,154,5],[138,0,155,3],[141,31,245,11],[142,0,246,4],[142,15,247,6],[142,35,247,7],[142,57,247,6],[142,72,248,12],[142,77,248,17,"props"],[142,82,247,6],[143,0,249,8],[143,15,249,13,"VIEWPAGER_REF"],[143,28,247,6],[144,0,250,8],[144,17,250,15],[144,22,250,20,"props"],[144,27,250,15],[144,28,250,26,"style"],[144,33,247,6],[145,0,251,8],[145,24,251,22],[145,29,251,27,"_onPageScroll"],[145,42,247,6],[146,0,252,8],[146,36,252,34],[146,41,252,39,"_onPageScrollStateChanged"],[146,66,247,6],[147,0,253,8],[147,26,253,24],[147,31,253,29,"_onPageSelected"],[147,46,247,6],[148,0,254,8],[148,20,254,18],[148,25,254,23,"_childrenWithOverridenStyle"],[148,52,254,18],[148,54,247,6],[149,0,247,6],[150,0,247,6],[151,0,247,6],[152,0,247,6],[153,0,247,6],[153,11,246,4],[154,0,257,3],[160,4,75,31,"React"],[160,10,75,37,"Component"],[160,19],[162,0,75,6,"ViewPagerAndroid"],[162,18],[162,19,85,9,"propTypes"],[162,28],[162,49,86,7,"ViewPropTypes"],[162,62],[163,0,91,4,"initialPage"],[163,17,91,17,"PropTypes"],[163,27,91,27,"number"],[163,33],[164,0,102,4,"onPageScroll"],[164,18,102,18,"PropTypes"],[164,28,102,28,"func"],[164,32],[165,0,112,4,"onPageScrollStateChanged"],[165,30,112,30,"PropTypes"],[165,40,112,40,"func"],[165,44],[166,0,120,4,"onPageSelected"],[166,20,120,20,"PropTypes"],[166,30,120,30,"func"],[166,34],[167,0,126,4,"pageMargin"],[167,16,126,16,"PropTypes"],[167,26,126,26,"number"],[167,32],[168,0,133,4,"keyboardDismissMode"],[168,25,133,25,"PropTypes"],[168,35,133,35,"oneOf"],[168,40,133,25],[168,41,133,41],[168,42,134,6],[168,48,133,41],[168,50,135,6],[168,59,133,41],[168,60,133,25],[168,61],[169,0,142,4,"scrollEnabled"],[169,19,142,19,"PropTypes"],[169,29,142,29,"bool"],[169,33],[170,0,148,4,"peekEnabled"],[170,17,148,17,"PropTypes"],[170,27,148,27,"bool"],[173,0,260,0,"module"],[173,9,260,7,"exports"],[173,16,260,0],[173,19,260,17,"ViewPagerAndroid"],[173,35,260,0]]},"type":"js/module"}]}