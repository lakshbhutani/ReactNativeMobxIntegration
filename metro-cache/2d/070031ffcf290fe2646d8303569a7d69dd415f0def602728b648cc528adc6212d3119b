{"dependencies":[{"name":"react","isAsync":false},{"name":"./../../../react-transform-hmr/lib/index.js","isAsync":false},{"name":"react-native","isAsync":false},{"name":"react-native-tab-view","isAsync":false},{"name":"./CrossFadeIcon","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _reactNativeTabView = _$$_REQUIRE(_dependencyMap[3], \"react-native-tab-view\");\n\n  var _CrossFadeIcon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./CrossFadeIcon\"));\n\n  var _class,\n      _temp2,\n      _jsxFileName = \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/react-navigation-tabs/dist/views/MaterialTopTabBar.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\n  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\n  function _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\n  function _iterableToArray(iter) { if ((typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\") in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\n  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  var _components = {\n    TabBarTop: {\n      displayName: \"TabBarTop\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/react-navigation-tabs/dist/views/MaterialTopTabBar.js\",\n    components: _components,\n    locals: [module],\n    imports: [React.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var TabBarTop = _wrapComponent(\"TabBarTop\")((_temp2 = _class = function (_React$PureComponent) {\n    function TabBarTop() {\n      var _getPrototypeOf2;\n\n      var _temp, _this;\n\n      _classCallCheck(this, TabBarTop);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TabBarTop)).call.apply(_getPrototypeOf2, [this].concat(args))), _this._renderLabel = function (_ref) {\n        var route = _ref.route;\n        var _this$props = _this.props,\n            position = _this$props.position,\n            navigation = _this$props.navigation,\n            activeTintColor = _this$props.activeTintColor,\n            inactiveTintColor = _this$props.inactiveTintColor,\n            showLabel = _this$props.showLabel,\n            upperCaseLabel = _this$props.upperCaseLabel,\n            labelStyle = _this$props.labelStyle,\n            allowFontScaling = _this$props.allowFontScaling;\n\n        if (showLabel === false) {\n          return null;\n        }\n\n        var routes = navigation.state.routes;\n        var index = routes.indexOf(route);\n        var focused = index === navigation.state.index;\n        var inputRange = [-1].concat(_toConsumableArray(routes.map(function (x, i) {\n          return i;\n        })));\n        var outputRange = inputRange.map(function (inputIndex) {\n          return inputIndex === index ? activeTintColor : inactiveTintColor;\n        });\n        var color = position.interpolate({\n          inputRange: inputRange,\n          outputRange: outputRange\n        });\n        var tintColor = focused ? activeTintColor : inactiveTintColor;\n\n        var label = _this.props.getLabelText({\n          route: route\n        });\n\n        if (typeof label === 'string') {\n          return React.createElement(_reactNative.Animated.Text, {\n            style: [styles.label, {\n              color: color\n            }, labelStyle],\n            allowFontScaling: allowFontScaling,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            }\n          }, upperCaseLabel ? label.toUpperCase() : label);\n        }\n\n        if (typeof label === 'function') {\n          return label({\n            focused: focused,\n            tintColor: tintColor\n          });\n        }\n\n        return label;\n      }, _this._renderIcon = function (_ref2) {\n        var route = _ref2.route;\n        var _this$props2 = _this.props,\n            position = _this$props2.position,\n            navigation = _this$props2.navigation,\n            activeTintColor = _this$props2.activeTintColor,\n            inactiveTintColor = _this$props2.inactiveTintColor,\n            renderIcon = _this$props2.renderIcon,\n            showIcon = _this$props2.showIcon,\n            iconStyle = _this$props2.iconStyle;\n\n        if (showIcon === false) {\n          return null;\n        }\n\n        var index = navigation.state.routes.indexOf(route);\n        var inputRange = [-1].concat(_toConsumableArray(navigation.state.routes.map(function (x, i) {\n          return i;\n        })));\n        var activeOpacity = position.interpolate({\n          inputRange: inputRange,\n          outputRange: inputRange.map(function (i) {\n            return i === index ? 1 : 0;\n          })\n        });\n        var inactiveOpacity = position.interpolate({\n          inputRange: inputRange,\n          outputRange: inputRange.map(function (i) {\n            return i === index ? 0 : 1;\n          })\n        });\n        return React.createElement(_CrossFadeIcon.default, {\n          route: route,\n          navigation: navigation,\n          activeOpacity: activeOpacity,\n          inactiveOpacity: inactiveOpacity,\n          activeTintColor: activeTintColor,\n          inactiveTintColor: inactiveTintColor,\n          renderIcon: renderIcon,\n          style: [styles.icon, iconStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          }\n        });\n      }, _temp));\n    }\n\n    _createClass(TabBarTop, [{\n      key: \"render\",\n      value: function render() {\n        var _this$props3 = this.props,\n            navigation = _this$props3.navigation,\n            renderIcon = _this$props3.renderIcon,\n            getLabelText = _this$props3.getLabelText,\n            rest = _objectWithoutProperties(_this$props3, [\"navigation\", \"renderIcon\", \"getLabelText\"]);\n\n        return React.createElement(_reactNativeTabView.TabBar, _extends({}, rest, {\n          navigationState: navigation.state,\n          renderIcon: this._renderIcon,\n          renderLabel: this._renderLabel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          }\n        }));\n      }\n    }]);\n\n    _inherits(TabBarTop, _React$PureComponent);\n\n    return TabBarTop;\n  }(React.PureComponent), _class.defaultProps = {\n    activeTintColor: '#fff',\n    inactiveTintColor: '#fff',\n    showIcon: false,\n    showLabel: true,\n    upperCaseLabel: true,\n    allowFontScaling: true\n  }, _temp2));\n\n  var _default2 = TabBarTop;\n  exports.default = _default2;\n\n  var styles = _reactNative.StyleSheet.create({\n    icon: {\n      height: 24,\n      width: 24\n    },\n    label: {\n      textAlign: 'center',\n      fontSize: 13,\n      margin: 8,\n      backgroundColor: 'transparent'\n    }\n  });\n});","map":[[7,0,1,0],[11,0,2,0],[13,0,3,0],[15,0,4,0],[84,203,16,2,"_renderLabel"],[84,215],[84,218,16,17],[84,234,16,32],[85,0,16,32],[85,12,16,20,"route"],[85,17,16,32],[85,25,16,20,"route"],[85,30,16,32],[86,0,16,32],[86,26,26,8],[86,32,26,13,"props"],[86,37,16,32],[87,0,16,32],[87,12,18,6,"position"],[87,20,16,32],[87,35,18,6,"position"],[87,43,16,32],[88,0,16,32],[88,12,19,6,"navigation"],[88,22,16,32],[88,37,19,6,"navigation"],[88,47,16,32],[89,0,16,32],[89,12,20,6,"activeTintColor"],[89,27,16,32],[89,42,20,6,"activeTintColor"],[89,57,16,32],[90,0,16,32],[90,12,21,6,"inactiveTintColor"],[90,29,16,32],[90,44,21,6,"inactiveTintColor"],[90,61,16,32],[91,0,16,32],[91,12,22,6,"showLabel"],[91,21,16,32],[91,36,22,6,"showLabel"],[91,45,16,32],[92,0,16,32],[92,12,23,6,"upperCaseLabel"],[92,26,16,32],[92,41,23,6,"upperCaseLabel"],[92,55,16,32],[93,0,16,32],[93,12,24,6,"labelStyle"],[93,22,16,32],[93,37,24,6,"labelStyle"],[93,47,16,32],[94,0,16,32],[94,12,25,6,"allowFontScaling"],[94,28,16,32],[94,43,25,6,"allowFontScaling"],[94,59,16,32],[96,0,28,4],[96,12,28,8,"showLabel"],[96,26,28,22],[96,31,28,4],[96,33,28,29],[97,0,29,6],[97,17,29,13],[97,21,29,6],[98,0,30,5],[100,0,16,32],[100,12,32,12,"routes"],[100,18,16,32],[100,21,32,23,"navigation"],[100,32,32,34,"state"],[100,37,16,32],[100,38,32,12,"routes"],[100,44,16,32],[101,0,33,4],[101,12,33,10,"index"],[101,20,33,18,"routes"],[101,27,33,25,"indexOf"],[101,34,33,18],[101,35,33,33,"route"],[101,40,33,18],[101,41,33,4],[102,0,34,4],[102,12,34,10,"focused"],[102,22,34,20,"index"],[102,32,34,30,"navigation"],[102,43,34,41,"state"],[102,48,34,30],[102,49,34,47,"index"],[102,54,34,4],[103,0,37,4],[103,12,37,10,"inputRange"],[103,26,37,24],[103,27,37,25],[103,28,37,10],[103,56,37,31,"routes"],[103,63,37,38,"map"],[103,66,37,31],[103,67,37,42],[103,77,37,43,"x"],[103,78,37,42],[103,80,37,46,"i"],[103,81,37,42],[104,0,37,42],[104,17,37,52,"i"],[104,18,37,42],[105,0,37,42],[105,9,37,31],[105,10,37,10],[105,12,37,4],[106,0,38,4],[106,12,38,10,"outputRange"],[106,26,38,24,"inputRange"],[106,37,38,35,"map"],[106,40,38,24],[106,41,38,39],[107,0,38,39],[107,17,38,53,"inputIndex"],[107,32,38,68,"index"],[107,37,38,53],[107,40,38,76,"activeTintColor"],[107,55,38,53],[107,58,38,94,"inactiveTintColor"],[107,75,38,39],[108,0,38,39],[108,9,38,24],[108,10,38,4],[109,0,39,4],[109,12,39,10,"color"],[109,20,39,18,"position"],[109,29,39,27,"interpolate"],[109,40,39,18],[109,41,39,39],[110,0,40,6,"inputRange"],[110,32,39,39],[111,0,41,6,"outputRange"],[111,23,41,19,"outputRange"],[112,0,39,39],[112,9,39,18],[112,10,39,4],[113,0,44,4],[113,12,44,10,"tintColor"],[113,24,44,22,"focused"],[113,34,44,32,"activeTintColor"],[113,49,44,22],[113,52,44,50,"inactiveTintColor"],[113,69,44,4],[115,0,45,4],[115,12,45,10,"label"],[115,20,45,18],[115,26,45,23,"props"],[115,31,45,18],[115,32,45,29,"getLabelText"],[115,44,45,18],[115,45,45,42],[116,0,45,44,"route"],[117,0,45,42],[117,9,45,18],[117,10,45,4],[119,0,47,4],[119,12,47,8],[119,19,47,15,"label"],[119,24,47,8],[119,29,47,25],[119,37,47,4],[119,39,47,35],[120,0,48,6],[120,17,48,13],[120,37,48,14],[120,58,48,13],[120,59,48,23],[120,63,48,13],[121,0,48,28],[121,19,48,35],[121,20,48,36,"styles"],[121,27,48,43,"label"],[121,32,48,35],[121,34,48,50],[122,0,48,52,"color"],[123,0,48,50],[123,13,48,35],[123,15,48,61,"labelStyle"],[123,25,48,35],[123,26,48,13],[124,0,48,74],[124,30,48,92,"allowFontScaling"],[124,46,48,13],[125,0,48,13],[126,0,48,13],[127,0,48,13],[128,0,48,13],[129,0,48,13],[129,13,49,11,"upperCaseLabel"],[129,30,49,28,"label"],[129,36,49,34,"toUpperCase"],[129,47,49,28],[129,49,49,11],[129,52,49,50,"label"],[129,57,48,13],[129,58,48,6],[130,0,51,5],[132,0,52,4],[132,12,52,8],[132,19,52,15,"label"],[132,24,52,8],[132,29,52,25],[132,39,52,4],[132,41,52,37],[133,0,53,6],[133,17,53,13,"label"],[133,23,53,19],[134,0,53,21,"focused"],[134,28,53,19],[135,0,53,30,"tintColor"],[136,0,53,19],[136,11,53,13],[136,12,53,6],[137,0,54,5],[139,0,56,4],[139,15,56,11,"label"],[139,20,56,4],[140,0,57,3],[140,7],[140,15,59,2,"_renderIcon"],[140,26],[140,29,59,16],[140,46,59,31],[141,0,59,31],[141,12,59,19,"route"],[141,17,59,31],[141,26,59,19,"route"],[141,31,59,31],[142,0,59,31],[142,27,68,8],[142,33,68,13,"props"],[142,38,59,31],[143,0,59,31],[143,12,61,6,"position"],[143,20,59,31],[143,36,61,6,"position"],[143,44,59,31],[144,0,59,31],[144,12,62,6,"navigation"],[144,22,59,31],[144,38,62,6,"navigation"],[144,48,59,31],[145,0,59,31],[145,12,63,6,"activeTintColor"],[145,27,59,31],[145,43,63,6,"activeTintColor"],[145,58,59,31],[146,0,59,31],[146,12,64,6,"inactiveTintColor"],[146,29,59,31],[146,45,64,6,"inactiveTintColor"],[146,62,59,31],[147,0,59,31],[147,12,65,6,"renderIcon"],[147,22,59,31],[147,38,65,6,"renderIcon"],[147,48,59,31],[148,0,59,31],[148,12,66,6,"showIcon"],[148,20,59,31],[148,36,66,6,"showIcon"],[148,44,59,31],[149,0,59,31],[149,12,67,6,"iconStyle"],[149,21,59,31],[149,37,67,6,"iconStyle"],[149,46,59,31],[151,0,70,4],[151,12,70,8,"showIcon"],[151,25,70,21],[151,30,70,4],[151,32,70,28],[152,0,71,6],[152,17,71,13],[152,21,71,6],[153,0,72,5],[155,0,74,4],[155,12,74,10,"index"],[155,20,74,18,"navigation"],[155,31,74,29,"state"],[155,36,74,18],[155,37,74,35,"routes"],[155,43,74,18],[155,44,74,42,"indexOf"],[155,51,74,18],[155,52,74,50,"route"],[155,57,74,18],[155,58,74,4],[156,0,77,4],[156,12,77,10,"inputRange"],[156,26,77,24],[156,27,77,25],[156,28,77,10],[156,56,77,31,"navigation"],[156,67,77,42,"state"],[156,72,77,31],[156,73,77,48,"routes"],[156,79,77,31],[156,80,77,55,"map"],[156,83,77,31],[156,84,77,59],[156,94,77,60,"x"],[156,95,77,59],[156,97,77,63,"i"],[156,98,77,59],[157,0,77,59],[157,17,77,69,"i"],[157,18,77,59],[158,0,77,59],[158,9,77,31],[158,10,77,10],[158,12,77,4],[159,0,78,4],[159,12,78,10,"activeOpacity"],[159,28,78,26,"position"],[159,37,78,35,"interpolate"],[159,48,78,26],[159,49,78,47],[160,0,79,6,"inputRange"],[160,32,78,47],[161,0,80,6,"outputRange"],[161,23,80,19,"inputRange"],[161,34,80,30,"map"],[161,37,80,19],[161,38,80,34],[162,0,80,34],[162,19,80,39,"i"],[162,25,80,45,"index"],[162,30,80,39],[162,33,80,53],[162,34,80,39],[162,37,80,57],[162,38,80,34],[163,0,80,34],[163,11,80,19],[164,0,78,47],[164,9,78,26],[164,10,78,4],[165,0,82,4],[165,12,82,10,"inactiveOpacity"],[165,30,82,28,"position"],[165,39,82,37,"interpolate"],[165,50,82,28],[165,51,82,49],[166,0,83,6,"inputRange"],[166,32,82,49],[167,0,84,6,"outputRange"],[167,23,84,19,"inputRange"],[167,34,84,30,"map"],[167,37,84,19],[167,38,84,34],[168,0,84,34],[168,19,84,39,"i"],[168,25,84,45,"index"],[168,30,84,39],[168,33,84,53],[168,34,84,39],[168,37,84,57],[168,38,84,34],[169,0,84,34],[169,11,84,19],[170,0,82,49],[170,9,82,28],[170,10,82,4],[171,0,87,4],[171,15,87,11],[171,35,87,12],[171,57,87,11],[172,0,87,26],[172,17,87,33,"route"],[172,22,87,11],[173,0,87,40],[173,22,87,52,"navigation"],[173,32,87,11],[174,0,87,64],[174,25,87,79,"activeOpacity"],[174,38,87,11],[175,0,87,94],[175,27,87,111,"inactiveOpacity"],[175,42,87,11],[176,0,87,128],[176,27,87,145,"activeTintColor"],[176,42,87,11],[177,0,87,162],[177,29,87,181,"inactiveTintColor"],[177,46,87,11],[178,0,87,200],[178,22,87,212,"renderIcon"],[178,32,87,11],[179,0,87,224],[179,17,87,231],[179,18,87,232,"styles"],[179,25,87,239,"icon"],[179,29,87,231],[179,31,87,245,"iconStyle"],[179,40,87,231],[179,41,87,11],[180,0,87,11],[181,0,87,11],[182,0,87,11],[183,0,87,11],[184,0,87,11],[184,10,87,4],[185,0,88,3],[185,7],[190,31,90,11],[191,0,90,11],[191,27,92,62],[191,32,92,67,"props"],[191,37,90,11],[192,0,90,11],[192,12,92,12,"navigation"],[192,22,90,11],[192,38,92,12,"navigation"],[192,48,90,11],[193,0,90,11],[193,12,92,24,"renderIcon"],[193,22,90,11],[193,38,92,24,"renderIcon"],[193,48,90,11],[194,0,90,11],[194,12,92,36,"getLabelText"],[194,24,90,11],[194,40,92,36,"getLabelText"],[194,52,90,11],[195,0,90,11],[195,12,92,53,"rest"],[195,16,90,11],[197,0,94,4],[197,15,96,6],[197,35,96,7],[197,61,96,6],[197,76,96,18,"rest"],[197,80,96,6],[198,0,96,24],[198,27,96,41,"navigation"],[198,38,96,52,"state"],[198,43,96,6],[199,0,96,59],[199,22,96,71],[199,27,96,76,"_renderIcon"],[199,38,96,6],[200,0,96,89],[200,23,96,102],[200,28,96,107,"_renderLabel"],[200,40,96,6],[201,0,96,6],[202,0,96,6],[203,0,96,6],[204,0,96,6],[205,0,96,6],[205,11,94,4],[206,0,98,3],[212,4,6,39,"React"],[212,10,6,45,"PureComponent"],[212,23],[212,33,7,9,"defaultProps"],[212,45],[212,48,7,24],[213,0,8,4,"activeTintColor"],[213,21,8,21],[213,27,7,24],[214,0,9,4,"inactiveTintColor"],[214,23,9,23],[214,29,7,24],[215,0,10,4,"showIcon"],[215,14,10,14],[215,19,7,24],[216,0,11,4,"showLabel"],[216,15,11,15],[216,19,7,24],[217,0,12,4,"upperCaseLabel"],[217,20,12,20],[217,24,7,24],[218,0,13,4,"allowFontScaling"],[218,22,13,22],[219,0,7,24],[219,3],[224,0,101,0],[224,6,101,6,"styles"],[224,15,101,15,"StyleSheet"],[224,39,101,26,"create"],[224,45,101,15],[224,46,101,33],[225,0,102,2,"icon"],[225,10,102,8],[226,0,103,4,"height"],[226,14,103,12],[226,16,102,8],[227,0,104,4,"width"],[227,13,104,11],[228,0,102,8],[228,5,101,33],[229,0,106,2,"label"],[229,11,106,9],[230,0,107,4,"textAlign"],[230,17,107,15],[230,25,106,9],[231,0,108,4,"fontSize"],[231,16,108,14],[231,18,106,9],[232,0,109,4,"margin"],[232,14,109,12],[232,15,106,9],[233,0,110,4,"backgroundColor"],[233,23,110,21],[234,0,106,9],[235,0,101,33],[235,3,101,15],[235,4,101,0]]},"type":"js/module"}]}