{"dependencies":[{"name":"./AnimatedInterpolation","isAsync":false},{"name":"./AnimatedNode","isAsync":false},{"name":"./AnimatedWithChildren","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\n  function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  var AnimatedInterpolation = _$$_REQUIRE(_dependencyMap[0], './AnimatedInterpolation');\n\n  var AnimatedNode = _$$_REQUIRE(_dependencyMap[1], './AnimatedNode');\n\n  var AnimatedWithChildren = _$$_REQUIRE(_dependencyMap[2], './AnimatedWithChildren');\n\n  var AnimatedDiffClamp = function (_AnimatedWithChildren) {\n    function AnimatedDiffClamp(a, min, max) {\n      var _this;\n\n      _classCallCheck(this, AnimatedDiffClamp);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedDiffClamp).call(this));\n      _this._a = a;\n      _this._min = min;\n      _this._max = max;\n      _this._value = _this._lastValue = _this._a.__getValue();\n      return _this;\n    }\n\n    _createClass(AnimatedDiffClamp, [{\n      key: \"__makeNative\",\n      value: function __makeNative() {\n        this._a.__makeNative();\n\n        _get(_getPrototypeOf(AnimatedDiffClamp.prototype), \"__makeNative\", this).call(this);\n      }\n    }, {\n      key: \"interpolate\",\n      value: function interpolate(config) {\n        return new AnimatedInterpolation(this, config);\n      }\n    }, {\n      key: \"__getValue\",\n      value: function __getValue() {\n        var value = this._a.__getValue();\n\n        var diff = value - this._lastValue;\n        this._lastValue = value;\n        this._value = Math.min(Math.max(this._value + diff, this._min), this._max);\n        return this._value;\n      }\n    }, {\n      key: \"__attach\",\n      value: function __attach() {\n        this._a.__addChild(this);\n      }\n    }, {\n      key: \"__detach\",\n      value: function __detach() {\n        this._a.__removeChild(this);\n\n        _get(_getPrototypeOf(AnimatedDiffClamp.prototype), \"__detach\", this).call(this);\n      }\n    }, {\n      key: \"__getNativeConfig\",\n      value: function __getNativeConfig() {\n        return {\n          type: 'diffclamp',\n          input: this._a.__getNativeTag(),\n          min: this._min,\n          max: this._max\n        };\n      }\n    }]);\n\n    _inherits(AnimatedDiffClamp, _AnimatedWithChildren);\n\n    return AnimatedDiffClamp;\n  }(AnimatedWithChildren);\n\n  module.exports = AnimatedDiffClamp;\n});","map":[[2,0,10,0],[24,0,12,0],[24,6,12,6,"AnimatedInterpolation"],[24,30,12,30,"require"],[24,61,12,38],[24,86,12,30],[24,87,12,0],[26,0,13,0],[26,6,13,6,"AnimatedNode"],[26,21,13,21,"require"],[26,52,13,29],[26,68,13,21],[26,69,13,0],[28,0,14,0],[28,6,14,6,"AnimatedWithChildren"],[28,29,14,29,"require"],[28,60,14,37],[28,84,14,29],[28,85,14,0],[30,6,18,6,"AnimatedDiffClamp"],[30,23],[31,0,25,2],[31,31,25,14,"a"],[31,32,25,2],[31,34,25,31,"min"],[31,37,25,2],[31,39,25,44,"max"],[31,42,25,2],[31,44,25,57],[32,0,25,57],[34,0,25,57],[36,0,26,4],[37,0,28,4],[37,12,28,9,"_a"],[37,14,28,4],[37,17,28,14,"a"],[37,18,28,4],[38,0,29,4],[38,12,29,9,"_min"],[38,16,29,4],[38,19,29,16,"min"],[38,22,29,4],[39,0,30,4],[39,12,30,9,"_max"],[39,16,30,4],[39,19,30,16,"max"],[39,22,30,4],[40,0,31,4],[40,12,31,9,"_value"],[40,18,31,4],[40,21,31,18],[40,27,31,23,"_lastValue"],[40,37,31,18],[40,40,31,36],[40,46,31,41,"_a"],[40,48,31,36],[40,49,31,44,"__getValue"],[40,59,31,36],[40,61,31,4],[41,0,25,57],[42,0,32,3],[46,37,34,17],[47,0,35,4],[47,13,35,9,"_a"],[47,15,35,4],[47,16,35,12,"__makeNative"],[47,28,35,4],[49,0,36,4],[50,0,37,3],[53,34,39,14,"config"],[53,40],[53,42,39,70],[54,0,40,4],[54,15,40,11],[54,19,40,15,"AnimatedInterpolation"],[54,40,40,11],[54,41,40,37],[54,45,40,11],[54,47,40,43,"config"],[54,53,40,11],[54,54,40,4],[55,0,41,3],[58,35,43,23],[59,0,44,4],[59,12,44,10,"value"],[59,20,44,18],[59,25,44,23,"_a"],[59,27,44,18],[59,28,44,26,"__getValue"],[59,38,44,18],[59,40,44,4],[61,0,45,4],[61,12,45,10,"diff"],[61,19,45,17,"value"],[61,27,45,25],[61,32,45,30,"_lastValue"],[61,42,45,4],[62,0,46,4],[62,13,46,9,"_lastValue"],[62,23,46,4],[62,26,46,22,"value"],[62,31,46,4],[63,0,47,4],[63,13,47,9,"_value"],[63,19,47,4],[63,22,47,18,"Math"],[63,27,47,23,"min"],[63,30,47,18],[63,31,47,27,"Math"],[63,36,47,32,"max"],[63,39,47,27],[63,40,47,36],[63,45,47,41,"_value"],[63,51,47,36],[63,54,47,50,"diff"],[63,58,47,27],[63,60,47,56],[63,65,47,61,"_min"],[63,69,47,27],[63,70,47,18],[63,72,47,68],[63,77,47,73,"_max"],[63,81,47,18],[63,82,47,4],[64,0,48,4],[64,15,48,11],[64,20,48,16,"_value"],[64,26,48,4],[65,0,49,3],[68,33,51,19],[69,0,52,4],[69,13,52,9,"_a"],[69,15,52,4],[69,16,52,12,"__addChild"],[69,26,52,4],[69,27,52,23],[69,31,52,4],[70,0,53,3],[73,33,55,19],[74,0,56,4],[74,13,56,9,"_a"],[74,15,56,4],[74,16,56,12,"__removeChild"],[74,29,56,4],[74,30,56,26],[74,34,56,4],[76,0,57,4],[77,0,58,3],[80,42,60,27],[81,0,61,4],[81,15,61,11],[82,0,62,6,"type"],[82,16,62,12],[82,27,61,11],[83,0,63,6,"input"],[83,17,63,13],[83,22,63,18,"_a"],[83,24,63,13],[83,25,63,21,"__getNativeTag"],[83,39,63,13],[83,41,61,11],[84,0,64,6,"min"],[84,15,64,11],[84,20,64,16,"_min"],[84,24,61,11],[85,0,65,6,"max"],[85,15,65,11],[85,20,65,16,"_max"],[86,0,61,11],[86,9,61,4],[87,0,67,3],[93,4,18,32,"AnimatedWithChildren"],[93,24],[95,0,70,0,"module"],[95,9,70,7,"exports"],[95,16,70,0],[95,19,70,17,"AnimatedDiffClamp"],[95,36,70,0]]},"type":"js/module"}]}