{"dependencies":[{"name":"react","isAsync":false},{"name":"./../../../react-transform-hmr/lib/index.js","isAsync":false},{"name":"react-native","isAsync":false},{"name":"react-navigation","isAsync":false},{"name":"../utils/invariant","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _reactNavigation = _$$_REQUIRE(_dependencyMap[3], \"react-navigation\");\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../utils/invariant\"));\n\n  var _jsxFileName = \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/react-navigation-drawer/dist/views/DrawerSidebar.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  var _components = {\n    DrawerSidebar: {\n      displayName: \"DrawerSidebar\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/react-navigation-drawer/dist/views/DrawerSidebar.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var DrawerSidebar = function (_React$PureComponent) {\n    function DrawerSidebar() {\n      var _getPrototypeOf2;\n\n      var _temp, _this;\n\n      _classCallCheck(this, DrawerSidebar);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DrawerSidebar)).call.apply(_getPrototypeOf2, [this].concat(args))), _this._getScreenOptions = function (routeKey) {\n        var descriptor = _this.props.descriptors[routeKey];\n        (0, _invariant.default)(descriptor.options, 'Cannot access screen descriptor options from drawer sidebar');\n        return descriptor.options;\n      }, _this._getLabel = function (_ref) {\n        var focused = _ref.focused,\n            tintColor = _ref.tintColor,\n            route = _ref.route;\n\n        var _this$_getScreenOptio = _this._getScreenOptions(route.key),\n            drawerLabel = _this$_getScreenOptio.drawerLabel,\n            title = _this$_getScreenOptio.title;\n\n        if (drawerLabel) {\n          return typeof drawerLabel === 'function' ? drawerLabel({\n            tintColor: tintColor,\n            focused: focused\n          }) : drawerLabel;\n        }\n\n        if (typeof title === 'string') {\n          return title;\n        }\n\n        return route.routeName;\n      }, _this._renderIcon = function (_ref2) {\n        var focused = _ref2.focused,\n            tintColor = _ref2.tintColor,\n            route = _ref2.route;\n\n        var _this$_getScreenOptio2 = _this._getScreenOptions(route.key),\n            drawerIcon = _this$_getScreenOptio2.drawerIcon;\n\n        if (drawerIcon) {\n          return typeof drawerIcon === 'function' ? drawerIcon({\n            tintColor: tintColor,\n            focused: focused\n          }) : drawerIcon;\n        }\n\n        return null;\n      }, _this._onItemPress = function (_ref3) {\n        var route = _ref3.route,\n            focused = _ref3.focused;\n\n        if (!focused) {\n          var subAction;\n\n          if (route.index != null && route.index !== 0) {\n            subAction = _reactNavigation.StackActions.reset({\n              index: 0,\n              actions: [_reactNavigation.NavigationActions.navigate({\n                routeName: route.routes[0].routeName\n              })]\n            });\n          }\n\n          _this.props.navigation.dispatch(_reactNavigation.NavigationActions.navigate({\n            routeName: route.routeName,\n            action: subAction\n          }));\n        }\n      }, _temp));\n    }\n\n    _createClass(DrawerSidebar, [{\n      key: \"render\",\n      value: function render() {\n        var ContentComponent = this.props.contentComponent;\n\n        if (!ContentComponent) {\n          return null;\n        }\n\n        var state = this.props.navigation.state;\n        (0, _invariant.default)(typeof state.index === 'number', 'should be set');\n        return _react.default.createElement(_reactNative.View, {\n          style: [styles.container, this.props.style],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          }\n        }, _react.default.createElement(ContentComponent, _extends({}, this.props.contentOptions, {\n          navigation: this.props.navigation,\n          descriptors: this.props.descriptors,\n          items: state.routes,\n          activeItemKey: state.routes[state.index] ? state.routes[state.index].key : null,\n          screenProps: this.props.screenProps,\n          getLabel: this._getLabel,\n          renderIcon: this._renderIcon,\n          onItemPress: this._onItemPress,\n          drawerPosition: this.props.drawerPosition,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          }\n        })));\n      }\n    }]);\n\n    _inherits(DrawerSidebar, _React$PureComponent);\n\n    return DrawerSidebar;\n  }(_react.default.PureComponent);\n\n  DrawerSidebar = _wrapComponent(\"DrawerSidebar\")(DrawerSidebar);\n  var _default2 = DrawerSidebar;\n  exports.default = _default2;\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1\n    }\n  });\n});","map":[[7,0,1,0],[11,0,2,0],[13,0,4,0],[15,0,5,0],[58,6,11,6,"DrawerSidebar"],[58,19],[70,207,12,2,"_getScreenOptions"],[70,224],[70,227,12,22],[70,247,12,34],[71,0,13,4],[71,12,13,10,"descriptor"],[71,25,13,23],[71,31,13,28,"props"],[71,36,13,23],[71,37,13,34,"descriptors"],[71,48,13,23],[71,49,13,46,"routeKey"],[71,57,13,23],[71,58,13,4],[72,0,14,4],[72,32,14,14,"descriptor"],[72,43,14,25,"options"],[72,50,14,4],[72,52,14,34],[72,113,14,4],[73,0,15,4],[73,15,15,11,"descriptor"],[73,26,15,22,"options"],[73,33,15,4],[74,0,16,3],[74,7],[74,15,18,2,"_getLabel"],[74,24],[74,27,18,14],[74,43,18,49],[75,0,18,49],[75,12,18,17,"focused"],[75,19,18,49],[75,27,18,17,"focused"],[75,34,18,49],[76,0,18,49],[76,12,18,26,"tintColor"],[76,21,18,49],[76,29,18,26,"tintColor"],[76,38,18,49],[77,0,18,49],[77,12,18,37,"route"],[77,17,18,49],[77,25,18,37,"route"],[77,30,18,49],[79,0,18,49],[79,36,19,35],[79,42,19,40,"_getScreenOptions"],[79,59,19,35],[79,60,19,58,"route"],[79,66,19,64,"key"],[79,69,19,35],[79,70,18,49],[80,0,18,49],[80,12,19,12,"drawerLabel"],[80,23,18,49],[80,48,19,12,"drawerLabel"],[80,59,18,49],[81,0,18,49],[81,12,19,25,"title"],[81,17,18,49],[81,42,19,25,"title"],[81,47,18,49],[83,0,20,4],[83,12,20,8,"drawerLabel"],[83,23,20,4],[83,25,20,21],[84,0,21,6],[84,17,21,13],[84,24,21,20,"drawerLabel"],[84,35,21,13],[84,40,21,36],[84,50,21,13],[84,53,21,49,"drawerLabel"],[84,65,21,61],[85,0,21,63,"tintColor"],[85,32,21,61],[86,0,21,74,"focused"],[87,0,21,61],[87,11,21,49],[87,12,21,13],[87,15,21,87,"drawerLabel"],[87,26,21,6],[88,0,22,5],[90,0,24,4],[90,12,24,8],[90,19,24,15,"title"],[90,24,24,8],[90,29,24,25],[90,37,24,4],[90,39,24,35],[91,0,25,6],[91,17,25,13,"title"],[91,22,25,6],[92,0,26,5],[94,0,28,4],[94,15,28,11,"route"],[94,21,28,17,"routeName"],[94,30,28,4],[95,0,29,3],[95,7],[95,15,31,2,"_renderIcon"],[95,26],[95,29,31,16],[95,46,31,51],[96,0,31,51],[96,12,31,19,"focused"],[96,19,31,51],[96,28,31,19,"focused"],[96,35,31,51],[97,0,31,51],[97,12,31,28,"tintColor"],[97,21,31,51],[97,30,31,28,"tintColor"],[97,39,31,51],[98,0,31,51],[98,12,31,39,"route"],[98,17,31,51],[98,26,31,39,"route"],[98,31,31,51],[100,0,31,51],[100,37,32,27],[100,43,32,32,"_getScreenOptions"],[100,60,32,27],[100,61,32,50,"route"],[100,67,32,56,"key"],[100,70,32,27],[100,71,31,51],[101,0,31,51],[101,12,32,12,"drawerIcon"],[101,22,31,51],[101,48,32,12,"drawerIcon"],[101,58,31,51],[103,0,33,4],[103,12,33,8,"drawerIcon"],[103,22,33,4],[103,24,33,20],[104,0,34,6],[104,17,34,13],[104,24,34,20,"drawerIcon"],[104,34,34,13],[104,39,34,35],[104,49,34,13],[104,52,34,48,"drawerIcon"],[104,63,34,59],[105,0,34,61,"tintColor"],[105,32,34,59],[106,0,34,72,"focused"],[107,0,34,59],[107,11,34,48],[107,12,34,13],[107,15,34,85,"drawerIcon"],[107,25,34,6],[108,0,35,5],[110,0,36,4],[110,15,36,11],[110,19,36,4],[111,0,37,3],[111,7],[111,15,39,2,"_onItemPress"],[111,27],[111,30,39,17],[111,47,39,41],[112,0,39,41],[112,12,39,20,"route"],[112,17,39,41],[112,26,39,20,"route"],[112,31,39,41],[113,0,39,41],[113,12,39,27,"focused"],[113,19,39,41],[113,28,39,27,"focused"],[113,35,39,41],[115,0,40,4],[115,12,40,8],[115,13,40,9,"focused"],[115,20,40,4],[115,22,40,18],[116,0,41,6],[116,14,41,10,"subAction"],[116,23,41,6],[118,0,44,6],[118,14,44,10,"route"],[118,20,44,16,"index"],[118,25,44,10],[118,29,44,25],[118,33,44,10],[118,37,44,33,"route"],[118,43,44,39,"index"],[118,48,44,33],[118,53,44,49],[118,54,44,6],[118,56,44,52],[119,0,45,8,"subAction"],[119,24,45,20,"StackActions"],[119,54,45,33,"reset"],[119,59,45,20],[119,60,45,39],[120,0,46,10,"index"],[120,21,46,17],[120,22,45,39],[121,0,47,10,"actions"],[121,23,47,19],[121,24,47,20,"NavigationActions"],[121,59,47,38,"navigate"],[121,67,47,20],[121,68,47,47],[122,0,48,12,"routeName"],[122,27,48,23,"route"],[122,33,48,29,"routes"],[122,39,48,23],[122,40,48,36],[122,41,48,23],[122,43,48,39,"routeName"],[123,0,47,47],[123,15,47,20],[123,16,47,19],[124,0,45,39],[124,13,45,20],[124,14,45,8],[125,0,51,7],[127,0,52,6],[127,16,52,11,"props"],[127,21,52,6],[127,22,52,17,"navigation"],[127,32,52,6],[127,33,52,28,"dispatch"],[127,41,52,6],[127,42,52,37,"NavigationActions"],[127,77,52,55,"navigate"],[127,85,52,37],[127,86,52,64],[128,0,53,8,"routeName"],[128,23,53,19,"route"],[128,29,53,25,"routeName"],[128,38,52,64],[129,0,54,8,"action"],[129,20,54,16,"subAction"],[130,0,52,64],[130,11,52,37],[130,12,52,6],[131,0,56,5],[132,0,57,3],[132,7],[137,31,59,11],[138,0,60,4],[138,12,60,10,"ContentComponent"],[138,31,60,29],[138,36,60,34,"props"],[138,41,60,29],[138,42,60,40,"contentComponent"],[138,58,60,4],[140,0,61,4],[140,12,61,8],[140,13,61,9,"ContentComponent"],[140,29,61,4],[140,31,61,27],[141,0,62,6],[141,17,62,13],[141,21,62,6],[142,0,63,5],[144,0,59,11],[144,12,64,12,"state"],[144,17,59,11],[144,20,64,22],[144,25,64,27,"props"],[144,30,64,22],[144,31,64,33,"navigation"],[144,41,59,11],[144,42,64,12,"state"],[144,47,59,11],[145,0,65,4],[145,32,65,14],[145,39,65,21,"state"],[145,45,65,27,"index"],[145,50,65,14],[145,55,65,37],[145,63,65,4],[145,65,65,47],[145,80,65,4],[146,0,66,4],[146,15,66,11],[146,44,66,12],[146,61,66,11],[147,0,66,17],[147,17,66,24],[147,18,66,25,"styles"],[147,25,66,32,"container"],[147,34,66,24],[147,36,66,43],[147,41,66,48,"props"],[147,46,66,43],[147,47,66,54,"style"],[147,52,66,24],[147,53,66,11],[148,0,66,11],[149,0,66,11],[150,0,66,11],[151,0,66,11],[152,0,66,11],[152,11,67,8],[152,40,67,9],[152,56,67,8],[152,71,67,30],[152,76,67,35,"props"],[152,81,67,30],[152,82,67,41,"contentOptions"],[152,96,67,8],[153,0,67,57],[153,22,67,69],[153,27,67,74,"props"],[153,32,67,69],[153,33,67,80,"navigation"],[153,43,67,8],[154,0,67,92],[154,23,67,105],[154,28,67,110,"props"],[154,33,67,105],[154,34,67,116,"descriptors"],[154,45,67,8],[155,0,67,129],[155,17,67,136,"state"],[155,23,67,142,"routes"],[155,29,67,8],[156,0,67,150],[156,25,67,165,"state"],[156,31,67,171,"routes"],[156,37,67,165],[156,38,67,178,"state"],[156,44,67,184,"index"],[156,49,67,165],[156,53,67,193,"state"],[156,59,67,199,"routes"],[156,65,67,193],[156,66,67,206,"state"],[156,72,67,212,"index"],[156,77,67,193],[156,79,67,219,"key"],[156,82,67,165],[156,85,67,225],[156,89,67,8],[157,0,67,231],[157,23,67,244],[157,28,67,249,"props"],[157,33,67,244],[157,34,67,255,"screenProps"],[157,45,67,8],[158,0,67,268],[158,20,67,278],[158,25,67,283,"_getLabel"],[158,34,67,8],[159,0,67,294],[159,22,67,306],[159,27,67,311,"_renderIcon"],[159,38,67,8],[160,0,67,324],[160,23,67,337],[160,28,67,342,"_onItemPress"],[160,40,67,8],[161,0,67,356],[161,26,67,372],[161,31,67,377,"props"],[161,36,67,372],[161,37,67,383,"drawerPosition"],[161,51,67,8],[162,0,67,8],[163,0,67,8],[164,0,67,8],[165,0,67,8],[166,0,67,8],[166,11,66,11],[166,12,66,4],[167,0,69,3],[173,4,11,28,"React"],[173,19,11,34,"PureComponent"],[173,32],[176,18,72,15,"DrawerSidebar"],[176,31],[179,0,74,0],[179,6,74,6,"styles"],[179,15,74,15,"StyleSheet"],[179,39,74,26,"create"],[179,45,74,15],[179,46,74,33],[180,0,75,2,"container"],[180,15,75,13],[181,0,76,4,"flex"],[181,12,76,10],[182,0,75,13],[183,0,74,33],[183,3,74,15],[183,4,74,0]]},"type":"js/module"}]}