{"dependencies":[{"name":"EventEmitter","isAsync":false},{"name":"Platform","isAsync":false},{"name":"RCTDeviceEventEmitter","isAsync":false},{"name":"fbjs/lib/invariant","isAsync":false},{"name":"DeviceInfo","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  var EventEmitter = _$$_REQUIRE(_dependencyMap[0], 'EventEmitter');\n\n  var Platform = _$$_REQUIRE(_dependencyMap[1], 'Platform');\n\n  var RCTDeviceEventEmitter = _$$_REQUIRE(_dependencyMap[2], 'RCTDeviceEventEmitter');\n\n  var invariant = _$$_REQUIRE(_dependencyMap[3], 'fbjs/lib/invariant');\n\n  var eventEmitter = new EventEmitter();\n  var dimensionsInitialized = false;\n  var dimensions = {};\n\n  var Dimensions = function () {\n    function Dimensions() {\n      _classCallCheck(this, Dimensions);\n    }\n\n    _createClass(Dimensions, null, [{\n      key: \"set\",\n      value: function set(dims) {\n        if (dims && dims.windowPhysicalPixels) {\n          dims = JSON.parse(JSON.stringify(dims));\n          var windowPhysicalPixels = dims.windowPhysicalPixels;\n          dims.window = {\n            width: windowPhysicalPixels.width / windowPhysicalPixels.scale,\n            height: windowPhysicalPixels.height / windowPhysicalPixels.scale,\n            scale: windowPhysicalPixels.scale,\n            fontScale: windowPhysicalPixels.fontScale\n          };\n\n          if (Platform.OS === 'android') {\n            var screenPhysicalPixels = dims.screenPhysicalPixels;\n            dims.screen = {\n              width: screenPhysicalPixels.width / screenPhysicalPixels.scale,\n              height: screenPhysicalPixels.height / screenPhysicalPixels.scale,\n              scale: screenPhysicalPixels.scale,\n              fontScale: screenPhysicalPixels.fontScale\n            };\n            delete dims.screenPhysicalPixels;\n          } else {\n            dims.screen = dims.window;\n          }\n\n          delete dims.windowPhysicalPixels;\n        }\n\n        _extends(dimensions, dims);\n\n        if (dimensionsInitialized) {\n          eventEmitter.emit('change', {\n            window: dimensions.window,\n            screen: dimensions.screen\n          });\n        } else {\n          dimensionsInitialized = true;\n        }\n      }\n    }, {\n      key: \"get\",\n      value: function get(dim) {\n        invariant(dimensions[dim], 'No dimension set for key ' + dim);\n        return dimensions[dim];\n      }\n    }, {\n      key: \"addEventListener\",\n      value: function addEventListener(type, handler) {\n        invariant(type === 'change', 'Trying to subscribe to unknown event: \"%s\"', type);\n        eventEmitter.addListener(type, handler);\n      }\n    }, {\n      key: \"removeEventListener\",\n      value: function removeEventListener(type, handler) {\n        invariant(type === 'change', 'Trying to remove listener for unknown event: \"%s\"', type);\n        eventEmitter.removeListener(type, handler);\n      }\n    }]);\n\n    return Dimensions;\n  }();\n\n  var dims = global.nativeExtensions && global.nativeExtensions.DeviceInfo && global.nativeExtensions.DeviceInfo.Dimensions;\n  var nativeExtensionsEnabled = true;\n\n  if (!dims) {\n    var DeviceInfo = _$$_REQUIRE(_dependencyMap[4], 'DeviceInfo');\n\n    dims = DeviceInfo.Dimensions;\n    nativeExtensionsEnabled = false;\n  }\n\n  invariant(dims, 'Either DeviceInfo native extension or DeviceInfo Native Module must be registered');\n  Dimensions.set(dims);\n\n  if (!nativeExtensionsEnabled) {\n    RCTDeviceEventEmitter.addListener('didUpdateDimensions', function (update) {\n      Dimensions.set(update);\n    });\n  }\n\n  module.exports = Dimensions;\n});","map":[[2,0,11,0],[12,0,13,0],[12,6,13,6,"EventEmitter"],[12,21,13,21,"require"],[12,52,13,29],[12,66,13,21],[12,67,13,0],[14,0,14,0],[14,6,14,6,"Platform"],[14,17,14,17,"require"],[14,48,14,25],[14,58,14,17],[14,59,14,0],[16,0,15,0],[16,6,15,6,"RCTDeviceEventEmitter"],[16,30,15,30,"require"],[16,61,15,38],[16,84,15,30],[16,85,15,0],[18,0,17,0],[18,6,17,6,"invariant"],[18,18,17,18,"require"],[18,49,17,26],[18,69,17,18],[18,70,17,0],[20,0,19,0],[20,6,19,6,"eventEmitter"],[20,21,19,21],[20,25,19,25,"EventEmitter"],[20,37,19,21],[20,39,19,0],[21,0,20,0],[21,6,20,4,"dimensionsInitialized"],[21,30,20,28],[21,35,20,0],[22,0,21,0],[22,6,21,6,"dimensions"],[22,19,21,19],[22,21,21,0],[24,6,22,6,"Dimensions"],[24,16],[31,26,29,13,"dims"],[31,30],[31,32,29,47],[32,0,33,4],[32,12,33,8,"dims"],[32,20,33,16,"dims"],[32,25,33,21,"windowPhysicalPixels"],[32,45,33,4],[32,47,33,43],[33,0,35,6,"dims"],[33,17,35,13,"JSON"],[33,22,35,18,"parse"],[33,27,35,13],[33,28,35,24,"JSON"],[33,33,35,29,"stringify"],[33,42,35,24],[33,43,35,39,"dims"],[33,47,35,24],[33,48,35,13],[33,49,35,6],[34,0,37,6],[34,14,37,12,"windowPhysicalPixels"],[34,37,37,35,"dims"],[34,42,37,40,"windowPhysicalPixels"],[34,62,37,6],[35,0,38,6,"dims"],[35,15,38,11,"window"],[35,21,38,6],[35,24,38,20],[36,0,39,8,"width"],[36,19,39,15,"windowPhysicalPixels"],[36,40,39,36,"width"],[36,45,39,15],[36,48,39,44,"windowPhysicalPixels"],[36,69,39,65,"scale"],[36,74,38,20],[37,0,40,8,"height"],[37,20,40,16,"windowPhysicalPixels"],[37,41,40,37,"height"],[37,47,40,16],[37,50,40,46,"windowPhysicalPixels"],[37,71,40,67,"scale"],[37,76,38,20],[38,0,41,8,"scale"],[38,19,41,15,"windowPhysicalPixels"],[38,40,41,36,"scale"],[38,45,38,20],[39,0,42,8,"fontScale"],[39,23,42,19,"windowPhysicalPixels"],[39,44,42,40,"fontScale"],[40,0,38,20],[40,11,38,6],[42,0,44,6],[42,14,44,10,"Platform"],[42,23,44,19,"OS"],[42,25,44,10],[42,30,44,26],[42,39,44,6],[42,41,44,37],[43,0,46,8],[43,16,46,14,"screenPhysicalPixels"],[43,39,46,37,"dims"],[43,44,46,42,"screenPhysicalPixels"],[43,64,46,8],[44,0,47,8,"dims"],[44,17,47,13,"screen"],[44,23,47,8],[44,26,47,22],[45,0,48,10,"width"],[45,21,48,17,"screenPhysicalPixels"],[45,42,48,38,"width"],[45,47,48,17],[45,50,48,46,"screenPhysicalPixels"],[45,71,48,67,"scale"],[45,76,47,22],[46,0,49,10,"height"],[46,22,49,18,"screenPhysicalPixels"],[46,43,49,39,"height"],[46,49,49,18],[46,52,49,48,"screenPhysicalPixels"],[46,73,49,69,"scale"],[46,78,47,22],[47,0,50,10,"scale"],[47,21,50,17,"screenPhysicalPixels"],[47,42,50,38,"scale"],[47,47,47,22],[48,0,51,10,"fontScale"],[48,25,51,21,"screenPhysicalPixels"],[48,46,51,42,"fontScale"],[49,0,47,22],[49,13,47,8],[50,0,55,8],[50,19,55,15,"dims"],[50,24,55,20,"screenPhysicalPixels"],[50,44,55,8],[51,0,56,7],[51,11,44,6],[51,17,56,13],[52,0,57,8,"dims"],[52,17,57,13,"screen"],[52,23,57,8],[52,26,57,22,"dims"],[52,31,57,27,"window"],[52,37,57,8],[53,0,58,7],[55,0,60,6],[55,17,60,13,"dims"],[55,22,60,18,"windowPhysicalPixels"],[55,42,60,6],[56,0,61,5],[58,0,63,4],[58,17,63,18,"dimensions"],[58,27,63,4],[58,29,63,30,"dims"],[58,33,63,4],[60,0,64,4],[60,12,64,8,"dimensionsInitialized"],[60,33,64,4],[60,35,64,31],[61,0,66,6,"eventEmitter"],[61,23,66,19,"emit"],[61,27,66,6],[61,28,66,24],[61,36,66,6],[61,38,66,34],[62,0,67,8,"window"],[62,20,67,16,"dimensions"],[62,31,67,27,"window"],[62,37,66,34],[63,0,68,8,"screen"],[63,20,68,16,"dimensions"],[63,31,68,27,"screen"],[64,0,66,34],[64,11,66,6],[65,0,70,5],[65,9,64,4],[65,15,70,11],[66,0,71,6,"dimensionsInitialized"],[66,34,71,30],[66,38,71,6],[67,0,72,5],[68,0,73,3],[71,26,90,13,"dim"],[71,29],[71,31,90,34],[72,0,91,4,"invariant"],[72,18,91,14,"dimensions"],[72,29,91,25,"dim"],[72,32,91,14],[72,33,91,4],[72,35,91,31],[72,65,91,61,"dim"],[72,68,91,4],[73,0,92,4],[73,15,92,11,"dimensions"],[73,26,92,22,"dim"],[73,29,92,11],[73,30,92,4],[74,0,93,3],[77,39,103,26,"type"],[77,43],[77,45,103,40,"handler"],[77,52],[77,54,103,59],[78,0,104,4,"invariant"],[78,18,105,6,"type"],[78,27,105,15],[78,35,104,4],[78,37,106,6],[78,81,104,4],[78,83,107,6,"type"],[78,87,104,4],[79,0,109,4,"eventEmitter"],[79,21,109,17,"addListener"],[79,32,109,4],[79,33,109,29,"type"],[79,37,109,4],[79,39,109,35,"handler"],[79,46,109,4],[80,0,110,3],[83,42,115,29,"type"],[83,46],[83,48,115,43,"handler"],[83,55],[83,57,115,62],[84,0,116,4,"invariant"],[84,18,117,6,"type"],[84,27,117,15],[84,35,116,4],[84,37,118,6],[84,88,116,4],[84,90,119,6,"type"],[84,94,116,4],[85,0,121,4,"eventEmitter"],[85,21,121,17,"removeListener"],[85,35,121,4],[85,36,121,32,"type"],[85,40,121,4],[85,42,121,38,"handler"],[85,49,121,4],[86,0,122,3],[92,0,125,0],[92,6,125,4,"dims"],[92,13,126,2,"global"],[92,20,126,9,"nativeExtensions"],[92,36,126,2],[92,40,127,2,"global"],[92,47,127,9,"nativeExtensions"],[92,63,127,2],[92,64,127,26,"DeviceInfo"],[92,74,126,2],[92,78,128,2,"global"],[92,85,128,9,"nativeExtensions"],[92,101,128,2],[92,102,128,26,"DeviceInfo"],[92,112,128,2],[92,113,128,37,"Dimensions"],[92,123,125,0],[93,0,129,0],[93,6,129,4,"nativeExtensionsEnabled"],[93,32,129,30],[93,36,129,0],[95,0,130,0],[95,6,130,4],[95,7,130,5,"dims"],[95,11,130,0],[95,13,130,11],[96,0,131,2],[96,8,131,8,"DeviceInfo"],[96,21,131,21,"require"],[96,52,131,29],[96,64,131,21],[96,65,131,2],[98,0,132,2,"dims"],[98,11,132,9,"DeviceInfo"],[98,22,132,20,"Dimensions"],[98,32,132,2],[99,0,133,2,"nativeExtensionsEnabled"],[99,30,133,28],[99,35,133,2],[100,0,134,1],[102,0,136,0,"invariant"],[102,12,137,2,"dims"],[102,16,136,0],[102,18,138,2],[102,101,136,0],[103,0,140,0,"Dimensions"],[103,13,140,11,"set"],[103,16,140,0],[103,17,140,15,"dims"],[103,21,140,0],[105,0,141,0],[105,6,141,4],[105,7,141,5,"nativeExtensionsEnabled"],[105,30,141,0],[105,32,141,30],[106,0,142,2,"RCTDeviceEventEmitter"],[106,26,142,24,"addListener"],[106,37,142,2],[106,38,142,36],[106,59,142,2],[106,61,142,59],[106,71,142,68,"update"],[106,77,142,59],[106,79,142,76],[107,0,143,4,"Dimensions"],[107,17,143,15,"set"],[107,20,143,4],[107,21,143,19,"update"],[107,27,143,4],[108,0,144,3],[108,5,142,2],[109,0,145,1],[111,0,147,0,"module"],[111,9,147,7,"exports"],[111,16,147,0],[111,19,147,17,"Dimensions"],[111,29,147,0]]},"type":"js/module"}]}