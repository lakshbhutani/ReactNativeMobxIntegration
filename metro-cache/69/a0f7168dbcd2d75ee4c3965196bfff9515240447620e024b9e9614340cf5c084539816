{"dependencies":[{"name":"../utils/invariant","isAsync":false},{"name":"./getScreenForRouteName","isAsync":false},{"name":"./createConfigGetter","isAsync":false},{"name":"../NavigationActions","isAsync":false},{"name":"./StackActions","isAsync":false},{"name":"./validateRouteConfigMap","isAsync":false},{"name":"./pathUtils","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"../utils/invariant\"));\n\n  var _getScreenForRouteName = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./getScreenForRouteName\"));\n\n  var _createConfigGetter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./createConfigGetter\"));\n\n  var _NavigationActions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../NavigationActions\"));\n\n  var _StackActions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./StackActions\"));\n\n  var _validateRouteConfigMap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./validateRouteConfigMap\"));\n\n  var _pathUtils = _$$_REQUIRE(_dependencyMap[6], \"./pathUtils\");\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\n  function _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\n  function _iterableToArray(iter) { if ((typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\") in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\n  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var defaultActionCreators = function defaultActionCreators(route, navStateKey) {\n    return {};\n  };\n\n  function childrenUpdateWithoutSwitchingIndex(actionType) {\n    return [_NavigationActions.default.SET_PARAMS, _StackActions.default.COMPLETE_TRANSITION].includes(actionType);\n  }\n\n  var _default = function _default(routeConfigs) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    (0, _validateRouteConfigMap.default)(routeConfigs);\n    var order = config.order || Object.keys(routeConfigs);\n    var getCustomActionCreators = config.getCustomActionCreators || defaultActionCreators;\n    var initialRouteParams = config.initialRouteParams;\n    var initialRouteName = config.initialRouteName || order[0];\n    var backBehavior = config.backBehavior || 'none';\n    var shouldBackNavigateToInitialRoute = backBehavior === 'initialRoute';\n    var resetOnBlur = config.hasOwnProperty('resetOnBlur') ? config.resetOnBlur : true;\n    var initialRouteIndex = order.indexOf(initialRouteName);\n    var childRouters = {};\n    order.forEach(function (routeName) {\n      var routeConfig = routeConfigs[routeName];\n      childRouters[routeName] = null;\n      var screen = (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n\n      if (screen.router) {\n        childRouters[routeName] = screen.router;\n      }\n    });\n\n    var _createPathParser = (0, _pathUtils.createPathParser)(childRouters, routeConfigs, config.paths),\n        getPathAndParamsForRoute = _createPathParser.getPathAndParamsForRoute,\n        _getActionForPathAndParams = _createPathParser.getActionForPathAndParams;\n\n    if (initialRouteIndex === -1) {\n      throw new Error(\"Invalid initialRouteName '\" + initialRouteName + \"'.\" + (\"Should be one of \" + order.map(function (n) {\n        return \"\\\"\" + n + \"\\\"\";\n      }).join(', ')));\n    }\n\n    function resetChildRoute(routeName) {\n      var params = routeName === initialRouteName ? initialRouteParams : undefined;\n      var childRouter = childRouters[routeName];\n\n      if (childRouter) {\n        var childAction = _NavigationActions.default.init();\n\n        return _objectSpread({}, childRouter.getStateForAction(childAction), {\n          key: routeName,\n          routeName: routeName,\n          params: params\n        });\n      }\n\n      return {\n        key: routeName,\n        routeName: routeName,\n        params: params\n      };\n    }\n\n    function getNextState(prevState, possibleNextState) {\n      if (!prevState) {\n        return possibleNextState;\n      }\n\n      var nextState;\n\n      if (prevState.index !== possibleNextState.index && resetOnBlur) {\n        var prevRouteName = prevState.routes[prevState.index].routeName;\n\n        var nextRoutes = _toConsumableArray(possibleNextState.routes);\n\n        nextRoutes[prevState.index] = resetChildRoute(prevRouteName);\n        return _objectSpread({}, possibleNextState, {\n          routes: nextRoutes\n        });\n      } else {\n        nextState = possibleNextState;\n      }\n\n      return nextState;\n    }\n\n    function getInitialState() {\n      var routes = order.map(resetChildRoute);\n      return {\n        routes: routes,\n        index: initialRouteIndex,\n        isTransitioning: false\n      };\n    }\n\n    return {\n      childRouters: childRouters,\n      getActionCreators: function getActionCreators(route, stateKey) {\n        return getCustomActionCreators(route, stateKey);\n      },\n      getStateForAction: function getStateForAction(action, inputState) {\n        var prevState = inputState ? _objectSpread({}, inputState) : inputState;\n        var state = inputState || getInitialState();\n        var activeChildIndex = state.index;\n\n        if (action.type === _NavigationActions.default.INIT) {\n          var params = action.params;\n\n          if (params) {\n            state.routes = state.routes.map(function (route) {\n              return _objectSpread({}, route, {\n                params: _objectSpread({}, route.params, params, route.routeName === initialRouteName ? initialRouteParams : null)\n              });\n            });\n          }\n        }\n\n        var activeChildLastState = state.routes[state.index];\n        var activeChildRouter = childRouters[order[state.index]];\n\n        if (activeChildRouter) {\n          var activeChildState = activeChildRouter.getStateForAction(action, activeChildLastState);\n\n          if (!activeChildState && inputState) {\n            return null;\n          }\n\n          if (activeChildState && activeChildState !== activeChildLastState) {\n            var _routes = _toConsumableArray(state.routes);\n\n            _routes[state.index] = activeChildState;\n            return getNextState(prevState, _objectSpread({}, state, {\n              routes: _routes\n            }));\n          }\n        }\n\n        var isBackEligible = action.key == null || action.key === activeChildLastState.key;\n\n        if (action.type === _NavigationActions.default.BACK) {\n          if (isBackEligible && shouldBackNavigateToInitialRoute) {\n            activeChildIndex = initialRouteIndex;\n          } else {\n            return state;\n          }\n        }\n\n        var didNavigate = false;\n\n        if (action.type === _NavigationActions.default.NAVIGATE) {\n          didNavigate = !!order.find(function (childId, i) {\n            if (childId === action.routeName) {\n              activeChildIndex = i;\n              return true;\n            }\n\n            return false;\n          });\n\n          if (didNavigate) {\n            var childState = state.routes[activeChildIndex];\n            var childRouter = childRouters[action.routeName];\n            var newChildState;\n\n            if (action.action) {\n              newChildState = childRouter ? childRouter.getStateForAction(action.action, childState) : null;\n            } else if (!action.action && action.params) {\n              newChildState = _objectSpread({}, childState, {\n                params: _objectSpread({}, childState.params || {}, action.params)\n              });\n            }\n\n            if (newChildState && newChildState !== childState) {\n              var _routes2 = _toConsumableArray(state.routes);\n\n              _routes2[activeChildIndex] = newChildState;\n              return getNextState(prevState, _objectSpread({}, state, {\n                routes: _routes2,\n                index: activeChildIndex\n              }));\n            } else if (!newChildState && state.index === activeChildIndex && prevState) {\n              return null;\n            }\n          }\n        }\n\n        if (action.type === _NavigationActions.default.SET_PARAMS) {\n          var key = action.key;\n          var lastRoute = state.routes.find(function (route) {\n            return route.key === key;\n          });\n\n          if (lastRoute) {\n            var _params = _objectSpread({}, lastRoute.params, action.params);\n\n            var _routes3 = _toConsumableArray(state.routes);\n\n            _routes3[state.routes.indexOf(lastRoute)] = _objectSpread({}, lastRoute, {\n              params: _params\n            });\n            return getNextState(prevState, _objectSpread({}, state, {\n              routes: _routes3\n            }));\n          }\n        }\n\n        if (activeChildIndex !== state.index) {\n          return getNextState(prevState, _objectSpread({}, state, {\n            index: activeChildIndex\n          }));\n        } else if (didNavigate && !inputState) {\n          return state;\n        } else if (didNavigate) {\n          return _objectSpread({}, state);\n        }\n\n        var index = state.index;\n        var routes = state.routes;\n        order.find(function (childId, i) {\n          var childRouter = childRouters[childId];\n\n          if (i === index) {\n            return false;\n          }\n\n          var childState = routes[i];\n\n          if (childRouter) {\n            childState = childRouter.getStateForAction(action, childState);\n          }\n\n          if (!childState) {\n            index = i;\n            return true;\n          }\n\n          if (childState !== routes[i]) {\n            routes = _toConsumableArray(routes);\n            routes[i] = childState;\n            index = i;\n            return true;\n          }\n\n          return false;\n        });\n\n        if (childrenUpdateWithoutSwitchingIndex(action.type)) {\n          index = state.index;\n        }\n\n        if (index !== state.index || routes !== state.routes) {\n          return getNextState(prevState, _objectSpread({}, state, {\n            index: index,\n            routes: routes\n          }));\n        }\n\n        return state;\n      },\n      getComponentForState: function getComponentForState(state) {\n        var routeName = state.routes[state.index].routeName;\n        (0, _invariant.default)(routeName, \"There is no route defined for index \" + state.index + \". Check that\\n        that you passed in a navigation state with a valid tab/screen index.\");\n        var childRouter = childRouters[routeName];\n\n        if (childRouter) {\n          return childRouter.getComponentForState(state.routes[state.index]);\n        }\n\n        return (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n      },\n      getComponentForRouteName: function getComponentForRouteName(routeName) {\n        return (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n      },\n      getPathAndParamsForState: function getPathAndParamsForState(state) {\n        var route = state.routes[state.index];\n        return getPathAndParamsForRoute(route);\n      },\n      getActionForPathAndParams: function getActionForPathAndParams(path, params) {\n        return _getActionForPathAndParams(path, params);\n      },\n      getScreenOptions: (0, _createConfigGetter.default)(routeConfigs, config.navigationOptions)\n    };\n  };\n\n  exports.default = _default;\n});","map":[[7,0,1,0],[9,0,2,0],[11,0,3,0],[13,0,5,0],[15,0,6,0],[17,0,7,0],[19,0,8,0],[35,0,10,0],[35,6,10,6,"defaultActionCreators"],[35,30,10,30],[35,39,10,6,"defaultActionCreators"],[35,60,10,30],[35,61,10,31,"route"],[35,66,10,30],[35,68,10,38,"navStateKey"],[35,79,10,30],[36,0,10,30],[36,11,10,55],[36,13,10,30],[37,0,10,30],[37,3,10,0],[39,0,12,0],[39,11,12,9,"childrenUpdateWithoutSwitchingIndex"],[39,46,12,0],[39,47,12,45,"actionType"],[39,57,12,0],[39,59,12,57],[40,0,13,2],[40,11,13,9],[40,12,14,4,"NavigationActions"],[40,39,14,22,"SET_PARAMS"],[40,49,13,9],[40,51,16,4,"StackActions"],[40,73,16,17,"COMPLETE_TRANSITION"],[40,92,13,9],[40,94,17,4,"includes"],[40,102,13,9],[40,103,17,13,"actionType"],[40,113,13,9],[40,114,13,2],[41,0,18,1],[43,17,20,15],[43,35,20,16,"routeConfigs"],[43,47,20,15],[43,49,20,46],[44,0,20,46],[44,8,20,30,"config"],[44,14,20,46],[44,85,20,39],[44,87,20,46],[45,0,22,2],[45,41,22,25,"routeConfigs"],[45,53,22,2],[46,0,24,2],[46,8,24,8,"order"],[46,16,24,16,"config"],[46,23,24,23,"order"],[46,28,24,16],[46,32,24,32,"Object"],[46,39,24,39,"keys"],[46,43,24,32],[46,44,24,44,"routeConfigs"],[46,56,24,32],[46,57,24,2],[47,0,26,2],[47,8,26,8,"getCustomActionCreators"],[47,34,27,4,"config"],[47,41,27,11,"getCustomActionCreators"],[47,64,27,4],[47,68,27,38,"defaultActionCreators"],[47,89,26,2],[48,0,29,2],[48,8,29,8,"initialRouteParams"],[48,29,29,29,"config"],[48,36,29,36,"initialRouteParams"],[48,54,29,2],[49,0,30,2],[49,8,30,8,"initialRouteName"],[49,27,30,27,"config"],[49,34,30,34,"initialRouteName"],[49,50,30,27],[49,54,30,54,"order"],[49,60,30,60],[49,61,30,54],[49,62,30,2],[50,0,31,2],[50,8,31,8,"backBehavior"],[50,23,31,23,"config"],[50,30,31,30,"backBehavior"],[50,42,31,23],[50,46,31,46],[50,52,31,2],[51,0,32,2],[51,8,32,8,"shouldBackNavigateToInitialRoute"],[51,43,32,43,"backBehavior"],[51,60,32,60],[51,74,32,2],[52,0,33,2],[52,8,33,8,"resetOnBlur"],[52,22,33,22,"config"],[52,29,33,29,"hasOwnProperty"],[52,43,33,22],[52,44,33,44],[52,57,33,22],[52,61,34,6,"config"],[52,68,34,13,"resetOnBlur"],[52,79,33,22],[52,82,35,6],[52,86,33,2],[53,0,36,2],[53,8,36,8,"initialRouteIndex"],[53,28,36,28,"order"],[53,34,36,34,"indexOf"],[53,41,36,28],[53,42,36,42,"initialRouteName"],[53,58,36,28],[53,59,36,2],[54,0,37,2],[54,8,37,8,"childRouters"],[54,23,37,23],[54,25,37,2],[55,0,38,2,"order"],[55,10,38,8,"forEach"],[55,17,38,2],[55,18,38,16],[55,39,38,29],[56,0,39,4],[56,10,39,10,"routeConfig"],[56,24,39,24,"routeConfigs"],[56,37,39,37,"routeName"],[56,46,39,24],[56,47,39,4],[57,0,40,4,"childRouters"],[57,19,40,17,"routeName"],[57,28,40,4],[57,32,40,30],[57,36,40,4],[58,0,41,4],[58,10,41,10,"screen"],[58,19,41,19],[58,55,41,41,"routeConfigs"],[58,67,41,19],[58,69,41,55,"routeName"],[58,78,41,19],[58,79,41,4],[60,0,42,4],[60,10,42,8,"screen"],[60,17,42,15,"router"],[60,23,42,4],[60,25,42,23],[61,0,43,6,"childRouters"],[61,21,43,19,"routeName"],[61,30,43,6],[61,34,43,32,"screen"],[61,41,43,39,"router"],[61,47,43,6],[62,0,44,5],[63,0,45,3],[63,5,38,2],[65,0,20,46],[65,28,50,6],[65,61,50,23,"childRouters"],[65,73,50,6],[65,75,50,37,"routeConfigs"],[65,87,50,6],[65,89,50,51,"config"],[65,96,50,58,"paths"],[65,101,50,6],[65,102,20,46],[66,0,20,46],[66,8,48,4,"getPathAndParamsForRoute"],[66,32,20,46],[66,53,48,4,"getPathAndParamsForRoute"],[66,77,20,46],[67,0,20,46],[67,8,49,4,"getActionForPathAndParams"],[67,34,20,46],[67,55,49,4,"getActionForPathAndParams"],[67,80,20,46],[69,0,52,2],[69,8,52,6,"initialRouteIndex"],[69,30,52,28],[69,31,52,29],[69,32,52,2],[69,34,52,32],[70,0,53,4],[70,12,53,10],[70,16,53,14,"Error"],[70,21,53,10],[70,22,54,6],[70,53,54,35,"initialRouteName"],[70,69,54,6],[70,102,55,28,"order"],[70,108,55,34,"map"],[70,111,55,28],[70,112,55,38],[71,0,55,38],[71,22,55,47,"n"],[71,23,55,38],[72,0,55,38],[72,7,55,28],[72,9,55,53,"join"],[72,13,55,28],[72,14,55,58],[72,18,55,28],[72,19,54,6],[72,20,53,10],[72,21,53,4],[73,0,57,3],[75,0,59,2],[75,13,59,11,"resetChildRoute"],[75,28,59,2],[75,29,59,27,"routeName"],[75,38,59,2],[75,40,59,38],[76,0,60,4],[76,10,60,10,"params"],[76,19,61,6,"routeName"],[76,33,61,20,"initialRouteName"],[76,49,61,6],[76,52,61,39,"initialRouteParams"],[76,70,61,6],[76,73,61,60,"undefined"],[76,82,60,4],[77,0,62,4],[77,10,62,10,"childRouter"],[77,24,62,24,"childRouters"],[77,37,62,37,"routeName"],[77,46,62,24],[77,47,62,4],[79,0,63,4],[79,10,63,8,"childRouter"],[79,21,63,4],[79,23,63,21],[80,0,64,6],[80,12,64,12,"childAction"],[80,26,64,26,"NavigationActions"],[80,53,64,44,"init"],[80,57,64,26],[80,59,64,6],[82,0,65,6],[82,33,66,11,"childRouter"],[82,45,66,23,"getStateForAction"],[82,62,66,11],[82,63,66,41,"childAction"],[82,74,66,11],[82,75,65,6],[83,0,67,8,"key"],[83,15,67,13,"routeName"],[83,24,65,6],[84,0,68,8,"routeName"],[84,30,65,6],[85,0,69,8,"params"],[86,0,65,6],[87,0,71,5],[89,0,72,4],[89,13,72,11],[90,0,73,6,"key"],[90,13,73,11,"routeName"],[90,22,72,11],[91,0,74,6,"routeName"],[91,28,72,11],[92,0,75,6,"params"],[93,0,72,11],[93,7,72,4],[94,0,77,3],[96,0,79,2],[96,13,79,11,"getNextState"],[96,25,79,2],[96,26,79,24,"prevState"],[96,35,79,2],[96,37,79,35,"possibleNextState"],[96,54,79,2],[96,56,79,54],[97,0,80,4],[97,10,80,8],[97,11,80,9,"prevState"],[97,20,80,4],[97,22,80,20],[98,0,81,6],[98,15,81,13,"possibleNextState"],[98,32,81,6],[99,0,82,5],[101,0,84,4],[101,10,84,8,"nextState"],[101,19,84,4],[103,0,85,4],[103,10,85,8,"prevState"],[103,20,85,18,"index"],[103,25,85,8],[103,30,85,28,"possibleNextState"],[103,48,85,46,"index"],[103,53,85,8],[103,57,85,55,"resetOnBlur"],[103,68,85,4],[103,70,85,68],[104,0,86,6],[104,12,86,12,"prevRouteName"],[104,28,86,28,"prevState"],[104,38,86,38,"routes"],[104,44,86,28],[104,45,86,45,"prevState"],[104,55,86,55,"index"],[104,60,86,28],[104,62,86,62,"routeName"],[104,71,86,6],[106,0,87,6],[106,12,87,12,"nextRoutes"],[106,44,87,29,"possibleNextState"],[106,62,87,47,"routes"],[106,68,87,12],[106,69,87,6],[108,0,88,6,"nextRoutes"],[108,19,88,17,"prevState"],[108,29,88,27,"index"],[108,34,88,6],[108,38,88,36,"resetChildRoute"],[108,54,88,52,"prevRouteName"],[108,67,88,36],[108,68,88,6],[109,0,90,6],[109,33,91,11,"possibleNextState"],[109,50,90,6],[110,0,92,8,"routes"],[110,18,92,16,"nextRoutes"],[111,0,90,6],[112,0,94,5],[112,7,85,4],[112,13,94,11],[113,0,95,6,"nextState"],[113,20,95,18,"possibleNextState"],[113,37,95,6],[114,0,96,5],[116,0,98,4],[116,13,98,11,"nextState"],[116,22,98,4],[117,0,99,3],[119,0,101,2],[119,13,101,11,"getInitialState"],[119,28,101,2],[119,31,101,29],[120,0,102,4],[120,10,102,10,"routes"],[120,19,102,19,"order"],[120,25,102,25,"map"],[120,28,102,19],[120,29,102,29,"resetChildRoute"],[120,44,102,19],[120,45,102,4],[121,0,103,4],[121,13,103,11],[122,0,104,6,"routes"],[122,22,103,11],[123,0,105,6,"index"],[123,15,105,13,"initialRouteIndex"],[123,32,103,11],[124,0,106,6,"isTransitioning"],[124,25,106,23],[125,0,103,11],[125,7,103,4],[126,0,108,3],[128,0,110,2],[128,11,110,9],[129,0,111,4,"childRouters"],[129,32,110,9],[130,0,113,4,"getActionCreators"],[130,23,110,9],[130,52,113,22,"route"],[130,57,110,9],[130,59,113,29,"stateKey"],[130,67,110,9],[130,69,113,39],[131,0,114,6],[131,15,114,13,"getCustomActionCreators"],[131,39,114,37,"route"],[131,44,114,13],[131,46,114,44,"stateKey"],[131,54,114,13],[131,55,114,6],[132,0,115,5],[132,7,110,9],[133,0,117,4,"getStateForAction"],[133,23,110,9],[133,52,117,22,"action"],[133,58,110,9],[133,60,117,30,"inputState"],[133,70,110,9],[133,72,117,42],[134,0,118,6],[134,12,118,10,"prevState"],[134,24,118,22,"inputState"],[134,55,118,40,"inputState"],[134,65,118,22],[134,69,118,55,"inputState"],[134,79,118,6],[135,0,119,6],[135,12,119,10,"state"],[135,20,119,18,"inputState"],[135,34,119,32,"getInitialState"],[135,51,119,6],[136,0,120,6],[136,12,120,10,"activeChildIndex"],[136,31,120,29,"state"],[136,37,120,35,"index"],[136,42,120,6],[138,0,122,6],[138,12,122,10,"action"],[138,19,122,17,"type"],[138,23,122,10],[138,28,122,26,"NavigationActions"],[138,55,122,44,"INIT"],[138,59,122,6],[138,61,122,50],[139,0,122,50],[139,14,127,16,"params"],[139,20,122,50],[139,23,127,27,"action"],[139,29,122,50],[139,30,127,16,"params"],[139,36,122,50],[141,0,128,8],[141,14,128,12,"params"],[141,20,128,8],[141,22,128,20],[142,0,129,10,"state"],[142,18,129,16,"routes"],[142,24,129,10],[142,27,129,25,"state"],[142,33,129,31,"routes"],[142,39,129,25],[142,40,129,38,"map"],[142,43,129,25],[142,44,129,42],[143,0,129,42],[143,39,130,15,"route"],[143,44,129,42],[144,0,131,12,"params"],[144,42,132,17,"route"],[144,48,132,23,"params"],[144,54,131,12],[144,56,133,17,"params"],[144,62,131,12],[144,64,134,18,"route"],[144,70,134,24,"routeName"],[144,79,134,18],[144,84,134,38,"initialRouteName"],[144,100,134,18],[144,103,135,18,"initialRouteParams"],[144,121,134,18],[144,124,136,18],[144,128,131,12],[145,0,129,42],[146,0,129,42],[146,13,129,25],[146,14,129,10],[147,0,139,9],[148,0,140,7],[150,0,143,6],[150,12,143,12,"activeChildLastState"],[150,35,143,35,"state"],[150,41,143,41,"routes"],[150,47,143,35],[150,48,143,48,"state"],[150,54,143,54,"index"],[150,59,143,35],[150,60,143,6],[151,0,144,6],[151,12,144,12,"activeChildRouter"],[151,32,144,32,"childRouters"],[151,45,144,45,"order"],[151,51,144,51,"state"],[151,57,144,57,"index"],[151,62,144,45],[151,63,144,32],[151,64,144,6],[153,0,145,6],[153,12,145,10,"activeChildRouter"],[153,29,145,6],[153,31,145,29],[154,0,146,8],[154,14,146,14,"activeChildState"],[154,33,146,33,"activeChildRouter"],[154,51,146,51,"getStateForAction"],[154,68,146,33],[154,69,147,10,"action"],[154,75,146,33],[154,77,148,10,"activeChildLastState"],[154,97,146,33],[154,98,146,8],[156,0,150,8],[156,14,150,12],[156,15,150,13,"activeChildState"],[156,31,150,12],[156,35,150,33,"inputState"],[156,45,150,8],[156,47,150,45],[157,0,151,10],[157,19,151,17],[157,23,151,10],[158,0,152,9],[160,0,153,8],[160,14,153,12,"activeChildState"],[160,34,153,32,"activeChildState"],[160,55,153,53,"activeChildLastState"],[160,75,153,8],[160,77,153,75],[161,0,154,10],[161,16,154,16,"routes"],[161,45,154,29,"state"],[161,51,154,35,"routes"],[161,57,154,16],[161,58,154,10],[163,0,155,10,"routes"],[163,20,155,17,"state"],[163,26,155,23,"index"],[163,31,155,10],[163,35,155,32,"activeChildState"],[163,51,155,10],[164,0,156,10],[164,19,156,17,"getNextState"],[164,32,156,30,"prevState"],[164,41,156,17],[164,61,157,15,"state"],[164,66,156,17],[165,0,158,12,"routes"],[166,0,156,17],[166,15,156,10],[167,0,160,9],[168,0,161,7],[170,0,165,6],[170,12,165,12,"isBackEligible"],[170,29,166,8,"action"],[170,36,166,15,"key"],[170,39,166,8],[170,43,166,22],[170,47,166,8],[170,51,166,30,"action"],[170,58,166,37,"key"],[170,61,166,30],[170,66,166,45,"activeChildLastState"],[170,87,166,66,"key"],[170,90,165,6],[172,0,167,6],[172,12,167,10,"action"],[172,19,167,17,"type"],[172,23,167,10],[172,28,167,26,"NavigationActions"],[172,55,167,44,"BACK"],[172,59,167,6],[172,61,167,50],[173,0,168,8],[173,14,168,12,"isBackEligible"],[173,32,168,30,"shouldBackNavigateToInitialRoute"],[173,64,168,8],[173,66,168,64],[174,0,169,10,"activeChildIndex"],[174,31,169,29,"initialRouteIndex"],[174,48,169,10],[175,0,170,9],[175,11,168,8],[175,17,170,15],[176,0,171,10],[176,19,171,17,"state"],[176,24,171,10],[177,0,172,9],[178,0,173,7],[180,0,175,6],[180,12,175,10,"didNavigate"],[180,26,175,24],[180,31,175,6],[182,0,176,6],[182,12,176,10,"action"],[182,19,176,17,"type"],[182,23,176,10],[182,28,176,26,"NavigationActions"],[182,55,176,44,"NAVIGATE"],[182,63,176,6],[182,65,176,54],[183,0,177,8,"didNavigate"],[183,24,177,22],[183,25,177,23],[183,26,177,24,"order"],[183,32,177,30,"find"],[183,36,177,24],[183,37,177,35],[183,47,177,36,"childId"],[183,54,177,35],[183,56,177,45,"i"],[183,57,177,35],[183,59,177,51],[184,0,178,10],[184,16,178,14,"childId"],[184,28,178,26,"action"],[184,35,178,33,"routeName"],[184,44,178,10],[184,46,178,44],[185,0,179,12,"activeChildIndex"],[185,33,179,31,"i"],[185,34,179,12],[186,0,180,12],[186,21,180,19],[186,25,180,12],[187,0,181,11],[189,0,182,10],[189,19,182,17],[189,24,182,10],[190,0,183,9],[190,11,177,24],[190,12,177,8],[192,0,184,8],[192,14,184,12,"didNavigate"],[192,25,184,8],[192,27,184,25],[193,0,185,10],[193,16,185,16,"childState"],[193,29,185,29,"state"],[193,35,185,35,"routes"],[193,41,185,29],[193,42,185,42,"activeChildIndex"],[193,58,185,29],[193,59,185,10],[194,0,186,10],[194,16,186,16,"childRouter"],[194,30,186,30,"childRouters"],[194,43,186,43,"action"],[194,50,186,50,"routeName"],[194,59,186,30],[194,60,186,10],[195,0,187,10],[195,16,187,14,"newChildState"],[195,29,187,10],[197,0,189,10],[197,16,189,14,"action"],[197,23,189,21,"action"],[197,29,189,10],[197,31,189,29],[198,0,190,12,"newChildState"],[198,30,190,28,"childRouter"],[198,44,191,16,"childRouter"],[198,56,191,28,"getStateForAction"],[198,73,191,16],[198,74,191,46,"action"],[198,81,191,53,"action"],[198,87,191,16],[198,89,191,61,"childState"],[198,99,191,16],[198,100,190,28],[198,103,192,16],[198,107,190,12],[199,0,193,11],[199,13,189,10],[199,19,193,17],[199,23,193,21],[199,24,193,22,"action"],[199,31,193,29,"action"],[199,37,193,21],[199,41,193,39,"action"],[199,48,193,46,"params"],[199,54,193,17],[199,56,193,54],[200,0,194,12,"newChildState"],[200,48,195,17,"childState"],[200,58,194,12],[201,0,196,14,"params"],[201,42,197,20,"childState"],[201,53,197,31,"params"],[201,59,197,20],[201,63,197,41],[201,65,196,14],[201,67,198,19,"action"],[201,74,198,26,"params"],[201,80,196,14],[202,0,194,12],[203,0,201,11],[205,0,203,10],[205,16,203,14,"newChildState"],[205,33,203,31,"newChildState"],[205,51,203,49,"childState"],[205,61,203,10],[205,63,203,61],[206,0,204,12],[206,18,204,18,"routes"],[206,48,204,31,"state"],[206,54,204,37,"routes"],[206,60,204,18],[206,61,204,12],[208,0,205,12,"routes"],[208,23,205,19,"activeChildIndex"],[208,39,205,12],[208,43,205,39,"newChildState"],[208,56,205,12],[209,0,206,12],[209,21,206,19,"getNextState"],[209,34,206,32,"prevState"],[209,43,206,19],[209,63,207,17,"state"],[209,68,206,19],[210,0,208,14,"routes"],[210,32,206,19],[211,0,209,14,"index"],[211,23,209,21,"activeChildIndex"],[212,0,206,19],[212,17,206,12],[213,0,211,11],[213,13,203,10],[213,19,211,17],[213,23,212,12],[213,24,212,13,"newChildState"],[213,37,212,12],[213,41,213,12,"state"],[213,47,213,18,"index"],[213,52,213,12],[213,57,213,28,"activeChildIndex"],[213,73,212,12],[213,77,214,12,"prevState"],[213,86,211,17],[213,88,215,12],[214,0,216,12],[214,21,216,19],[214,25,216,12],[215,0,217,11],[216,0,218,9],[217,0,219,7],[219,0,221,6],[219,12,221,10,"action"],[219,19,221,17,"type"],[219,23,221,10],[219,28,221,26,"NavigationActions"],[219,55,221,44,"SET_PARAMS"],[219,65,221,6],[219,67,221,56],[220,0,222,8],[220,14,222,14,"key"],[220,20,222,20,"action"],[220,27,222,27,"key"],[220,30,222,8],[221,0,223,8],[221,14,223,14,"lastRoute"],[221,26,223,26,"state"],[221,32,223,32,"routes"],[221,38,223,26],[221,39,223,39,"find"],[221,43,223,26],[221,44,223,44],[222,0,223,44],[222,19,223,53,"route"],[222,25,223,59,"key"],[222,28,223,53],[222,33,223,67,"key"],[222,36,223,44],[223,0,223,44],[223,11,223,26],[223,12,223,8],[225,0,224,8],[225,14,224,12,"lastRoute"],[225,23,224,8],[225,25,224,23],[226,0,225,10],[226,16,225,16,"params"],[226,44,226,15,"lastRoute"],[226,54,226,25,"params"],[226,60,225,16],[226,62,227,15,"action"],[226,69,227,22,"params"],[226,75,225,16],[226,76,225,10],[228,0,229,10],[228,16,229,16,"routes"],[228,46,229,29,"state"],[228,52,229,35,"routes"],[228,58,229,16],[228,59,229,10],[230,0,230,10,"routes"],[230,21,230,17,"state"],[230,27,230,23,"routes"],[230,33,230,17],[230,34,230,30,"indexOf"],[230,41,230,17],[230,42,230,38,"lastRoute"],[230,51,230,17],[230,52,230,10],[230,74,231,15,"lastRoute"],[230,83,230,10],[231,0,232,12,"params"],[232,0,230,10],[233,0,234,10],[233,19,234,17,"getNextState"],[233,32,234,30,"prevState"],[233,41,234,17],[233,61,235,15,"state"],[233,66,234,17],[234,0,236,12,"routes"],[235,0,234,17],[235,15,234,10],[236,0,238,9],[237,0,239,7],[239,0,241,6],[239,12,241,10,"activeChildIndex"],[239,33,241,31,"state"],[239,39,241,37,"index"],[239,44,241,6],[239,46,241,44],[240,0,242,8],[240,17,242,15,"getNextState"],[240,30,242,28,"prevState"],[240,39,242,15],[240,59,243,13,"state"],[240,64,242,15],[241,0,244,10,"index"],[241,19,244,17,"activeChildIndex"],[242,0,242,15],[242,13,242,8],[243,0,246,7],[243,9,241,6],[243,15,246,13],[243,19,246,17,"didNavigate"],[243,34,246,32],[243,35,246,33,"inputState"],[243,45,246,13],[243,47,246,45],[244,0,247,8],[244,17,247,15,"state"],[244,22,247,8],[245,0,248,7],[245,9,246,13],[245,15,248,13],[245,19,248,17,"didNavigate"],[245,30,248,13],[245,32,248,30],[246,0,249,8],[246,35,249,20,"state"],[246,40,249,8],[247,0,250,7],[249,0,253,6],[249,12,253,10,"index"],[249,20,253,18,"state"],[249,26,253,24,"index"],[249,31,253,6],[250,0,254,6],[250,12,254,10,"routes"],[250,21,254,19,"state"],[250,27,254,25,"routes"],[250,33,254,6],[251,0,255,6,"order"],[251,14,255,12,"find"],[251,18,255,6],[251,19,255,17],[251,29,255,18,"childId"],[251,36,255,17],[251,38,255,27,"i"],[251,39,255,17],[251,41,255,33],[252,0,256,8],[252,14,256,14,"childRouter"],[252,28,256,28,"childRouters"],[252,41,256,41,"childId"],[252,48,256,28],[252,49,256,8],[254,0,257,8],[254,14,257,12,"i"],[254,20,257,18,"index"],[254,25,257,8],[254,27,257,25],[255,0,258,10],[255,19,258,17],[255,24,258,10],[256,0,259,9],[258,0,260,8],[258,14,260,12,"childState"],[258,27,260,25,"routes"],[258,34,260,32,"i"],[258,35,260,25],[258,36,260,8],[260,0,261,8],[260,14,261,12,"childRouter"],[260,25,261,8],[260,27,261,25],[261,0,262,10,"childState"],[261,25,262,23,"childRouter"],[261,37,262,35,"getStateForAction"],[261,54,262,23],[261,55,262,53,"action"],[261,61,262,23],[261,63,262,61,"childState"],[261,73,262,23],[261,74,262,10],[262,0,263,9],[264,0,264,8],[264,14,264,12],[264,15,264,13,"childState"],[264,25,264,8],[264,27,264,25],[265,0,265,10,"index"],[265,20,265,18,"i"],[265,21,265,10],[266,0,266,10],[266,19,266,17],[266,23,266,10],[267,0,267,9],[269,0,268,8],[269,14,268,12,"childState"],[269,29,268,27,"routes"],[269,36,268,34,"i"],[269,37,268,27],[269,38,268,8],[269,40,268,38],[270,0,269,10,"routes"],[270,40,269,23,"routes"],[270,46,269,10],[271,0,270,10,"routes"],[271,19,270,17,"i"],[271,20,270,10],[271,24,270,22,"childState"],[271,34,270,10],[272,0,271,10,"index"],[272,20,271,18,"i"],[272,21,271,10],[273,0,272,10],[273,19,272,17],[273,23,272,10],[274,0,273,9],[276,0,274,8],[276,17,274,15],[276,22,274,8],[277,0,275,7],[277,9,255,6],[279,0,281,6],[279,12,281,10,"childrenUpdateWithoutSwitchingIndex"],[279,48,281,46,"action"],[279,55,281,53,"type"],[279,59,281,10],[279,60,281,6],[279,62,281,60],[280,0,282,8,"index"],[280,18,282,16,"state"],[280,24,282,22,"index"],[280,29,282,8],[281,0,283,7],[283,0,285,6],[283,12,285,10,"index"],[283,22,285,20,"state"],[283,28,285,26,"index"],[283,33,285,10],[283,37,285,35,"routes"],[283,48,285,46,"state"],[283,54,285,52,"routes"],[283,60,285,6],[283,62,285,60],[284,0,286,8],[284,17,286,15,"getNextState"],[284,30,286,28,"prevState"],[284,39,286,15],[284,59,287,13,"state"],[284,64,286,15],[285,0,288,10,"index"],[285,24,286,15],[286,0,289,10,"routes"],[287,0,286,15],[287,13,286,8],[288,0,291,7],[290,0,292,6],[290,15,292,13,"state"],[290,20,292,6],[291,0,293,5],[291,7,110,9],[292,0,295,4,"getComponentForState"],[292,26,110,9],[292,58,295,25,"state"],[292,63,110,9],[292,65,295,32],[293,0,296,6],[293,12,296,12,"routeName"],[293,24,296,24,"state"],[293,30,296,30,"routes"],[293,36,296,24],[293,37,296,37,"state"],[293,43,296,43,"index"],[293,48,296,24],[293,50,296,50,"routeName"],[293,59,296,6],[294,0,297,6],[294,32,298,8,"routeName"],[294,41,297,6],[294,84,299,47,"state"],[294,90,299,53,"index"],[294,95,297,6],[295,0,302,6],[295,12,302,12,"childRouter"],[295,26,302,26,"childRouters"],[295,39,302,39,"routeName"],[295,48,302,26],[295,49,302,6],[297,0,303,6],[297,12,303,10,"childRouter"],[297,23,303,6],[297,25,303,23],[298,0,304,8],[298,17,304,15,"childRouter"],[298,29,304,27,"getComponentForState"],[298,49,304,15],[298,50,304,48,"state"],[298,56,304,54,"routes"],[298,62,304,48],[298,63,304,61,"state"],[298,69,304,67,"index"],[298,74,304,48],[298,75,304,15],[298,76,304,8],[299,0,305,7],[301,0,306,6],[301,15,306,13],[301,51,306,35,"routeConfigs"],[301,63,306,13],[301,65,306,49,"routeName"],[301,74,306,13],[301,75,306,6],[302,0,307,5],[302,7,110,9],[303,0,309,4,"getComponentForRouteName"],[303,30,110,9],[303,66,309,29,"routeName"],[303,75,110,9],[303,77,309,40],[304,0,310,6],[304,15,310,13],[304,51,310,35,"routeConfigs"],[304,63,310,13],[304,65,310,49,"routeName"],[304,74,310,13],[304,75,310,6],[305,0,311,5],[305,7,110,9],[306,0,313,4,"getPathAndParamsForState"],[306,30,110,9],[306,66,313,29,"state"],[306,71,110,9],[306,73,313,36],[307,0,314,6],[307,12,314,12,"route"],[307,20,314,20,"state"],[307,26,314,26,"routes"],[307,32,314,20],[307,33,314,33,"state"],[307,39,314,39,"index"],[307,44,314,20],[307,45,314,6],[308,0,315,6],[308,15,315,13,"getPathAndParamsForRoute"],[308,40,315,38,"route"],[308,45,315,13],[308,46,315,6],[309,0,316,5],[309,7,110,9],[310,0,318,4,"getActionForPathAndParams"],[310,31,110,9],[310,68,318,30,"path"],[310,72,110,9],[310,74,318,36,"params"],[310,80,110,9],[310,82,318,44],[311,0,319,6],[311,15,319,13,"getActionForPathAndParams"],[311,42,319,39,"path"],[311,46,319,13],[311,48,319,45,"params"],[311,54,319,13],[311,55,319,6],[312,0,320,5],[312,7,110,9],[313,0,322,4,"getScreenOptions"],[313,24,322,22],[313,57,323,6,"routeConfigs"],[313,69,322,22],[313,71,324,6,"config"],[313,78,324,13,"navigationOptions"],[313,95,322,22],[314,0,110,9],[314,5,110,2],[315,0,327,1],[315,3]]},"type":"js/module"}]}