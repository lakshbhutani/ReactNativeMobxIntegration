{"dependencies":[{"name":"../nodes/AnimatedValue","isAsync":false},{"name":"../nodes/AnimatedValueXY","isAsync":false},{"name":"./Animation","isAsync":false},{"name":"../SpringConfig","isAsync":false},{"name":"fbjs/lib/invariant","isAsync":false},{"name":"../NativeAnimatedHelper","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\n  function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  var AnimatedValue = _$$_REQUIRE(_dependencyMap[0], '../nodes/AnimatedValue');\n\n  var AnimatedValueXY = _$$_REQUIRE(_dependencyMap[1], '../nodes/AnimatedValueXY');\n\n  var Animation = _$$_REQUIRE(_dependencyMap[2], './Animation');\n\n  var SpringConfig = _$$_REQUIRE(_dependencyMap[3], '../SpringConfig');\n\n  var invariant = _$$_REQUIRE(_dependencyMap[4], 'fbjs/lib/invariant');\n\n  var _require = _$$_REQUIRE(_dependencyMap[5], '../NativeAnimatedHelper'),\n      shouldUseNativeDriver = _require.shouldUseNativeDriver;\n\n  function withDefault(value, defaultValue) {\n    if (value === undefined || value === null) {\n      return defaultValue;\n    }\n\n    return value;\n  }\n\n  var SpringAnimation = function (_Animation) {\n    function SpringAnimation(config) {\n      var _this;\n\n      _classCallCheck(this, SpringAnimation);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(SpringAnimation).call(this));\n      _this._overshootClamping = withDefault(config.overshootClamping, false);\n      _this._restDisplacementThreshold = withDefault(config.restDisplacementThreshold, 0.001);\n      _this._restSpeedThreshold = withDefault(config.restSpeedThreshold, 0.001);\n      _this._initialVelocity = withDefault(config.velocity, 0);\n      _this._lastVelocity = withDefault(config.velocity, 0);\n      _this._toValue = config.toValue;\n      _this._delay = withDefault(config.delay, 0);\n      _this._useNativeDriver = shouldUseNativeDriver(config);\n      _this.__isInteraction = config.isInteraction !== undefined ? config.isInteraction : true;\n      _this.__iterations = config.iterations !== undefined ? config.iterations : 1;\n\n      if (config.stiffness !== undefined || config.damping !== undefined || config.mass !== undefined) {\n        invariant(config.bounciness === undefined && config.speed === undefined && config.tension === undefined && config.friction === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n        _this._stiffness = withDefault(config.stiffness, 100);\n        _this._damping = withDefault(config.damping, 10);\n        _this._mass = withDefault(config.mass, 1);\n      } else if (config.bounciness !== undefined || config.speed !== undefined) {\n        invariant(config.tension === undefined && config.friction === undefined && config.stiffness === undefined && config.damping === undefined && config.mass === undefined, 'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one');\n        var springConfig = SpringConfig.fromBouncinessAndSpeed(withDefault(config.bounciness, 8), withDefault(config.speed, 12));\n        _this._stiffness = springConfig.stiffness;\n        _this._damping = springConfig.damping;\n        _this._mass = 1;\n      } else {\n        var _springConfig = SpringConfig.fromOrigamiTensionAndFriction(withDefault(config.tension, 40), withDefault(config.friction, 7));\n\n        _this._stiffness = _springConfig.stiffness;\n        _this._damping = _springConfig.damping;\n        _this._mass = 1;\n      }\n\n      invariant(_this._stiffness > 0, 'Stiffness value must be greater than 0');\n      invariant(_this._damping > 0, 'Damping value must be greater than 0');\n      invariant(_this._mass > 0, 'Mass value must be greater than 0');\n      return _this;\n    }\n\n    _createClass(SpringAnimation, [{\n      key: \"__getNativeAnimationConfig\",\n      value: function __getNativeAnimationConfig() {\n        return {\n          type: 'spring',\n          overshootClamping: this._overshootClamping,\n          restDisplacementThreshold: this._restDisplacementThreshold,\n          restSpeedThreshold: this._restSpeedThreshold,\n          stiffness: this._stiffness,\n          damping: this._damping,\n          mass: this._mass,\n          initialVelocity: withDefault(this._initialVelocity, this._lastVelocity),\n          toValue: this._toValue,\n          iterations: this.__iterations\n        };\n      }\n    }, {\n      key: \"start\",\n      value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {\n        var _this2 = this;\n\n        this.__active = true;\n        this._startPosition = fromValue;\n        this._lastPosition = this._startPosition;\n        this._onUpdate = onUpdate;\n        this.__onEnd = onEnd;\n        this._lastTime = Date.now();\n        this._frameTime = 0.0;\n\n        if (previousAnimation instanceof SpringAnimation) {\n          var internalState = previousAnimation.getInternalState();\n          this._lastPosition = internalState.lastPosition;\n          this._lastVelocity = internalState.lastVelocity;\n          this._initialVelocity = this._lastVelocity;\n          this._lastTime = internalState.lastTime;\n        }\n\n        var start = function start() {\n          if (_this2._useNativeDriver) {\n            _this2.__startNativeAnimation(animatedValue);\n          } else {\n            _this2.onUpdate();\n          }\n        };\n\n        if (this._delay) {\n          this._timeout = setTimeout(start, this._delay);\n        } else {\n          start();\n        }\n      }\n    }, {\n      key: \"getInternalState\",\n      value: function getInternalState() {\n        return {\n          lastPosition: this._lastPosition,\n          lastVelocity: this._lastVelocity,\n          lastTime: this._lastTime\n        };\n      }\n    }, {\n      key: \"onUpdate\",\n      value: function onUpdate() {\n        var MAX_STEPS = 64;\n        var now = Date.now();\n\n        if (now > this._lastTime + MAX_STEPS) {\n          now = this._lastTime + MAX_STEPS;\n        }\n\n        var deltaTime = (now - this._lastTime) / 1000;\n        this._frameTime += deltaTime;\n        var c = this._damping;\n        var m = this._mass;\n        var k = this._stiffness;\n        var v0 = -this._initialVelocity;\n        var zeta = c / (2 * Math.sqrt(k * m));\n        var omega0 = Math.sqrt(k / m);\n        var omega1 = omega0 * Math.sqrt(1.0 - zeta * zeta);\n        var x0 = this._toValue - this._startPosition;\n        var position = 0.0;\n        var velocity = 0.0;\n        var t = this._frameTime;\n\n        if (zeta < 1) {\n          var envelope = Math.exp(-zeta * omega0 * t);\n          position = this._toValue - envelope * ((v0 + zeta * omega0 * x0) / omega1 * Math.sin(omega1 * t) + x0 * Math.cos(omega1 * t));\n          velocity = zeta * omega0 * envelope * (Math.sin(omega1 * t) * (v0 + zeta * omega0 * x0) / omega1 + x0 * Math.cos(omega1 * t)) - envelope * (Math.cos(omega1 * t) * (v0 + zeta * omega0 * x0) - omega1 * x0 * Math.sin(omega1 * t));\n        } else {\n          var _envelope = Math.exp(-omega0 * t);\n\n          position = this._toValue - _envelope * (x0 + (v0 + omega0 * x0) * t);\n          velocity = _envelope * (v0 * (t * omega0 - 1) + t * x0 * (omega0 * omega0));\n        }\n\n        this._lastTime = now;\n        this._lastPosition = position;\n        this._lastVelocity = velocity;\n\n        this._onUpdate(position);\n\n        if (!this.__active) {\n          return;\n        }\n\n        var isOvershooting = false;\n\n        if (this._overshootClamping && this._stiffness !== 0) {\n          if (this._startPosition < this._toValue) {\n            isOvershooting = position > this._toValue;\n          } else {\n            isOvershooting = position < this._toValue;\n          }\n        }\n\n        var isVelocity = Math.abs(velocity) <= this._restSpeedThreshold;\n\n        var isDisplacement = true;\n\n        if (this._stiffness !== 0) {\n          isDisplacement = Math.abs(this._toValue - position) <= this._restDisplacementThreshold;\n        }\n\n        if (isOvershooting || isVelocity && isDisplacement) {\n          if (this._stiffness !== 0) {\n            this._lastPosition = this._toValue;\n            this._lastVelocity = 0;\n\n            this._onUpdate(this._toValue);\n          }\n\n          this.__debouncedOnEnd({\n            finished: true\n          });\n\n          return;\n        }\n\n        this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        _get(_getPrototypeOf(SpringAnimation.prototype), \"stop\", this).call(this);\n\n        this.__active = false;\n        clearTimeout(this._timeout);\n        global.cancelAnimationFrame(this._animationFrame);\n\n        this.__debouncedOnEnd({\n          finished: false\n        });\n      }\n    }]);\n\n    _inherits(SpringAnimation, _Animation);\n\n    return SpringAnimation;\n  }(Animation);\n\n  module.exports = SpringAnimation;\n});","map":[[2,0,10,0],[24,0,12,0],[24,6,12,6,"AnimatedValue"],[24,22,12,22,"require"],[24,53,12,30],[24,77,12,22],[24,78,12,0],[26,0,13,0],[26,6,13,6,"AnimatedValueXY"],[26,24,13,24,"require"],[26,55,13,32],[26,81,13,24],[26,82,13,0],[28,0,14,0],[28,6,14,6,"Animation"],[28,18,14,18,"require"],[28,49,14,26],[28,62,14,18],[28,63,14,0],[30,0,15,0],[30,6,15,6,"SpringConfig"],[30,21,15,21,"require"],[30,52,15,29],[30,69,15,21],[30,70,15,0],[32,0,17,0],[32,6,17,6,"invariant"],[32,18,17,18,"require"],[32,49,17,26],[32,69,17,18],[32,70,17,0],[34,17,18,32,"require"],[34,48,18,40],[34,73,18,32],[34,74],[35,6,18,7,"shouldUseNativeDriver"],[35,27],[35,39,18,7,"shouldUseNativeDriver"],[35,60],[37,0,54,0],[37,11,54,9,"withDefault"],[37,22,54,0],[37,23,54,24,"value"],[37,28,54,0],[37,30,54,35,"defaultValue"],[37,42,54,0],[37,44,54,55],[38,0,55,2],[38,8,55,6,"value"],[38,18,55,16,"undefined"],[38,27,55,6],[38,31,55,29,"value"],[38,41,55,39],[38,45,55,2],[38,47,55,45],[39,0,56,4],[39,13,56,11,"defaultValue"],[39,25,56,4],[40,0,57,3],[42,0,58,2],[42,11,58,9,"value"],[42,16,58,2],[43,0,59,1],[45,6,61,6,"SpringAnimation"],[45,21],[46,0,83,2],[46,29,83,14,"config"],[46,35,83,2],[46,37,83,51],[47,0,83,51],[49,0,83,51],[51,0,84,4],[52,0,86,4],[52,12,86,9,"_overshootClamping"],[52,30,86,4],[52,33,86,30,"withDefault"],[52,45,86,42,"config"],[52,52,86,49,"overshootClamping"],[52,69,86,30],[52,71,86,68],[52,76,86,30],[52,77,86,4],[53,0,87,4],[53,12,87,9,"_restDisplacementThreshold"],[53,38,87,4],[53,41,87,38,"withDefault"],[53,53,88,6,"config"],[53,60,88,13,"restDisplacementThreshold"],[53,85,87,38],[53,87,89,6],[53,92,87,38],[53,93,87,4],[54,0,91,4],[54,12,91,9,"_restSpeedThreshold"],[54,31,91,4],[54,34,91,31,"withDefault"],[54,46,91,43,"config"],[54,53,91,50,"restSpeedThreshold"],[54,71,91,31],[54,73,91,70],[54,78,91,31],[54,79,91,4],[55,0,92,4],[55,12,92,9,"_initialVelocity"],[55,28,92,4],[55,31,92,28,"withDefault"],[55,43,92,40,"config"],[55,50,92,47,"velocity"],[55,58,92,28],[55,60,92,57],[55,61,92,28],[55,62,92,4],[56,0,93,4],[56,12,93,9,"_lastVelocity"],[56,25,93,4],[56,28,93,25,"withDefault"],[56,40,93,37,"config"],[56,47,93,44,"velocity"],[56,55,93,25],[56,57,93,54],[56,58,93,25],[56,59,93,4],[57,0,94,4],[57,12,94,9,"_toValue"],[57,20,94,4],[57,23,94,20,"config"],[57,30,94,27,"toValue"],[57,37,94,4],[58,0,95,4],[58,12,95,9,"_delay"],[58,18,95,4],[58,21,95,18,"withDefault"],[58,33,95,30,"config"],[58,40,95,37,"delay"],[58,45,95,18],[58,47,95,44],[58,48,95,18],[58,49,95,4],[59,0,96,4],[59,12,96,9,"_useNativeDriver"],[59,28,96,4],[59,31,96,28,"shouldUseNativeDriver"],[59,53,96,50,"config"],[59,59,96,28],[59,60,96,4],[60,0,97,4],[60,12,97,9,"__isInteraction"],[60,27,97,4],[60,30,98,6,"config"],[60,37,98,13,"isInteraction"],[60,50,98,6],[60,55,98,31,"undefined"],[60,64,98,6],[60,67,98,43,"config"],[60,74,98,50,"isInteraction"],[60,87,98,6],[60,90,98,66],[60,94,97,4],[61,0,99,4],[61,12,99,9,"__iterations"],[61,24,99,4],[61,27,99,24,"config"],[61,34,99,31,"iterations"],[61,44,99,24],[61,49,99,46,"undefined"],[61,58,99,24],[61,61,99,58,"config"],[61,68,99,65,"iterations"],[61,78,99,24],[61,81,99,78],[61,82,99,4],[63,0,101,4],[63,10,102,6,"config"],[63,17,102,13,"stiffness"],[63,26,102,6],[63,31,102,27,"undefined"],[63,40,102,6],[63,44,103,6,"config"],[63,51,103,13,"damping"],[63,58,103,6],[63,63,103,25,"undefined"],[63,72,102,6],[63,76,104,6,"config"],[63,83,104,13,"mass"],[63,87,104,6],[63,92,104,22,"undefined"],[63,101,101,4],[63,103,105,6],[64,0,106,6,"invariant"],[64,18,107,8,"config"],[64,25,107,15,"bounciness"],[64,35,107,8],[64,40,107,30,"undefined"],[64,49,107,8],[64,53,108,10,"config"],[64,60,108,17,"speed"],[64,65,108,10],[64,70,108,27,"undefined"],[64,79,107,8],[64,83,109,10,"config"],[64,90,109,17,"tension"],[64,97,109,10],[64,102,109,29,"undefined"],[64,111,107,8],[64,115,110,10,"config"],[64,122,110,17,"friction"],[64,130,110,10],[64,135,110,30,"undefined"],[64,144,106,6],[64,146,111,8],[64,254,106,6],[65,0,113,6],[65,14,113,11,"_stiffness"],[65,24,113,6],[65,27,113,24,"withDefault"],[65,39,113,36,"config"],[65,46,113,43,"stiffness"],[65,55,113,24],[65,57,113,54],[65,60,113,24],[65,61,113,6],[66,0,114,6],[66,14,114,11,"_damping"],[66,22,114,6],[66,25,114,22,"withDefault"],[66,37,114,34,"config"],[66,44,114,41,"damping"],[66,51,114,22],[66,53,114,50],[66,55,114,22],[66,56,114,6],[67,0,115,6],[67,14,115,11,"_mass"],[67,19,115,6],[67,22,115,19,"withDefault"],[67,34,115,31,"config"],[67,41,115,38,"mass"],[67,45,115,19],[67,47,115,44],[67,48,115,19],[67,49,115,6],[68,0,116,5],[68,7,101,4],[68,13,116,11],[68,17,116,15,"config"],[68,24,116,22,"bounciness"],[68,34,116,15],[68,39,116,37,"undefined"],[68,48,116,15],[68,52,116,50,"config"],[68,59,116,57,"speed"],[68,64,116,50],[68,69,116,67,"undefined"],[68,78,116,11],[68,80,116,78],[69,0,119,6,"invariant"],[69,18,120,8,"config"],[69,25,120,15,"tension"],[69,32,120,8],[69,37,120,27,"undefined"],[69,46,120,8],[69,50,121,10,"config"],[69,57,121,17,"friction"],[69,65,121,10],[69,70,121,30,"undefined"],[69,79,120,8],[69,83,122,10,"config"],[69,90,122,17,"stiffness"],[69,99,122,10],[69,104,122,31,"undefined"],[69,113,120,8],[69,117,123,10,"config"],[69,124,123,17,"damping"],[69,131,123,10],[69,136,123,29,"undefined"],[69,145,120,8],[69,149,124,10,"config"],[69,156,124,17,"mass"],[69,160,124,10],[69,165,124,26,"undefined"],[69,174,119,6],[69,176,125,8],[69,284,119,6],[70,0,127,6],[70,12,127,12,"springConfig"],[70,27,127,27,"SpringConfig"],[70,40,127,40,"fromBouncinessAndSpeed"],[70,62,127,27],[70,63,128,8,"withDefault"],[70,75,128,20,"config"],[70,82,128,27,"bounciness"],[70,92,128,8],[70,94,128,39],[70,95,128,8],[70,96,127,27],[70,98,129,8,"withDefault"],[70,110,129,20,"config"],[70,117,129,27,"speed"],[70,122,129,8],[70,124,129,34],[70,126,129,8],[70,127,127,27],[70,128,127,6],[71,0,131,6],[71,14,131,11,"_stiffness"],[71,24,131,6],[71,27,131,24,"springConfig"],[71,40,131,37,"stiffness"],[71,49,131,6],[72,0,132,6],[72,14,132,11,"_damping"],[72,22,132,6],[72,25,132,22,"springConfig"],[72,38,132,35,"damping"],[72,45,132,6],[73,0,133,6],[73,14,133,11,"_mass"],[73,19,133,6],[73,22,133,19],[73,23,133,6],[74,0,134,5],[74,7,116,11],[74,13,134,11],[75,0,137,6],[75,12,137,12,"springConfig"],[75,28,137,27,"SpringConfig"],[75,41,137,40,"fromOrigamiTensionAndFriction"],[75,70,137,27],[75,71,138,8,"withDefault"],[75,83,138,20,"config"],[75,90,138,27,"tension"],[75,97,138,8],[75,99,138,36],[75,101,138,8],[75,102,137,27],[75,104,139,8,"withDefault"],[75,116,139,20,"config"],[75,123,139,27,"friction"],[75,131,139,8],[75,133,139,37],[75,134,139,8],[75,135,137,27],[75,136,137,6],[77,0,141,6],[77,14,141,11,"_stiffness"],[77,24,141,6],[77,27,141,24,"springConfig"],[77,41,141,37,"stiffness"],[77,50,141,6],[78,0,142,6],[78,14,142,11,"_damping"],[78,22,142,6],[78,25,142,22,"springConfig"],[78,39,142,35,"damping"],[78,46,142,6],[79,0,143,6],[79,14,143,11,"_mass"],[79,19,143,6],[79,22,143,19],[79,23,143,6],[80,0,144,5],[82,0,146,4,"invariant"],[82,16,146,14],[82,22,146,19,"_stiffness"],[82,32,146,14],[82,35,146,32],[82,36,146,4],[82,38,146,35],[82,78,146,4],[83,0,147,4,"invariant"],[83,16,147,14],[83,22,147,19,"_damping"],[83,30,147,14],[83,33,147,30],[83,34,147,4],[83,36,147,33],[83,74,147,4],[84,0,148,4,"invariant"],[84,16,148,14],[84,22,148,19,"_mass"],[84,27,148,14],[84,30,148,27],[84,31,148,4],[84,33,148,30],[84,68,148,4],[85,0,83,51],[86,0,149,3],[90,51,151,31],[91,0,152,4],[91,15,152,11],[92,0,153,6,"type"],[92,16,153,12],[92,24,152,11],[93,0,154,6,"overshootClamping"],[93,29,154,25],[93,34,154,30,"_overshootClamping"],[93,52,152,11],[94,0,155,6,"restDisplacementThreshold"],[94,37,155,33],[94,42,155,38,"_restDisplacementThreshold"],[94,68,152,11],[95,0,156,6,"restSpeedThreshold"],[95,30,156,26],[95,35,156,31,"_restSpeedThreshold"],[95,54,152,11],[96,0,157,6,"stiffness"],[96,21,157,17],[96,26,157,22,"_stiffness"],[96,36,152,11],[97,0,158,6,"damping"],[97,19,158,15],[97,24,158,20,"_damping"],[97,32,152,11],[98,0,159,6,"mass"],[98,16,159,12],[98,21,159,17,"_mass"],[98,26,152,11],[99,0,160,6,"initialVelocity"],[99,27,160,23,"withDefault"],[99,39,160,35],[99,44,160,40,"_initialVelocity"],[99,60,160,23],[99,62,160,58],[99,67,160,63,"_lastVelocity"],[99,80,160,23],[99,81,152,11],[100,0,161,6,"toValue"],[100,19,161,15],[100,24,161,20,"_toValue"],[100,32,152,11],[101,0,162,6,"iterations"],[101,22,162,18],[101,27,162,23,"__iterations"],[102,0,152,11],[102,9,152,4],[103,0,164,3],[106,28,167,4,"fromValue"],[106,37],[106,39,168,4,"onUpdate"],[106,47],[106,49,169,4,"onEnd"],[106,54],[106,56,170,4,"previousAnimation"],[106,73],[106,75,171,4,"animatedValue"],[106,88],[106,90,172,10],[107,0,172,10],[109,0,173,4],[109,13,173,9,"__active"],[109,21,173,4],[109,24,173,20],[109,28,173,4],[110,0,174,4],[110,13,174,9,"_startPosition"],[110,27,174,4],[110,30,174,26,"fromValue"],[110,39,174,4],[111,0,175,4],[111,13,175,9,"_lastPosition"],[111,26,175,4],[111,29,175,25],[111,34,175,30,"_startPosition"],[111,48,175,4],[112,0,177,4],[112,13,177,9,"_onUpdate"],[112,22,177,4],[112,25,177,21,"onUpdate"],[112,33,177,4],[113,0,178,4],[113,13,178,9,"__onEnd"],[113,20,178,4],[113,23,178,19,"onEnd"],[113,28,178,4],[114,0,179,4],[114,13,179,9,"_lastTime"],[114,22,179,4],[114,25,179,21,"Date"],[114,30,179,26,"now"],[114,33,179,21],[114,35,179,4],[115,0,180,4],[115,13,180,9,"_frameTime"],[115,23,180,4],[115,26,180,22],[115,29,180,4],[117,0,182,4],[117,12,182,8,"previousAnimation"],[117,41,182,37,"SpringAnimation"],[117,56,182,4],[117,58,182,54],[118,0,183,6],[118,14,183,12,"internalState"],[118,30,183,28,"previousAnimation"],[118,48,183,46,"getInternalState"],[118,64,183,28],[118,66,183,6],[119,0,184,6],[119,15,184,11,"_lastPosition"],[119,28,184,6],[119,31,184,27,"internalState"],[119,45,184,41,"lastPosition"],[119,57,184,6],[120,0,185,6],[120,15,185,11,"_lastVelocity"],[120,28,185,6],[120,31,185,27,"internalState"],[120,45,185,41,"lastVelocity"],[120,57,185,6],[121,0,187,6],[121,15,187,11,"_initialVelocity"],[121,31,187,6],[121,34,187,30],[121,39,187,35,"_lastVelocity"],[121,52,187,6],[122,0,188,6],[122,15,188,11,"_lastTime"],[122,24,188,6],[122,27,188,23,"internalState"],[122,41,188,37,"lastTime"],[122,49,188,6],[123,0,189,5],[125,0,191,4],[125,12,191,10,"start"],[125,20,191,18],[125,29,191,10,"start"],[125,34,191,18],[125,37,191,24],[126,0,192,6],[126,14,192,10],[126,21,192,15,"_useNativeDriver"],[126,37,192,6],[126,39,192,33],[127,0,193,8],[127,19,193,13,"__startNativeAnimation"],[127,41,193,8],[127,42,193,36,"animatedValue"],[127,55,193,8],[128,0,194,7],[128,11,192,6],[128,17,194,13],[129,0,195,8],[129,19,195,13,"onUpdate"],[129,27,195,8],[130,0,196,7],[131,0,197,5],[131,9,191,4],[133,0,200,4],[133,12,200,8],[133,17,200,13,"_delay"],[133,23,200,4],[133,25,200,21],[134,0,201,6],[134,15,201,11,"_timeout"],[134,23,201,6],[134,26,201,22,"setTimeout"],[134,37,201,33,"start"],[134,42,201,22],[134,44,201,40],[134,49,201,45,"_delay"],[134,55,201,22],[134,56,201,6],[135,0,202,5],[135,9,200,4],[135,15,202,11],[136,0,203,6,"start"],[137,0,204,5],[138,0,205,3],[141,41,207,29],[142,0,208,4],[142,15,208,11],[143,0,209,6,"lastPosition"],[143,24,209,20],[143,29,209,25,"_lastPosition"],[143,42,208,11],[144,0,210,6,"lastVelocity"],[144,24,210,20],[144,29,210,25,"_lastVelocity"],[144,42,208,11],[145,0,211,6,"lastTime"],[145,20,211,16],[145,25,211,21,"_lastTime"],[146,0,208,11],[146,9,208,4],[147,0,213,3],[150,33,236,19],[151,0,241,4],[151,12,241,10,"MAX_STEPS"],[151,24,241,22],[151,26,241,4],[152,0,242,4],[152,12,242,8,"now"],[152,18,242,14,"Date"],[152,23,242,19,"now"],[152,26,242,14],[152,28,242,4],[154,0,243,4],[154,12,243,8,"now"],[154,18,243,14],[154,23,243,19,"_lastTime"],[154,32,243,14],[154,35,243,31,"MAX_STEPS"],[154,44,243,4],[154,46,243,42],[155,0,244,6,"now"],[155,16,244,12],[155,21,244,17,"_lastTime"],[155,30,244,12],[155,33,244,29,"MAX_STEPS"],[155,42,244,6],[156,0,245,5],[158,0,247,4],[158,12,247,10,"deltaTime"],[158,24,247,22],[158,25,247,23,"now"],[158,31,247,29],[158,36,247,34,"_lastTime"],[158,45,247,22],[158,49,247,47],[158,53,247,4],[159,0,248,4],[159,13,248,9,"_frameTime"],[159,23,248,4],[159,27,248,23,"deltaTime"],[159,36,248,4],[160,0,250,4],[160,12,250,10,"c"],[160,16,250,22],[160,21,250,27,"_damping"],[160,29,250,4],[161,0,251,4],[161,12,251,10,"m"],[161,16,251,22],[161,21,251,27,"_mass"],[161,26,251,4],[162,0,252,4],[162,12,252,10,"k"],[162,16,252,22],[162,21,252,27,"_stiffness"],[162,31,252,4],[163,0,253,4],[163,12,253,10,"v0"],[163,17,253,23],[163,18,253,24],[163,23,253,29,"_initialVelocity"],[163,39,253,4],[164,0,255,4],[164,12,255,10,"zeta"],[164,19,255,17,"c"],[164,24,255,22],[164,28,255,26,"Math"],[164,33,255,31,"sqrt"],[164,37,255,26],[164,38,255,36,"k"],[164,42,255,40,"m"],[164,43,255,26],[164,44,255,17],[164,45,255,4],[165,0,256,4],[165,12,256,10,"omega0"],[165,21,256,19,"Math"],[165,26,256,24,"sqrt"],[165,30,256,19],[165,31,256,29,"k"],[165,35,256,33,"m"],[165,36,256,19],[165,37,256,4],[166,0,257,4],[166,12,257,10,"omega1"],[166,21,257,19,"omega0"],[166,30,257,28,"Math"],[166,35,257,33,"sqrt"],[166,39,257,28],[166,40,257,38],[166,46,257,44,"zeta"],[166,53,257,51,"zeta"],[166,57,257,28],[166,58,257,4],[167,0,258,4],[167,12,258,10,"x0"],[167,17,258,15],[167,22,258,20,"_toValue"],[167,30,258,15],[167,33,258,31],[167,38,258,36,"_startPosition"],[167,52,258,4],[168,0,260,4],[168,12,260,8,"position"],[168,23,260,19],[168,26,260,4],[169,0,261,4],[169,12,261,8,"velocity"],[169,23,261,19],[169,26,261,4],[170,0,262,4],[170,12,262,10,"t"],[170,16,262,14],[170,21,262,19,"_frameTime"],[170,31,262,4],[172,0,263,4],[172,12,263,8,"zeta"],[172,19,263,15],[172,20,263,4],[172,22,263,18],[173,0,265,6],[173,14,265,12,"envelope"],[173,25,265,23,"Math"],[173,30,265,28,"exp"],[173,33,265,23],[173,34,265,32],[173,35,265,33,"zeta"],[173,39,265,32],[173,42,265,40,"omega0"],[173,48,265,32],[173,51,265,49,"t"],[173,52,265,23],[173,53,265,6],[174,0,266,6,"position"],[174,21,267,8],[174,26,267,13,"_toValue"],[174,34,267,8],[174,37,268,8,"envelope"],[174,49,269,12],[174,50,269,13,"v0"],[174,55,269,18,"zeta"],[174,62,269,25,"omega0"],[174,68,269,18],[174,71,269,34,"x0"],[174,73,269,12],[174,77,269,40,"omega1"],[174,83,269,11],[174,86,269,50,"Math"],[174,91,269,55,"sin"],[174,94,269,50],[174,95,269,59,"omega1"],[174,104,269,68,"t"],[174,105,269,50],[174,106,269,11],[174,109,270,12,"x0"],[174,114,270,17,"Math"],[174,119,270,22,"cos"],[174,122,270,17],[174,123,270,26,"omega1"],[174,132,270,35,"t"],[174,133,270,17],[174,134,268,8],[174,135,266,6],[175,0,273,6,"velocity"],[175,21,274,8,"zeta"],[175,28,275,10,"omega0"],[175,34,274,8],[175,37,276,10,"envelope"],[175,45,274,8],[175,49,277,12,"Math"],[175,54,277,17,"sin"],[175,57,277,12],[175,58,277,21,"omega1"],[175,67,277,30,"t"],[175,68,277,12],[175,73,277,36,"v0"],[175,78,277,41,"zeta"],[175,85,277,48,"omega0"],[175,91,277,41],[175,94,277,57,"x0"],[175,96,277,12],[175,97,277,11],[175,100,277,64,"omega1"],[175,106,277,11],[175,109,278,12,"x0"],[175,114,278,17,"Math"],[175,119,278,22,"cos"],[175,122,278,17],[175,123,278,26,"omega1"],[175,132,278,35,"t"],[175,133,278,17],[175,134,274,8],[175,138,279,8,"envelope"],[175,150,280,11,"Math"],[175,155,280,16,"cos"],[175,158,280,11],[175,159,280,20,"omega1"],[175,168,280,29,"t"],[175,169,280,11],[175,174,280,35,"v0"],[175,179,280,40,"zeta"],[175,186,280,47,"omega0"],[175,192,280,40],[175,195,280,56,"x0"],[175,197,280,11],[175,201,281,12,"omega1"],[175,210,281,21,"x0"],[175,212,281,12],[175,215,281,26,"Math"],[175,220,281,31,"sin"],[175,223,281,26],[175,224,281,35,"omega1"],[175,233,281,44,"t"],[175,234,281,26],[175,235,279,8],[175,236,273,6],[176,0,282,5],[176,9,263,4],[176,15,282,11],[177,0,284,6],[177,14,284,12,"envelope"],[177,26,284,23,"Math"],[177,31,284,28,"exp"],[177,34,284,23],[177,35,284,32],[177,36,284,33,"omega0"],[177,42,284,32],[177,45,284,42,"t"],[177,46,284,23],[177,47,284,6],[179,0,285,6,"position"],[179,21,285,17],[179,26,285,22,"_toValue"],[179,34,285,17],[179,37,285,33,"envelope"],[179,50,285,45,"x0"],[179,55,285,50],[179,56,285,51,"v0"],[179,61,285,56,"omega0"],[179,70,285,65,"x0"],[179,72,285,50],[179,76,285,71,"t"],[179,77,285,33],[179,78,285,6],[180,0,286,6,"velocity"],[180,21,287,8,"envelope"],[180,34,287,20,"v0"],[180,40,287,26,"t"],[180,44,287,30,"omega0"],[180,50,287,26],[180,53,287,39],[180,54,287,20],[180,58,287,44,"t"],[180,62,287,48,"x0"],[180,64,287,44],[180,68,287,54,"omega0"],[180,77,287,63,"omega0"],[180,83,287,44],[180,84,287,8],[180,85,286,6],[181,0,288,5],[183,0,290,4],[183,13,290,9,"_lastTime"],[183,22,290,4],[183,25,290,21,"now"],[183,28,290,4],[184,0,291,4],[184,13,291,9,"_lastPosition"],[184,26,291,4],[184,29,291,25,"position"],[184,37,291,4],[185,0,292,4],[185,13,292,9,"_lastVelocity"],[185,26,292,4],[185,29,292,25,"velocity"],[185,37,292,4],[187,0,294,4],[187,13,294,9,"_onUpdate"],[187,22,294,4],[187,23,294,19,"position"],[187,31,294,4],[189,0,295,4],[189,12,295,8],[189,13,295,9],[189,18,295,14,"__active"],[189,26,295,4],[189,28,295,24],[190,0,297,6],[191,0,298,5],[193,0,301,4],[193,12,301,8,"isOvershooting"],[193,29,301,25],[193,34,301,4],[195,0,302,4],[195,12,302,8],[195,17,302,13,"_overshootClamping"],[195,35,302,8],[195,39,302,35],[195,44,302,40,"_stiffness"],[195,54,302,35],[195,59,302,55],[195,60,302,4],[195,62,302,58],[196,0,303,6],[196,14,303,10],[196,19,303,15,"_startPosition"],[196,33,303,10],[196,36,303,32],[196,41,303,37,"_toValue"],[196,49,303,6],[196,51,303,47],[197,0,304,8,"isOvershooting"],[197,29,304,25,"position"],[197,40,304,36],[197,45,304,41,"_toValue"],[197,53,304,8],[198,0,305,7],[198,11,303,6],[198,17,305,13],[199,0,306,8,"isOvershooting"],[199,29,306,25,"position"],[199,40,306,36],[199,45,306,41,"_toValue"],[199,53,306,8],[200,0,307,7],[201,0,308,5],[203,0,309,4],[203,12,309,10,"isVelocity"],[203,25,309,23,"Math"],[203,30,309,28,"abs"],[203,33,309,23],[203,34,309,32,"velocity"],[203,42,309,23],[203,47,309,45],[203,52,309,50,"_restSpeedThreshold"],[203,71,309,4],[205,0,310,4],[205,12,310,8,"isDisplacement"],[205,29,310,25],[205,33,310,4],[207,0,311,4],[207,12,311,8],[207,17,311,13,"_stiffness"],[207,27,311,8],[207,32,311,28],[207,33,311,4],[207,35,311,31],[208,0,312,6,"isDisplacement"],[208,27,313,8,"Math"],[208,32,313,13,"abs"],[208,35,313,8],[208,36,313,17],[208,41,313,22,"_toValue"],[208,49,313,17],[208,52,313,33,"position"],[208,60,313,8],[208,65,313,46],[208,70,313,51,"_restDisplacementThreshold"],[208,96,312,6],[209,0,314,5],[211,0,316,4],[211,12,316,8,"isOvershooting"],[211,30,316,27,"isVelocity"],[211,44,316,41,"isDisplacement"],[211,58,316,4],[211,60,316,58],[212,0,317,6],[212,14,317,10],[212,19,317,15,"_stiffness"],[212,29,317,10],[212,34,317,30],[212,35,317,6],[212,37,317,33],[213,0,319,8],[213,17,319,13,"_lastPosition"],[213,30,319,8],[213,33,319,29],[213,38,319,34,"_toValue"],[213,46,319,8],[214,0,320,8],[214,17,320,13,"_lastVelocity"],[214,30,320,8],[214,33,320,29],[214,34,320,8],[216,0,321,8],[216,17,321,13,"_onUpdate"],[216,26,321,8],[216,27,321,23],[216,32,321,28,"_toValue"],[216,40,321,8],[217,0,322,7],[219,0,324,6],[219,15,324,11,"__debouncedOnEnd"],[219,31,324,6],[219,32,324,28],[220,0,324,29,"finished"],[220,22,324,39],[221,0,324,28],[221,11,324,6],[223,0,325,6],[224,0,326,5],[226,0,327,4],[226,13,327,9,"_animationFrame"],[226,28,327,4],[226,31,327,27,"requestAnimationFrame"],[226,53,327,49],[226,58,327,54,"onUpdate"],[226,66,327,49],[226,67,327,63,"bind"],[226,71,327,49],[226,72,327,68],[226,76,327,49],[226,77,327,27],[226,78,327,4],[227,0,328,3],[230,29,330,15],[231,0,331,4],[233,0,332,4],[233,13,332,9,"__active"],[233,21,332,4],[233,24,332,20],[233,29,332,4],[234,0,333,4,"clearTimeout"],[234,21,333,17],[234,26,333,22,"_timeout"],[234,34,333,4],[235,0,334,4,"global"],[235,15,334,11,"cancelAnimationFrame"],[235,35,334,4],[235,36,334,32],[235,41,334,37,"_animationFrame"],[235,56,334,4],[237,0,335,4],[237,13,335,9,"__debouncedOnEnd"],[237,29,335,4],[237,30,335,26],[238,0,335,27,"finished"],[238,20,335,37],[239,0,335,26],[239,9,335,4],[240,0,336,3],[246,4,61,30,"Animation"],[246,13],[248,0,339,0,"module"],[248,9,339,7,"exports"],[248,16,339,0],[248,19,339,17,"SpringAnimation"],[248,34,339,0]]},"type":"js/module"}]}