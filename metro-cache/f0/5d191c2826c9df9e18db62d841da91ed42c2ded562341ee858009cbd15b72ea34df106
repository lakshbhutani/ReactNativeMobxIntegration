{"dependencies":[{"name":"react","isAsync":false},{"name":"./../../../react-transform-hmr/lib/index.js","isAsync":false},{"name":"react-native","isAsync":false},{"name":"react-native-safe-area-view","isAsync":false},{"name":"./CrossFadeIcon","isAsync":false},{"name":"../utils/withDimensions","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _reactNativeSafeAreaView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"react-native-safe-area-view\"));\n\n  var _CrossFadeIcon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./CrossFadeIcon\"));\n\n  var _withDimensions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"../utils/withDimensions\"));\n\n  var _jsxFileName = \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/react-navigation-tabs/dist/views/BottomTabBar.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  var _components = {\n    TouchableWithoutFeedbackWrapper: {\n      displayName: \"TouchableWithoutFeedbackWrapper\"\n    },\n    TabBarBottom: {\n      displayName: \"TabBarBottom\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/react-navigation-tabs/dist/views/BottomTabBar.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var majorVersion = parseInt(_reactNative.Platform.Version, 10);\n  var isIos = _reactNative.Platform.OS === 'ios';\n  var isIOS11 = majorVersion >= 11 && isIos;\n  var DEFAULT_MAX_TAB_ITEM_WIDTH = 125;\n\n  var TouchableWithoutFeedbackWrapper = function (_React$Component) {\n    function TouchableWithoutFeedbackWrapper() {\n      _classCallCheck(this, TouchableWithoutFeedbackWrapper);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(TouchableWithoutFeedbackWrapper).apply(this, arguments));\n    }\n\n    _createClass(TouchableWithoutFeedbackWrapper, [{\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            onPress = _this$props.onPress,\n            testID = _this$props.testID,\n            accessibilityLabel = _this$props.accessibilityLabel,\n            props = _objectWithoutProperties(_this$props, [\"onPress\", \"testID\", \"accessibilityLabel\"]);\n\n        return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {\n          onPress: onPress,\n          testID: testID,\n          accessibilityLabel: accessibilityLabel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          }\n        }, _react.default.createElement(_reactNative.View, _extends({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          }\n        })));\n      }\n    }]);\n\n    _inherits(TouchableWithoutFeedbackWrapper, _React$Component);\n\n    return TouchableWithoutFeedbackWrapper;\n  }(_react.default.Component);\n\n  TouchableWithoutFeedbackWrapper = _wrapComponent(\"TouchableWithoutFeedbackWrapper\")(TouchableWithoutFeedbackWrapper);\n\n  var TabBarBottom = function (_React$Component2) {\n    function TabBarBottom() {\n      var _getPrototypeOf2;\n\n      var _temp, _this;\n\n      _classCallCheck(this, TabBarBottom);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TabBarBottom)).call.apply(_getPrototypeOf2, [this].concat(args))), _this._renderLabel = function (_ref) {\n        var route = _ref.route,\n            focused = _ref.focused;\n        var _this$props2 = _this.props,\n            activeTintColor = _this$props2.activeTintColor,\n            inactiveTintColor = _this$props2.inactiveTintColor,\n            labelStyle = _this$props2.labelStyle,\n            showLabel = _this$props2.showLabel,\n            showIcon = _this$props2.showIcon,\n            allowFontScaling = _this$props2.allowFontScaling;\n\n        if (showLabel === false) {\n          return null;\n        }\n\n        var label = _this.props.getLabelText({\n          route: route\n        });\n\n        var tintColor = focused ? activeTintColor : inactiveTintColor;\n\n        if (typeof label === 'string') {\n          return _react.default.createElement(_reactNative.Animated.Text, {\n            numberOfLines: 1,\n            style: [styles.label, {\n              color: tintColor\n            }, showIcon && _this._shouldUseHorizontalLabels() ? styles.labelBeside : styles.labelBeneath, styles.labelBeneath, labelStyle],\n            allowFontScaling: allowFontScaling,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            }\n          }, label);\n        }\n\n        if (typeof label === 'function') {\n          return label({\n            route: route,\n            focused: focused,\n            tintColor: tintColor\n          });\n        }\n\n        return label;\n      }, _this._renderIcon = function (_ref2) {\n        var route = _ref2.route,\n            focused = _ref2.focused;\n        var _this$props3 = _this.props,\n            navigation = _this$props3.navigation,\n            activeTintColor = _this$props3.activeTintColor,\n            inactiveTintColor = _this$props3.inactiveTintColor,\n            renderIcon = _this$props3.renderIcon,\n            showIcon = _this$props3.showIcon,\n            showLabel = _this$props3.showLabel;\n\n        if (showIcon === false) {\n          return null;\n        }\n\n        var horizontal = _this._shouldUseHorizontalLabels();\n\n        var activeOpacity = focused ? 1 : 0;\n        var inactiveOpacity = focused ? 0 : 1;\n        return _react.default.createElement(_CrossFadeIcon.default, {\n          route: route,\n          navigation: navigation,\n          activeOpacity: activeOpacity,\n          inactiveOpacity: inactiveOpacity,\n          activeTintColor: activeTintColor,\n          inactiveTintColor: inactiveTintColor,\n          renderIcon: renderIcon,\n          style: [styles.iconWithExplicitHeight, showLabel === false && !horizontal && styles.iconWithoutLabel, showLabel !== false && !horizontal && styles.iconWithLabel],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          }\n        });\n      }, _this._shouldUseHorizontalLabels = function () {\n        var routes = _this.props.navigation.state.routes;\n        var _this$props4 = _this.props,\n            isLandscape = _this$props4.isLandscape,\n            dimensions = _this$props4.dimensions,\n            adaptive = _this$props4.adaptive,\n            tabStyle = _this$props4.tabStyle;\n\n        if (!adaptive) {\n          return false;\n        }\n\n        if (_reactNative.Platform.isPad) {\n          var maxTabItemWidth = DEFAULT_MAX_TAB_ITEM_WIDTH;\n\n          var flattenedStyle = _reactNative.StyleSheet.flatten(tabStyle);\n\n          if (flattenedStyle) {\n            if (typeof flattenedStyle.width === 'number') {\n              maxTabItemWidth = flattenedStyle.width;\n            } else if (typeof flattenedStyle.maxWidth === 'number') {\n              maxTabItemWidth = flattenedStyle.maxWidth;\n            }\n          }\n\n          return routes.length * maxTabItemWidth <= dimensions.width;\n        } else {\n          return isLandscape;\n        }\n      }, _temp));\n    }\n\n    _createClass(TabBarBottom, [{\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        var _this$props5 = this.props,\n            navigation = _this$props5.navigation,\n            activeBackgroundColor = _this$props5.activeBackgroundColor,\n            inactiveBackgroundColor = _this$props5.inactiveBackgroundColor,\n            onTabPress = _this$props5.onTabPress,\n            safeAreaInset = _this$props5.safeAreaInset,\n            style = _this$props5.style,\n            tabStyle = _this$props5.tabStyle;\n        var routes = navigation.state.routes;\n        var tabBarStyle = [styles.tabBar, this._shouldUseHorizontalLabels() && !_reactNative.Platform.isPad ? styles.tabBarCompact : styles.tabBarRegular, style];\n        return _react.default.createElement(_reactNativeSafeAreaView.default, {\n          style: tabBarStyle,\n          forceInset: safeAreaInset,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          }\n        }, routes.map(function (route, index) {\n          var focused = index === navigation.state.index;\n          var scene = {\n            route: route,\n            focused: focused\n          };\n\n          var accessibilityLabel = _this2.props.getAccessibilityLabel({\n            route: route\n          });\n\n          var testID = _this2.props.getTestID({\n            route: route\n          });\n\n          var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n          var ButtonComponent = _this2.props.getButtonComponent({\n            route: route\n          }) || TouchableWithoutFeedbackWrapper;\n          return _react.default.createElement(ButtonComponent, {\n            key: route.key,\n            onPress: function onPress() {\n              return onTabPress({\n                route: route\n              });\n            },\n            testID: testID,\n            accessibilityLabel: accessibilityLabel,\n            style: [styles.tab, {\n              backgroundColor: backgroundColor\n            }, _this2._shouldUseHorizontalLabels() ? styles.tabLandscape : styles.tabPortrait, tabStyle],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 143\n            }\n          }, _this2._renderIcon(scene), _this2._renderLabel(scene));\n        }));\n      }\n    }]);\n\n    _inherits(TabBarBottom, _React$Component2);\n\n    return TabBarBottom;\n  }(_react.default.Component);\n\n  TabBarBottom.defaultProps = {\n    activeTintColor: '#3478f6',\n    activeBackgroundColor: 'transparent',\n    inactiveTintColor: '#929292',\n    inactiveBackgroundColor: 'transparent',\n    showLabel: true,\n    showIcon: true,\n    allowFontScaling: true,\n    adaptive: isIOS11,\n    safeAreaInset: {\n      bottom: 'always',\n      top: 'never'\n    }\n  };\n  TabBarBottom = _wrapComponent(\"TabBarBottom\")(TabBarBottom);\n  var DEFAULT_HEIGHT = 49;\n  var COMPACT_HEIGHT = 29;\n\n  var styles = _reactNative.StyleSheet.create({\n    tabBar: {\n      backgroundColor: '#F7F7F7',\n      borderTopWidth: _reactNative.StyleSheet.hairlineWidth,\n      borderTopColor: 'rgba(0, 0, 0, .3)',\n      flexDirection: 'row'\n    },\n    tabBarCompact: {\n      height: COMPACT_HEIGHT\n    },\n    tabBarRegular: {\n      height: DEFAULT_HEIGHT\n    },\n    tab: {\n      flex: 1,\n      alignItems: isIos ? 'center' : 'stretch'\n    },\n    tabPortrait: {\n      justifyContent: 'flex-end',\n      flexDirection: 'column'\n    },\n    tabLandscape: {\n      justifyContent: 'center',\n      flexDirection: 'row'\n    },\n    iconWithoutLabel: {\n      flex: 1\n    },\n    iconWithLabel: {\n      flex: 1\n    },\n    iconWithExplicitHeight: {\n      height: _reactNative.Platform.isPad ? DEFAULT_HEIGHT : COMPACT_HEIGHT\n    },\n    label: {\n      textAlign: 'center',\n      backgroundColor: 'transparent'\n    },\n    labelBeneath: {\n      fontSize: 10,\n      marginBottom: 1.5\n    },\n    labelBeside: {\n      fontSize: 13,\n      marginLeft: 20\n    }\n  });\n\n  var _default2 = (0, _withDimensions.default)(TabBarBottom);\n\n  exports.default = _default2;\n});","map":[[7,0,1,0],[11,0,2,0],[13,0,3,0],[15,0,5,0],[17,0,6,0],[65,0,8,0],[65,6,8,6,"majorVersion"],[65,21,8,21,"parseInt"],[65,30,8,30,"Platform"],[65,52,8,39,"Version"],[65,59,8,21],[65,61,8,48],[65,63,8,21],[65,64,8,0],[66,0,9,0],[66,6,9,6,"isIos"],[66,14,9,14,"Platform"],[66,36,9,23,"OS"],[66,38,9,14],[66,43,9,30],[66,48,9,0],[67,0,10,0],[67,6,10,6,"isIOS11"],[67,16,10,16,"majorVersion"],[67,32,10,32],[67,34,10,16],[67,38,10,38,"isIos"],[67,43,10,0],[68,0,12,0],[68,6,12,6,"DEFAULT_MAX_TAB_ITEM_WIDTH"],[68,35,12,35],[68,38,12,0],[70,6,14,6,"TouchableWithoutFeedbackWrapper"],[70,37],[79,31,15,11],[80,0,15,11],[80,26,16,62],[80,31,16,67,"props"],[80,36,15,11],[81,0,15,11],[81,12,16,12,"onPress"],[81,19,15,11],[81,34,16,12,"onPress"],[81,41,15,11],[82,0,15,11],[82,12,16,21,"testID"],[82,18,15,11],[82,33,16,21,"testID"],[82,39,15,11],[83,0,15,11],[83,12,16,29,"accessibilityLabel"],[83,30,15,11],[83,45,16,29,"accessibilityLabel"],[83,63,15,11],[84,0,15,11],[84,12,16,52,"props"],[84,17,15,11],[86,0,18,4],[86,15,18,11],[86,44,18,12],[86,81,18,11],[87,0,18,37],[87,19,18,46,"onPress"],[87,26,18,11],[88,0,18,55],[88,18,18,63,"testID"],[88,24,18,11],[89,0,18,71],[89,30,18,91,"accessibilityLabel"],[89,48,18,11],[90,0,18,11],[91,0,18,11],[92,0,18,11],[93,0,18,11],[94,0,18,11],[94,11,19,8],[94,40,19,9],[94,57,19,8],[94,72,19,18,"props"],[94,77,19,8],[95,0,19,8],[96,0,19,8],[97,0,19,8],[98,0,19,8],[99,0,19,8],[99,11,18,11],[99,12,18,4],[100,0,21,3],[106,4,14,46,"React"],[106,19,14,52,"Component"],[106,28],[110,6,24,6,"TabBarBottom"],[110,18],[122,206,37,2,"_renderLabel"],[122,218],[122,221,37,17],[122,237,37,41],[123,0,37,41],[123,12,37,20,"route"],[123,17,37,41],[123,25,37,20,"route"],[123,30,37,41],[124,0,37,41],[124,12,37,27,"focused"],[124,19,37,41],[124,27,37,27,"focused"],[124,34,37,41],[125,0,37,41],[125,27,45,8],[125,33,45,13,"props"],[125,38,37,41],[126,0,37,41],[126,12,39,6,"activeTintColor"],[126,27,37,41],[126,43,39,6,"activeTintColor"],[126,58,37,41],[127,0,37,41],[127,12,40,6,"inactiveTintColor"],[127,29,37,41],[127,45,40,6,"inactiveTintColor"],[127,62,37,41],[128,0,37,41],[128,12,41,6,"labelStyle"],[128,22,37,41],[128,38,41,6,"labelStyle"],[128,48,37,41],[129,0,37,41],[129,12,42,6,"showLabel"],[129,21,37,41],[129,37,42,6,"showLabel"],[129,46,37,41],[130,0,37,41],[130,12,43,6,"showIcon"],[130,20,37,41],[130,36,43,6,"showIcon"],[130,44,37,41],[131,0,37,41],[131,12,44,6,"allowFontScaling"],[131,28,37,41],[131,44,44,6,"allowFontScaling"],[131,60,37,41],[133,0,47,4],[133,12,47,8,"showLabel"],[133,26,47,22],[133,31,47,4],[133,33,47,29],[134,0,48,6],[134,17,48,13],[134,21,48,6],[135,0,49,5],[137,0,51,4],[137,12,51,10,"label"],[137,20,51,18],[137,26,51,23,"props"],[137,31,51,18],[137,32,51,29,"getLabelText"],[137,44,51,18],[137,45,51,42],[138,0,51,44,"route"],[139,0,51,42],[139,9,51,18],[139,10,51,4],[141,0,52,4],[141,12,52,10,"tintColor"],[141,24,52,22,"focused"],[141,34,52,32,"activeTintColor"],[141,49,52,22],[141,52,52,50,"inactiveTintColor"],[141,69,52,4],[143,0,54,4],[143,12,54,8],[143,19,54,15,"label"],[143,24,54,8],[143,29,54,25],[143,37,54,4],[143,39,54,35],[144,0,55,6],[144,17,55,13],[144,46,55,14],[144,67,55,13],[144,68,55,23],[144,72,55,13],[145,0,55,28],[145,27,55,43],[145,28,55,13],[146,0,55,46],[146,19,55,53],[146,20,55,54,"styles"],[146,27,55,61,"label"],[146,32,55,53],[146,34,55,68],[147,0,55,70,"color"],[147,21,55,77,"tintColor"],[148,0,55,68],[148,13,55,53],[148,15,55,90,"showIcon"],[148,27,55,102],[148,33,55,107,"_shouldUseHorizontalLabels"],[148,59,55,102],[148,61,55,90],[148,64,55,138,"styles"],[148,71,55,145,"labelBeside"],[148,82,55,90],[148,85,55,159,"styles"],[148,92,55,166,"labelBeneath"],[148,104,55,53],[148,106,55,180,"styles"],[148,113,55,187,"labelBeneath"],[148,125,55,53],[148,127,55,201,"labelStyle"],[148,137,55,53],[148,138,55,13],[149,0,55,214],[149,30,55,232,"allowFontScaling"],[149,46,55,13],[150,0,55,13],[151,0,55,13],[152,0,55,13],[153,0,55,13],[154,0,55,13],[154,13,56,11,"label"],[154,18,55,13],[154,19,55,6],[155,0,58,5],[157,0,60,4],[157,12,60,8],[157,19,60,15,"label"],[157,24,60,8],[157,29,60,25],[157,39,60,4],[157,41,60,37],[158,0,61,6],[158,17,61,13,"label"],[158,23,61,19],[159,0,61,21,"route"],[159,24,61,19],[160,0,61,28,"focused"],[160,28,61,19],[161,0,61,37,"tintColor"],[162,0,61,19],[162,11,61,13],[162,12,61,6],[163,0,62,5],[165,0,64,4],[165,15,64,11,"label"],[165,20,64,4],[166,0,65,3],[166,7],[166,15,67,2,"_renderIcon"],[166,26],[166,29,67,16],[166,46,67,40],[167,0,67,40],[167,12,67,19,"route"],[167,17,67,40],[167,26,67,19,"route"],[167,31,67,40],[168,0,67,40],[168,12,67,26,"focused"],[168,19,67,40],[168,28,67,26,"focused"],[168,35,67,40],[169,0,67,40],[169,27,75,8],[169,33,75,13,"props"],[169,38,67,40],[170,0,67,40],[170,12,69,6,"navigation"],[170,22,67,40],[170,38,69,6,"navigation"],[170,48,67,40],[171,0,67,40],[171,12,70,6,"activeTintColor"],[171,27,67,40],[171,43,70,6,"activeTintColor"],[171,58,67,40],[172,0,67,40],[172,12,71,6,"inactiveTintColor"],[172,29,67,40],[172,45,71,6,"inactiveTintColor"],[172,62,67,40],[173,0,67,40],[173,12,72,6,"renderIcon"],[173,22,67,40],[173,38,72,6,"renderIcon"],[173,48,67,40],[174,0,67,40],[174,12,73,6,"showIcon"],[174,20,67,40],[174,36,73,6,"showIcon"],[174,44,67,40],[175,0,67,40],[175,12,74,6,"showLabel"],[175,21,67,40],[175,37,74,6,"showLabel"],[175,46,67,40],[177,0,76,4],[177,12,76,8,"showIcon"],[177,25,76,21],[177,30,76,4],[177,32,76,28],[178,0,77,6],[178,17,77,13],[178,21,77,6],[179,0,78,5],[181,0,80,4],[181,12,80,10,"horizontal"],[181,25,80,23],[181,31,80,28,"_shouldUseHorizontalLabels"],[181,57,80,23],[181,59,80,4],[183,0,82,4],[183,12,82,10,"activeOpacity"],[183,28,82,26,"focused"],[183,38,82,36],[183,39,82,26],[183,42,82,40],[183,43,82,4],[184,0,83,4],[184,12,83,10,"inactiveOpacity"],[184,30,83,28,"focused"],[184,40,83,38],[184,41,83,28],[184,44,83,42],[184,45,83,4],[185,0,85,4],[185,15,85,11],[185,44,85,12],[185,66,85,11],[186,0,85,26],[186,17,85,33,"route"],[186,22,85,11],[187,0,85,40],[187,22,85,52,"navigation"],[187,32,85,11],[188,0,85,64],[188,25,85,79,"activeOpacity"],[188,38,85,11],[189,0,85,94],[189,27,85,111,"inactiveOpacity"],[189,42,85,11],[190,0,85,128],[190,27,85,145,"activeTintColor"],[190,42,85,11],[191,0,85,162],[191,29,85,181,"inactiveTintColor"],[191,46,85,11],[192,0,85,200],[192,22,85,212,"renderIcon"],[192,32,85,11],[193,0,85,224],[193,17,85,231],[193,18,85,232,"styles"],[193,25,85,239,"iconWithExplicitHeight"],[193,47,85,231],[193,49,85,263,"showLabel"],[193,63,85,277],[193,68,85,263],[193,72,85,286],[193,73,85,287,"horizontal"],[193,83,85,263],[193,87,85,301,"styles"],[193,94,85,308,"iconWithoutLabel"],[193,110,85,231],[193,112,85,326,"showLabel"],[193,126,85,340],[193,131,85,326],[193,135,85,349],[193,136,85,350,"horizontal"],[193,146,85,326],[193,150,85,364,"styles"],[193,157,85,371,"iconWithLabel"],[193,170,85,231],[193,171,85,11],[194,0,85,11],[195,0,85,11],[196,0,85,11],[197,0,85,11],[198,0,85,11],[198,10,85,4],[199,0,86,3],[199,7],[199,15,88,2,"_shouldUseHorizontalLabels"],[199,41],[199,44,88,31],[199,56,88,37],[200,0,88,37],[200,12,89,12,"routes"],[200,18,88,37],[200,21,89,23],[200,27,89,28,"props"],[200,32,89,23],[200,33,89,34,"navigation"],[200,43,89,23],[200,44,89,45,"state"],[200,49,88,37],[200,50,89,12,"routes"],[200,56,88,37],[201,0,88,37],[201,27,90,60],[201,33,90,65,"props"],[201,38,88,37],[202,0,88,37],[202,12,90,12,"isLandscape"],[202,23,88,37],[202,39,90,12,"isLandscape"],[202,50,88,37],[203,0,88,37],[203,12,90,25,"dimensions"],[203,22,88,37],[203,38,90,25,"dimensions"],[203,48,88,37],[204,0,88,37],[204,12,90,37,"adaptive"],[204,20,88,37],[204,36,90,37,"adaptive"],[204,44,88,37],[205,0,88,37],[205,12,90,47,"tabStyle"],[205,20,88,37],[205,36,90,47,"tabStyle"],[205,44,88,37],[207,0,92,4],[207,12,92,8],[207,13,92,9,"adaptive"],[207,21,92,4],[207,23,92,19],[208,0,93,6],[208,17,93,13],[208,22,93,6],[209,0,94,5],[211,0,96,4],[211,12,96,8,"Platform"],[211,34,96,17,"isPad"],[211,39,96,4],[211,41,96,24],[212,0,97,6],[212,14,97,10,"maxTabItemWidth"],[212,32,97,28,"DEFAULT_MAX_TAB_ITEM_WIDTH"],[212,58,97,6],[214,0,99,6],[214,14,99,12,"flattenedStyle"],[214,31,99,29,"StyleSheet"],[214,55,99,40,"flatten"],[214,62,99,29],[214,63,99,48,"tabStyle"],[214,71,99,29],[214,72,99,6],[216,0,101,6],[216,14,101,10,"flattenedStyle"],[216,28,101,6],[216,30,101,26],[217,0,102,8],[217,16,102,12],[217,23,102,19,"flattenedStyle"],[217,38,102,34,"width"],[217,43,102,12],[217,48,102,44],[217,56,102,8],[217,58,102,54],[218,0,103,10,"maxTabItemWidth"],[218,32,103,28,"flattenedStyle"],[218,47,103,43,"width"],[218,52,103,10],[219,0,104,9],[219,13,102,8],[219,19,104,15],[219,23,104,19],[219,30,104,26,"flattenedStyle"],[219,45,104,41,"maxWidth"],[219,53,104,19],[219,58,104,54],[219,66,104,15],[219,68,104,64],[220,0,105,10,"maxTabItemWidth"],[220,32,105,28,"flattenedStyle"],[220,47,105,43,"maxWidth"],[220,55,105,10],[221,0,106,9],[222,0,107,7],[224,0,109,6],[224,17,109,13,"routes"],[224,24,109,20,"length"],[224,30,109,13],[224,33,109,29,"maxTabItemWidth"],[224,48,109,13],[224,52,109,48,"dimensions"],[224,63,109,59,"width"],[224,68,109,6],[225,0,110,5],[225,9,96,4],[225,15,110,11],[226,0,111,6],[226,17,111,13,"isLandscape"],[226,28,111,6],[227,0,112,5],[228,0,113,3],[228,7],[233,31,115,11],[234,0,115,11],[236,0,115,11],[236,27,124,8],[236,32,124,13,"props"],[236,37,115,11],[237,0,115,11],[237,12,117,6,"navigation"],[237,22,115,11],[237,38,117,6,"navigation"],[237,48,115,11],[238,0,115,11],[238,12,118,6,"activeBackgroundColor"],[238,33,115,11],[238,49,118,6,"activeBackgroundColor"],[238,70,115,11],[239,0,115,11],[239,12,119,6,"inactiveBackgroundColor"],[239,35,115,11],[239,51,119,6,"inactiveBackgroundColor"],[239,74,115,11],[240,0,115,11],[240,12,120,6,"onTabPress"],[240,22,115,11],[240,38,120,6,"onTabPress"],[240,48,115,11],[241,0,115,11],[241,12,121,6,"safeAreaInset"],[241,25,115,11],[241,41,121,6,"safeAreaInset"],[241,54,115,11],[242,0,115,11],[242,12,122,6,"style"],[242,17,115,11],[242,33,122,6,"style"],[242,38,115,11],[243,0,115,11],[243,12,123,6,"tabStyle"],[243,20,115,11],[243,36,123,6,"tabStyle"],[243,44,115,11],[244,0,115,11],[244,12,126,12,"routes"],[244,18,115,11],[244,21,126,23,"navigation"],[244,32,126,34,"state"],[244,37,115,11],[244,38,126,12,"routes"],[244,44,115,11],[245,0,128,4],[245,12,128,10,"tabBarStyle"],[245,26,128,24],[245,27,128,25,"styles"],[245,34,128,32,"tabBar"],[245,40,128,24],[245,42,128,40],[245,47,128,45,"_shouldUseHorizontalLabels"],[245,73,128,40],[245,79,128,77],[245,80,128,78,"Platform"],[245,102,128,87,"isPad"],[245,107,128,40],[245,110,128,95,"styles"],[245,117,128,102,"tabBarCompact"],[245,130,128,40],[245,133,128,118,"styles"],[245,140,128,125,"tabBarRegular"],[245,153,128,24],[245,155,128,140,"style"],[245,160,128,24],[245,161,128,4],[246,0,130,4],[246,15,130,11],[246,44,130,12],[246,76,130,11],[247,0,130,25],[247,17,130,32,"tabBarStyle"],[247,28,130,11],[248,0,130,45],[248,22,130,57,"safeAreaInset"],[248,35,130,11],[249,0,130,11],[250,0,130,11],[251,0,130,11],[252,0,130,11],[253,0,130,11],[253,11,131,9,"routes"],[253,18,131,16,"map"],[253,21,131,9],[253,22,131,20],[253,32,131,21,"route"],[253,37,131,20],[253,39,131,28,"index"],[253,44,131,20],[253,46,131,38],[254,0,132,8],[254,14,132,14,"focused"],[254,24,132,24,"index"],[254,34,132,34,"navigation"],[254,45,132,45,"state"],[254,50,132,34],[254,51,132,51,"index"],[254,56,132,8],[255,0,133,8],[255,14,133,14,"scene"],[255,22,133,22],[256,0,133,24,"route"],[256,24,133,22],[257,0,133,31,"focused"],[258,0,133,22],[258,11,133,8],[260,0,134,8],[260,14,134,14,"accessibilityLabel"],[260,35,134,35],[260,42,134,40,"props"],[260,47,134,35],[260,48,134,46,"getAccessibilityLabel"],[260,69,134,35],[260,70,134,68],[261,0,135,10,"route"],[262,0,134,68],[262,11,134,35],[262,12,134,8],[264,0,137,8],[264,14,137,14,"testID"],[264,23,137,23],[264,30,137,28,"props"],[264,35,137,23],[264,36,137,34,"getTestID"],[264,45,137,23],[264,46,137,44],[265,0,137,46,"route"],[266,0,137,44],[266,11,137,23],[266,12,137,8],[268,0,139,8],[268,14,139,14,"backgroundColor"],[268,32,139,32,"focused"],[268,42,139,42,"activeBackgroundColor"],[268,63,139,32],[268,66,139,66,"inactiveBackgroundColor"],[268,89,139,8],[269,0,141,8],[269,14,141,14,"ButtonComponent"],[269,32,141,32],[269,39,141,37,"props"],[269,44,141,32],[269,45,141,43,"getButtonComponent"],[269,63,141,32],[269,64,141,62],[270,0,141,64,"route"],[271,0,141,62],[271,11,141,32],[271,16,141,76,"TouchableWithoutFeedbackWrapper"],[271,47,141,8],[272,0,143,8],[272,17,143,15],[272,46,143,16],[272,61,143,15],[273,0,143,32],[273,17,143,37,"route"],[273,23,143,43,"key"],[273,26,143,15],[274,0,143,48],[274,21,143,57],[275,0,143,57],[275,21,143,63,"onTabPress"],[275,32,143,74],[276,0,143,76,"route"],[277,0,143,74],[277,15,143,63],[277,16,143,57],[278,0,143,57],[278,13,143,15],[279,0,143,86],[279,20,143,94,"testID"],[279,26,143,15],[280,0,143,102],[280,32,143,122,"accessibilityLabel"],[280,50,143,15],[281,0,143,142],[281,19,143,149],[281,20,143,150,"styles"],[281,27,143,157,"tab"],[281,30,143,149],[281,32,143,162],[282,0,143,164,"backgroundColor"],[283,0,143,162],[283,13,143,149],[283,15,143,183],[283,22,143,188,"_shouldUseHorizontalLabels"],[283,48,143,183],[283,53,143,219,"styles"],[283,60,143,226,"tabLandscape"],[283,72,143,183],[283,75,143,241,"styles"],[283,82,143,248,"tabPortrait"],[283,93,143,149],[283,95,143,261,"tabStyle"],[283,103,143,149],[283,104,143,15],[284,0,143,15],[285,0,143,15],[286,0,143,15],[287,0,143,15],[288,0,143,15],[288,13,144,15],[288,20,144,20,"_renderIcon"],[288,31,144,15],[288,32,144,32,"scene"],[288,37,144,15],[288,38,143,15],[288,40,145,15],[288,47,145,20,"_renderLabel"],[288,59,145,15],[288,60,145,33,"scene"],[288,65,145,15],[288,66,143,15],[288,67,143,8],[289,0,147,7],[289,9,131,9],[289,10,130,11],[289,11,130,4],[290,0,149,3],[296,4,24,27,"React"],[296,19,24,33,"Component"],[296,28],[298,0,24,6,"TabBarBottom"],[298,14],[298,15,25,9,"defaultProps"],[298,27],[298,30,25,24],[299,0,26,4,"activeTintColor"],[299,21,26,21],[299,30,25,24],[300,0,27,4,"activeBackgroundColor"],[300,27,27,27],[300,40,25,24],[301,0,28,4,"inactiveTintColor"],[301,23,28,23],[301,32,25,24],[302,0,29,4,"inactiveBackgroundColor"],[302,29,29,29],[302,42,25,24],[303,0,30,4,"showLabel"],[303,15,30,15],[303,19,25,24],[304,0,31,4,"showIcon"],[304,14,31,14],[304,18,25,24],[305,0,32,4,"allowFontScaling"],[305,22,32,22],[305,26,25,24],[306,0,33,4,"adaptive"],[306,14,33,14,"isIOS11"],[306,21,25,24],[307,0,34,4,"safeAreaInset"],[307,19,34,19],[308,0,34,21,"bottom"],[308,14,34,29],[308,22,34,19],[309,0,34,39,"top"],[309,11,34,44],[310,0,34,19],[311,0,25,24],[311,3],[313,0,152,0],[313,6,152,6,"DEFAULT_HEIGHT"],[313,23,152,23],[313,25,152,0],[314,0,153,0],[314,6,153,6,"COMPACT_HEIGHT"],[314,23,153,23],[314,25,153,0],[316,0,155,0],[316,6,155,6,"styles"],[316,15,155,15,"StyleSheet"],[316,39,155,26,"create"],[316,45,155,15],[316,46,155,33],[317,0,156,2,"tabBar"],[317,12,156,10],[318,0,157,4,"backgroundColor"],[318,23,157,21],[318,32,156,10],[319,0,158,4,"borderTopWidth"],[319,22,158,20,"StyleSheet"],[319,46,158,31,"hairlineWidth"],[319,59,156,10],[320,0,159,4,"borderTopColor"],[320,22,159,20],[320,41,156,10],[321,0,160,4,"flexDirection"],[321,21,160,19],[322,0,156,10],[322,5,155,33],[323,0,162,2,"tabBarCompact"],[323,19,162,17],[324,0,163,4,"height"],[324,14,163,12,"COMPACT_HEIGHT"],[325,0,162,17],[325,5,155,33],[326,0,165,2,"tabBarRegular"],[326,19,165,17],[327,0,166,4,"height"],[327,14,166,12,"DEFAULT_HEIGHT"],[328,0,165,17],[328,5,155,33],[329,0,168,2,"tab"],[329,9,168,7],[330,0,169,4,"flex"],[330,12,169,10],[330,13,168,7],[331,0,170,4,"alignItems"],[331,18,170,16,"isIos"],[331,26,170,24],[331,34,170,16],[331,37,170,35],[332,0,168,7],[332,5,155,33],[333,0,172,2,"tabPortrait"],[333,17,172,15],[334,0,173,4,"justifyContent"],[334,22,173,20],[334,32,172,15],[335,0,174,4,"flexDirection"],[335,21,174,19],[336,0,172,15],[336,5,155,33],[337,0,176,2,"tabLandscape"],[337,18,176,16],[338,0,177,4,"justifyContent"],[338,22,177,20],[338,30,176,16],[339,0,178,4,"flexDirection"],[339,21,178,19],[340,0,176,16],[340,5,155,33],[341,0,180,2,"iconWithoutLabel"],[341,22,180,20],[342,0,181,4,"flex"],[342,12,181,10],[343,0,180,20],[343,5,155,33],[344,0,183,2,"iconWithLabel"],[344,19,183,17],[345,0,184,4,"flex"],[345,12,184,10],[346,0,183,17],[346,5,155,33],[347,0,186,2,"iconWithExplicitHeight"],[347,28,186,26],[348,0,187,4,"height"],[348,14,187,12,"Platform"],[348,36,187,21,"isPad"],[348,41,187,12],[348,44,187,29,"DEFAULT_HEIGHT"],[348,58,187,12],[348,61,187,46,"COMPACT_HEIGHT"],[349,0,186,26],[349,5,155,33],[350,0,189,2,"label"],[350,11,189,9],[351,0,190,4,"textAlign"],[351,17,190,15],[351,25,189,9],[352,0,191,4,"backgroundColor"],[352,23,191,21],[353,0,189,9],[353,5,155,33],[354,0,193,2,"labelBeneath"],[354,18,193,16],[355,0,194,4,"fontSize"],[355,16,194,14],[355,18,193,16],[356,0,195,4,"marginBottom"],[356,20,195,18],[357,0,193,16],[357,5,155,33],[358,0,197,2,"labelBeside"],[358,17,197,15],[359,0,198,4,"fontSize"],[359,16,198,14],[359,18,197,15],[360,0,199,4,"marginLeft"],[360,18,199,16],[361,0,197,15],[362,0,155,33],[362,3,155,15],[362,4,155,0],[364,18,203,15],[364,47,203,30,"TabBarBottom"],[364,59,203,15],[364,60]]},"type":"js/module"}]}