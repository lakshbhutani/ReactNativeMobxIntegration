{"dependencies":[{"name":"react","isAsync":false},{"name":"./../../../react-transform-hmr/lib/index.js","isAsync":false},{"name":"Dimensions","isAsync":false},{"name":"ElementBox","isAsync":false},{"name":"prop-types","isAsync":false},{"name":"React","isAsync":false},{"name":"StyleSheet","isAsync":false},{"name":"UIManager","isAsync":false},{"name":"View","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _default = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"react\")).default;\n\n  var _reactTransformHmrLibIndexJs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../../react-transform-hmr/lib/index.js\")).default;\n\n  var _jsxFileName = \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/react-native/Libraries/Inspector/InspectorOverlay.js\";\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  var _components = {\n    InspectorOverlay: {\n      displayName: \"InspectorOverlay\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = _reactTransformHmrLibIndexJs({\n    filename: \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/react-native/Libraries/Inspector/InspectorOverlay.js\",\n    components: _components,\n    locals: [module],\n    imports: [_default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  var Dimensions = _$$_REQUIRE(_dependencyMap[2], 'Dimensions');\n\n  var ElementBox = _$$_REQUIRE(_dependencyMap[3], 'ElementBox');\n\n  var PropTypes = _$$_REQUIRE(_dependencyMap[4], 'prop-types');\n\n  var React = _$$_REQUIRE(_dependencyMap[5], 'React');\n\n  var StyleSheet = _$$_REQUIRE(_dependencyMap[6], 'StyleSheet');\n\n  var UIManager = _$$_REQUIRE(_dependencyMap[7], 'UIManager');\n\n  var View = _$$_REQUIRE(_dependencyMap[8], 'View');\n\n  var InspectorOverlay = function (_React$Component) {\n    function InspectorOverlay() {\n      var _getPrototypeOf2;\n\n      var _temp, _this;\n\n      _classCallCheck(this, InspectorOverlay);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InspectorOverlay)).call.apply(_getPrototypeOf2, [this].concat(args))), _this.findViewForTouchEvent = function (e) {\n        var _e$nativeEvent$touche = e.nativeEvent.touches[0],\n            locationX = _e$nativeEvent$touche.locationX,\n            locationY = _e$nativeEvent$touche.locationY;\n        UIManager.findSubviewIn(_this.props.inspectedViewTag, [locationX, locationY], function (nativeViewTag, left, top, width, height) {\n          _this.props.onTouchViewTag(nativeViewTag, {\n            left: left,\n            top: top,\n            width: width,\n            height: height\n          }, locationY);\n        });\n      }, _this.shouldSetResponser = function (e) {\n        _this.findViewForTouchEvent(e);\n\n        return true;\n      }, _temp));\n    }\n\n    _createClass(InspectorOverlay, [{\n      key: \"render\",\n      value: function render() {\n        var content = null;\n\n        if (this.props.inspected) {\n          content = React.createElement(ElementBox, {\n            frame: this.props.inspected.frame,\n            style: this.props.inspected.style,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            }\n          });\n        }\n\n        return React.createElement(View, {\n          onStartShouldSetResponder: this.shouldSetResponser,\n          onResponderMove: this.findViewForTouchEvent,\n          style: [styles.inspector, {\n            height: Dimensions.get('window').height\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          }\n        }, content);\n      }\n    }]);\n\n    _inherits(InspectorOverlay, _React$Component);\n\n    return InspectorOverlay;\n  }(React.Component);\n\n  InspectorOverlay.propTypes = {\n    inspected: PropTypes.shape({\n      frame: PropTypes.object,\n      style: PropTypes.any\n    }),\n    inspectedViewTag: PropTypes.number,\n    onTouchViewTag: PropTypes.func.isRequired\n  };\n  InspectorOverlay = _wrapComponent(\"InspectorOverlay\")(InspectorOverlay);\n  var styles = StyleSheet.create({\n    inspector: {\n      backgroundColor: 'transparent',\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      right: 0\n    }\n  });\n  module.exports = InspectorOverlay;\n});","map":[[2,0,11,0],[47,0,13,0],[47,6,13,6,"Dimensions"],[47,19,13,19,"require"],[47,50,13,27],[47,62,13,19],[47,63,13,0],[49,0,14,0],[49,6,14,6,"ElementBox"],[49,19,14,19,"require"],[49,50,14,27],[49,62,14,19],[49,63,14,0],[51,0,15,0],[51,6,15,6,"PropTypes"],[51,18,15,18,"require"],[51,49,15,26],[51,61,15,18],[51,62,15,0],[53,0,16,0],[53,6,16,6,"React"],[53,14,16,14,"require"],[53,45,16,22],[53,52,16,14],[53,53,16,0],[55,0,17,0],[55,6,17,6,"StyleSheet"],[55,19,17,19,"require"],[55,50,17,27],[55,62,17,19],[55,63,17,0],[57,0,18,0],[57,6,18,6,"UIManager"],[57,18,18,18,"require"],[57,49,18,26],[57,60,18,18],[57,61,18,0],[59,0,19,0],[59,6,19,6,"View"],[59,13,19,13,"require"],[59,44,19,21],[59,50,19,13],[59,51,19,0],[61,6,25,6,"InspectorOverlay"],[61,22],[73,210,42,2,"findViewForTouchEvent"],[73,231],[73,234,42,26],[73,244,42,27,"e"],[73,245,42,26],[73,247,42,44],[74,0,42,44],[74,36,43,35,"e"],[74,38,43,37,"nativeEvent"],[74,49,43,35],[74,50,43,49,"touches"],[74,57,43,35],[74,58,43,57],[74,59,43,35],[74,60,42,44],[75,0,42,44],[75,12,43,11,"locationX"],[75,21,42,44],[75,46,43,11,"locationX"],[75,55,42,44],[76,0,42,44],[76,12,43,22,"locationY"],[76,21,42,44],[76,46,43,22,"locationY"],[76,55,42,44],[77,0,44,4,"UIManager"],[77,18,44,14,"findSubviewIn"],[77,31,44,4],[77,32,45,6],[77,38,45,11,"props"],[77,43,45,6],[77,44,45,17,"inspectedViewTag"],[77,60,44,4],[77,62,46,6],[77,63,46,7,"locationX"],[77,72,46,6],[77,74,46,18,"locationY"],[77,83,46,6],[77,84,44,4],[77,86,47,6],[77,96,47,7,"nativeViewTag"],[77,109,47,6],[77,111,47,22,"left"],[77,115,47,6],[77,117,47,28,"top"],[77,120,47,6],[77,122,47,33,"width"],[77,127,47,6],[77,129,47,40,"height"],[77,135,47,6],[77,137,47,51],[78,0,48,8],[78,16,48,13,"props"],[78,21,48,8],[78,22,48,19,"onTouchViewTag"],[78,36,48,8],[78,37,49,10,"nativeViewTag"],[78,50,48,8],[78,52,50,10],[79,0,50,11,"left"],[79,22,50,10],[80,0,50,17,"top"],[80,20,50,10],[81,0,50,22,"width"],[81,24,50,10],[82,0,50,29,"height"],[83,0,50,10],[83,11,48,8],[83,13,51,10,"locationY"],[83,22,48,8],[84,0,53,7],[84,9,44,4],[85,0,55,3],[85,7],[85,15,57,2,"shouldSetResponser"],[85,33],[85,36,57,23],[85,46,57,24,"e"],[85,47,57,23],[85,49,57,50],[86,0,58,4],[86,14,58,9,"findViewForTouchEvent"],[86,35,58,4],[86,36,58,31,"e"],[86,37,58,4],[88,0,59,4],[88,15,59,11],[88,19,59,4],[89,0,60,3],[89,7],[94,31,62,11],[95,0,63,4],[95,12,63,8,"content"],[95,22,63,18],[95,26,63,4],[97,0,64,4],[97,12,64,8],[97,17,64,13,"props"],[97,22,64,8],[97,23,64,19,"inspected"],[97,32,64,4],[97,34,64,30],[98,0,65,6,"content"],[98,20,66,8],[98,40,66,9],[98,50,66,8],[99,0,67,10],[99,19,67,17],[99,24,67,22,"props"],[99,29,67,17],[99,30,67,28,"inspected"],[99,39,67,17],[99,40,67,38,"frame"],[99,45,66,8],[100,0,68,10],[100,19,68,17],[100,24,68,22,"props"],[100,29,68,17],[100,30,68,28,"inspected"],[100,39,68,17],[100,40,68,38,"style"],[100,45,66,8],[101,0,66,8],[102,0,66,8],[103,0,66,8],[104,0,66,8],[105,0,66,8],[105,12,65,6],[106,0,71,5],[108,0,73,4],[108,15,74,6],[108,35,74,7],[108,39,74,6],[109,0,75,8],[109,37,75,35],[109,42,75,40,"shouldSetResponser"],[109,60,74,6],[110,0,76,8],[110,27,76,25],[110,32,76,30,"findViewForTouchEvent"],[110,53,74,6],[111,0,77,8],[111,17,77,15],[111,18,77,16,"styles"],[111,25,77,23,"inspector"],[111,34,77,15],[111,36,77,34],[112,0,77,35,"height"],[112,20,77,43,"Dimensions"],[112,31,77,54,"get"],[112,34,77,43],[112,35,77,58],[112,43,77,43],[112,45,77,68,"height"],[113,0,77,34],[113,11,77,15],[113,12,74,6],[114,0,74,6],[115,0,74,6],[116,0,74,6],[117,0,74,6],[118,0,74,6],[118,11,78,9,"content"],[118,18,74,6],[118,19,73,4],[119,0,81,3],[125,4,25,31,"React"],[125,10,25,37,"Component"],[125,19],[127,0,25,6,"InspectorOverlay"],[127,18],[127,19,33,9,"propTypes"],[127,28],[127,31,33,21],[128,0,34,4,"inspected"],[128,15,34,15,"PropTypes"],[128,25,34,25,"shape"],[128,30,34,15],[128,31,34,31],[129,0,35,6,"frame"],[129,13,35,13,"PropTypes"],[129,23,35,23,"object"],[129,29,34,31],[130,0,36,6,"style"],[130,13,36,13,"PropTypes"],[130,23,36,23,"any"],[131,0,34,31],[131,5,34,15],[131,6,33,21],[132,0,38,4,"inspectedViewTag"],[132,22,38,22,"PropTypes"],[132,32,38,32,"number"],[132,38,33,21],[133,0,39,4,"onTouchViewTag"],[133,20,39,20,"PropTypes"],[133,30,39,30,"func"],[133,34,39,20],[133,35,39,35,"isRequired"],[134,0,33,21],[134,3],[136,0,84,0],[136,6,84,6,"styles"],[136,15,84,15,"StyleSheet"],[136,26,84,26,"create"],[136,32,84,15],[136,33,84,33],[137,0,85,2,"inspector"],[137,15,85,13],[138,0,86,4,"backgroundColor"],[138,23,86,21],[138,36,85,13],[139,0,87,4,"position"],[139,16,87,14],[139,26,85,13],[140,0,88,4,"left"],[140,12,88,10],[140,13,85,13],[141,0,89,4,"top"],[141,11,89,9],[141,12,85,13],[142,0,90,4,"right"],[142,13,90,11],[143,0,85,13],[144,0,84,33],[144,3,84,15],[144,4,84,0],[145,0,94,0,"module"],[145,9,94,7,"exports"],[145,16,94,0],[145,19,94,17,"InspectorOverlay"],[145,35,94,0]]},"type":"js/module"}]}