{"dependencies":[{"name":"mixInEventEmitter","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  var mixInEventEmitter = _$$_REQUIRE(_dependencyMap[0], 'mixInEventEmitter');\n\n  var DocumentSelectionState = function () {\n    function DocumentSelectionState(anchor, focus) {\n      _classCallCheck(this, DocumentSelectionState);\n\n      this._anchorOffset = anchor;\n      this._focusOffset = focus;\n      this._hasFocus = false;\n    }\n\n    _createClass(DocumentSelectionState, [{\n      key: \"update\",\n      value: function update(anchor, focus) {\n        if (this._anchorOffset !== anchor || this._focusOffset !== focus) {\n          this._anchorOffset = anchor;\n          this._focusOffset = focus;\n          this.emit('update');\n        }\n      }\n    }, {\n      key: \"constrainLength\",\n      value: function constrainLength(maxLength) {\n        this.update(Math.min(this._anchorOffset, maxLength), Math.min(this._focusOffset, maxLength));\n      }\n    }, {\n      key: \"focus\",\n      value: function focus() {\n        if (!this._hasFocus) {\n          this._hasFocus = true;\n          this.emit('focus');\n        }\n      }\n    }, {\n      key: \"blur\",\n      value: function blur() {\n        if (this._hasFocus) {\n          this._hasFocus = false;\n          this.emit('blur');\n        }\n      }\n    }, {\n      key: \"hasFocus\",\n      value: function hasFocus() {\n        return this._hasFocus;\n      }\n    }, {\n      key: \"isCollapsed\",\n      value: function isCollapsed() {\n        return this._anchorOffset === this._focusOffset;\n      }\n    }, {\n      key: \"isBackward\",\n      value: function isBackward() {\n        return this._anchorOffset > this._focusOffset;\n      }\n    }, {\n      key: \"getAnchorOffset\",\n      value: function getAnchorOffset() {\n        return this._hasFocus ? this._anchorOffset : null;\n      }\n    }, {\n      key: \"getFocusOffset\",\n      value: function getFocusOffset() {\n        return this._hasFocus ? this._focusOffset : null;\n      }\n    }, {\n      key: \"getStartOffset\",\n      value: function getStartOffset() {\n        return this._hasFocus ? Math.min(this._anchorOffset, this._focusOffset) : null;\n      }\n    }, {\n      key: \"getEndOffset\",\n      value: function getEndOffset() {\n        return this._hasFocus ? Math.max(this._anchorOffset, this._focusOffset) : null;\n      }\n    }, {\n      key: \"overlaps\",\n      value: function overlaps(start, end) {\n        return this.hasFocus() && this.getStartOffset() <= end && start <= this.getEndOffset();\n      }\n    }]);\n\n    return DocumentSelectionState;\n  }();\n\n  mixInEventEmitter(DocumentSelectionState, {\n    blur: true,\n    focus: true,\n    update: true\n  });\n  module.exports = DocumentSelectionState;\n});","map":[[2,0,11,0],[10,0,13,0],[10,6,13,6,"mixInEventEmitter"],[10,26,13,26,"require"],[10,57,13,34],[10,76,13,26],[10,77,13,0],[12,6,24,6,"DocumentSelectionState"],[12,28],[13,0,29,2],[13,36,29,14,"anchor"],[13,42,29,2],[13,44,29,22,"focus"],[13,49,29,2],[13,51,29,29],[14,0,29,29],[16,0,30,4],[16,11,30,9,"_anchorOffset"],[16,24,30,4],[16,27,30,25,"anchor"],[16,33,30,4],[17,0,31,4],[17,11,31,9,"_focusOffset"],[17,23,31,4],[17,26,31,24,"focus"],[17,31,31,4],[18,0,32,4],[18,11,32,9,"_hasFocus"],[18,20,32,4],[18,23,32,21],[18,28,32,4],[19,0,33,3],[23,29,42,9,"anchor"],[23,35],[23,37,42,17,"focus"],[23,42],[23,44,42,24],[24,0,43,4],[24,12,43,8],[24,17,43,13,"_anchorOffset"],[24,30,43,8],[24,35,43,31,"anchor"],[24,41,43,8],[24,45,43,41],[24,50,43,46,"_focusOffset"],[24,62,43,41],[24,67,43,63,"focus"],[24,72,43,4],[24,74,43,70],[25,0,44,6],[25,15,44,11,"_anchorOffset"],[25,28,44,6],[25,31,44,27,"anchor"],[25,37,44,6],[26,0,45,6],[26,15,45,11,"_focusOffset"],[26,27,45,6],[26,30,45,26,"focus"],[26,35,45,6],[27,0,46,6],[27,15,46,11,"emit"],[27,19,46,6],[27,20,46,16],[27,28,46,6],[28,0,47,5],[29,0,48,3],[32,38,56,18,"maxLength"],[32,47],[32,49,56,29],[33,0,57,4],[33,13,57,9,"update"],[33,19,57,4],[33,20,58,6,"Math"],[33,25,58,11,"min"],[33,28,58,6],[33,29,58,15],[33,34,58,20,"_anchorOffset"],[33,47,58,6],[33,49,58,35,"maxLength"],[33,58,58,6],[33,59,57,4],[33,61,59,6,"Math"],[33,66,59,11,"min"],[33,69,59,6],[33,70,59,15],[33,75,59,20,"_focusOffset"],[33,87,59,6],[33,89,59,34,"maxLength"],[33,98,59,6],[33,99,57,4],[34,0,61,3],[37,30,63,10],[38,0,64,4],[38,12,64,8],[38,13,64,9],[38,18,64,14,"_hasFocus"],[38,27,64,4],[38,29,64,25],[39,0,65,6],[39,15,65,11,"_hasFocus"],[39,24,65,6],[39,27,65,23],[39,31,65,6],[40,0,66,6],[40,15,66,11,"emit"],[40,19,66,6],[40,20,66,16],[40,27,66,6],[41,0,67,5],[42,0,68,3],[45,29,70,9],[46,0,71,4],[46,12,71,8],[46,17,71,13,"_hasFocus"],[46,26,71,4],[46,28,71,24],[47,0,72,6],[47,15,72,11,"_hasFocus"],[47,24,72,6],[47,27,72,23],[47,32,72,6],[48,0,73,6],[48,15,73,11,"emit"],[48,19,73,6],[48,20,73,16],[48,26,73,6],[49,0,74,5],[50,0,75,3],[53,33,80,13],[54,0,81,4],[54,15,81,11],[54,20,81,16,"_hasFocus"],[54,29,81,4],[55,0,82,3],[58,36,87,16],[59,0,88,4],[59,15,88,11],[59,20,88,16,"_anchorOffset"],[59,33,88,11],[59,38,88,34],[59,43,88,39,"_focusOffset"],[59,55,88,4],[60,0,89,3],[63,35,94,15],[64,0,95,4],[64,15,95,11],[64,20,95,16,"_anchorOffset"],[64,33,95,11],[64,36,95,32],[64,41,95,37,"_focusOffset"],[64,53,95,4],[65,0,96,3],[68,40,101,20],[69,0,102,4],[69,15,102,11],[69,20,102,16,"_hasFocus"],[69,29,102,11],[69,32,102,28],[69,37,102,33,"_anchorOffset"],[69,50,102,11],[69,53,102,49],[69,57,102,4],[70,0,103,3],[73,39,108,19],[74,0,109,4],[74,15,109,11],[74,20,109,16,"_hasFocus"],[74,29,109,11],[74,32,109,28],[74,37,109,33,"_focusOffset"],[74,49,109,11],[74,52,109,48],[74,56,109,4],[75,0,110,3],[78,39,115,19],[79,0,116,4],[79,15,116,11],[79,20,116,16,"_hasFocus"],[79,29,116,11],[79,32,117,8,"Math"],[79,37,117,13,"min"],[79,40,117,8],[79,41,117,17],[79,46,117,22,"_anchorOffset"],[79,59,117,8],[79,61,117,37],[79,66,117,42,"_focusOffset"],[79,78,117,8],[79,79,116,11],[79,82,118,8],[79,86,116,4],[80,0,119,3],[83,37,124,17],[84,0,125,4],[84,15,125,11],[84,20,125,16,"_hasFocus"],[84,29,125,11],[84,32,126,8,"Math"],[84,37,126,13,"max"],[84,40,126,8],[84,41,126,17],[84,46,126,22,"_anchorOffset"],[84,59,126,8],[84,61,126,37],[84,66,126,42,"_focusOffset"],[84,78,126,8],[84,79,125,11],[84,82,127,8],[84,86,125,4],[85,0,128,3],[88,31,135,11,"start"],[88,36],[88,38,135,18,"end"],[88,41],[88,43,135,23],[89,0,136,4],[89,15,137,6],[89,20,137,11,"hasFocus"],[89,28,137,6],[89,34,138,6],[89,39,138,11,"getStartOffset"],[89,53,138,6],[89,59,138,31,"end"],[89,62,137,6],[89,66,139,6,"start"],[89,75,139,15],[89,80,139,20,"getEndOffset"],[89,92,139,15],[89,94,136,4],[90,0,141,3],[96,0,144,0,"mixInEventEmitter"],[96,20,144,18,"DocumentSelectionState"],[96,42,144,0],[96,44,144,42],[97,0,145,2,"blur"],[97,10,145,8],[97,14,144,42],[98,0,146,2,"focus"],[98,11,146,9],[98,15,144,42],[99,0,147,2,"update"],[99,12,147,10],[100,0,144,42],[100,3,144,0],[101,0,150,0,"module"],[101,9,150,7,"exports"],[101,16,150,0],[101,19,150,17,"DocumentSelectionState"],[101,41,150,0]]},"type":"js/module"}]}