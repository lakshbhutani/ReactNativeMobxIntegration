{"dependencies":[{"name":"../NavigationActions","isAsync":false},{"name":"./StackActions","isAsync":false},{"name":"./createConfigGetter","isAsync":false},{"name":"./getScreenForRouteName","isAsync":false},{"name":"../StateUtils","isAsync":false},{"name":"./validateRouteConfigMap","isAsync":false},{"name":"../utils/invariant","isAsync":false},{"name":"./KeyGenerator","isAsync":false},{"name":"./pathUtils","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _NavigationActions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"../NavigationActions\"));\n\n  var _StackActions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./StackActions\"));\n\n  var _createConfigGetter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"./createConfigGetter\"));\n\n  var _getScreenForRouteName = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./getScreenForRouteName\"));\n\n  var _StateUtils = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../StateUtils\"));\n\n  var _validateRouteConfigMap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./validateRouteConfigMap\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"../utils/invariant\"));\n\n  var _KeyGenerator = _$$_REQUIRE(_dependencyMap[7], \"./KeyGenerator\");\n\n  var _pathUtils = _$$_REQUIRE(_dependencyMap[8], \"./pathUtils\");\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\n  function _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\n  function _iterableToArray(iter) { if ((typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\") in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\n  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  function behavesLikePushAction(action) {\n    return action.type === _NavigationActions.default.NAVIGATE || action.type === _StackActions.default.PUSH;\n  }\n\n  var defaultActionCreators = function defaultActionCreators(route, navStateKey) {\n    return {};\n  };\n\n  function isResetToRootStack(action) {\n    return action.type === _StackActions.default.RESET && action.key === null;\n  }\n\n  var _default = function _default(routeConfigs) {\n    var stackConfig = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    (0, _validateRouteConfigMap.default)(routeConfigs);\n    var childRouters = {};\n    var routeNames = Object.keys(routeConfigs);\n    routeNames.forEach(function (routeName) {\n      var screen = (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n\n      if (screen && screen.router) {\n        childRouters[routeName] = screen.router;\n      } else {\n        childRouters[routeName] = null;\n      }\n    });\n    var initialRouteParams = stackConfig.initialRouteParams;\n    var getCustomActionCreators = stackConfig.getCustomActionCreators || defaultActionCreators;\n    var initialRouteName = stackConfig.initialRouteName || routeNames[0];\n    var initialChildRouter = childRouters[initialRouteName];\n\n    function getInitialState(action) {\n      var route = {};\n      var childRouter = childRouters[action.routeName];\n\n      if (behavesLikePushAction(action) && childRouter !== undefined) {\n        var childState = {};\n\n        if (childRouter !== null) {\n          var childAction = action.action || _NavigationActions.default.init({\n            params: action.params\n          });\n\n          childState = childRouter.getStateForAction(childAction);\n        }\n\n        return {\n          key: 'StackRouterRoot',\n          isTransitioning: false,\n          index: 0,\n          routes: [_objectSpread({\n            params: action.params\n          }, childState, {\n            key: action.key || (0, _KeyGenerator.generateKey)(),\n            routeName: action.routeName\n          })]\n        };\n      }\n\n      if (initialChildRouter) {\n        route = initialChildRouter.getStateForAction(_NavigationActions.default.navigate({\n          routeName: initialRouteName,\n          params: initialRouteParams\n        }));\n      }\n\n      var params = (route.params || action.params || initialRouteParams) && _objectSpread({}, route.params || {}, action.params || {}, initialRouteParams || {});\n\n      var initialRouteKey = stackConfig.initialRouteKey;\n      route = _objectSpread({}, route, params ? {\n        params: params\n      } : {}, {\n        routeName: initialRouteName,\n        key: action.key || initialRouteKey || (0, _KeyGenerator.generateKey)()\n      });\n      return {\n        key: 'StackRouterRoot',\n        isTransitioning: false,\n        index: 0,\n        routes: [route]\n      };\n    }\n\n    var _createPathParser = (0, _pathUtils.createPathParser)(childRouters, routeConfigs, stackConfig.paths),\n        getPathAndParamsForRoute = _createPathParser.getPathAndParamsForRoute,\n        _getActionForPathAndParams = _createPathParser.getActionForPathAndParams;\n\n    return {\n      childRouters: childRouters,\n      getComponentForState: function getComponentForState(state) {\n        var activeChildRoute = state.routes[state.index];\n        var routeName = activeChildRoute.routeName;\n\n        if (childRouters[routeName]) {\n          return childRouters[routeName].getComponentForState(activeChildRoute);\n        }\n\n        return (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n      },\n      getComponentForRouteName: function getComponentForRouteName(routeName) {\n        return (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n      },\n      getActionCreators: function getActionCreators(route, navStateKey) {\n        return _objectSpread({}, getCustomActionCreators(route, navStateKey), {\n          pop: function pop(n, params) {\n            return _StackActions.default.pop(_objectSpread({\n              n: n\n            }, params));\n          },\n          popToTop: function popToTop(params) {\n            return _StackActions.default.popToTop(params);\n          },\n          push: function push(routeName, params, action) {\n            return _StackActions.default.push({\n              routeName: routeName,\n              params: params,\n              action: action\n            });\n          },\n          replace: function replace(replaceWith, params, action, newKey) {\n            if (typeof replaceWith === 'string') {\n              return _StackActions.default.replace({\n                routeName: replaceWith,\n                params: params,\n                action: action,\n                key: route.key,\n                newKey: newKey\n              });\n            }\n\n            (0, _invariant.default)(typeof replaceWith === 'object', 'Must replaceWith an object or a string');\n            (0, _invariant.default)(params == null, 'Params must not be provided to .replace() when specifying an object');\n            (0, _invariant.default)(action == null, 'Child action must not be provided to .replace() when specifying an object');\n            (0, _invariant.default)(newKey == null, 'Child action must not be provided to .replace() when specifying an object');\n            return _StackActions.default.replace(replaceWith);\n          },\n          reset: function reset(actions, index) {\n            return _StackActions.default.reset({\n              actions: actions,\n              index: index == null ? actions.length - 1 : index,\n              key: navStateKey\n            });\n          },\n          dismiss: function dismiss() {\n            return _NavigationActions.default.back({\n              key: navStateKey\n            });\n          }\n        });\n      },\n      getStateForAction: function getStateForAction(action, state) {\n        if (!state) {\n          return getInitialState(action);\n        }\n\n        var activeChildRoute = state.routes[state.index];\n\n        if (!isResetToRootStack(action) && action.type !== _NavigationActions.default.NAVIGATE) {\n          var activeChildRouter = childRouters[activeChildRoute.routeName];\n\n          if (activeChildRouter) {\n            var route = activeChildRouter.getStateForAction(action, activeChildRoute);\n\n            if (route !== null && route !== activeChildRoute) {\n              return _StateUtils.default.replaceAt(state, activeChildRoute.key, route, action.type === _NavigationActions.default.SET_PARAMS);\n            }\n          }\n        } else if (action.type === _NavigationActions.default.NAVIGATE) {\n          for (var _iterator = state.routes.slice().reverse(), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n            var _ref;\n\n            if (_isArray) {\n              if (_i >= _iterator.length) break;\n              _ref = _iterator[_i++];\n            } else {\n              _i = _iterator.next();\n              if (_i.done) break;\n              _ref = _i.value;\n            }\n\n            var _childRoute = _ref;\n            var childRouter = childRouters[_childRoute.routeName];\n            var childAction = action.routeName === _childRoute.routeName && action.action ? action.action : action;\n\n            if (childRouter) {\n              var nextRouteState = childRouter.getStateForAction(childAction, _childRoute);\n\n              if (nextRouteState === null || nextRouteState !== _childRoute) {\n                var newState = _StateUtils.default.replaceAndPrune(state, nextRouteState ? nextRouteState.key : _childRoute.key, nextRouteState ? nextRouteState : _childRoute);\n\n                return _objectSpread({}, newState, {\n                  isTransitioning: state.index !== newState.index ? action.immediate !== true : state.isTransitioning\n                });\n              }\n            }\n          }\n        }\n\n        if (behavesLikePushAction(action) && childRouters[action.routeName] !== undefined) {\n          var _childRouter = childRouters[action.routeName];\n\n          var _route;\n\n          (0, _invariant.default)(action.type !== _StackActions.default.PUSH || action.key == null, 'StackRouter does not support key on the push action');\n          var lastRouteIndex = state.routes.findIndex(function (r) {\n            if (action.key) {\n              return r.key === action.key;\n            } else {\n              return r.routeName === action.routeName;\n            }\n          });\n\n          if (action.type !== _StackActions.default.PUSH && lastRouteIndex !== -1) {\n            if (state.index === lastRouteIndex && !action.params) {\n              return null;\n            }\n\n            var routes = state.routes.slice(0, lastRouteIndex + 1);\n\n            if (action.params) {\n              var _route2 = state.routes[lastRouteIndex];\n              routes[lastRouteIndex] = _objectSpread({}, _route2, {\n                params: _objectSpread({}, _route2.params, action.params)\n              });\n            }\n\n            return _objectSpread({}, state, {\n              isTransitioning: state.index !== lastRouteIndex ? action.immediate !== true : state.isTransitioning,\n              index: lastRouteIndex,\n              routes: routes\n            });\n          }\n\n          if (_childRouter) {\n            var _childAction = action.action || _NavigationActions.default.init({\n              params: action.params\n            });\n\n            _route = _objectSpread({\n              params: action.params\n            }, _childRouter.getStateForAction(_childAction), {\n              routeName: action.routeName,\n              key: action.key || (0, _KeyGenerator.generateKey)()\n            });\n          } else {\n            _route = {\n              params: action.params,\n              routeName: action.routeName,\n              key: action.key || (0, _KeyGenerator.generateKey)()\n            };\n          }\n\n          return _objectSpread({}, _StateUtils.default.push(state, _route), {\n            isTransitioning: action.immediate !== true\n          });\n        } else if (action.type === _StackActions.default.PUSH && childRouters[action.routeName] === undefined) {\n          return state;\n        }\n\n        if (behavesLikePushAction(action)) {\n          var childRouterNames = Object.keys(childRouters);\n\n          for (var i = 0; i < childRouterNames.length; i++) {\n            var childRouterName = childRouterNames[i];\n            var _childRouter2 = childRouters[childRouterName];\n\n            if (_childRouter2) {\n              var initChildRoute = _childRouter2.getStateForAction(_NavigationActions.default.init());\n\n              var navigatedChildRoute = _childRouter2.getStateForAction(action, initChildRoute);\n\n              var routeToPush = null;\n\n              if (navigatedChildRoute === null) {\n                routeToPush = initChildRoute;\n              } else if (navigatedChildRoute !== initChildRoute) {\n                routeToPush = navigatedChildRoute;\n              }\n\n              if (routeToPush) {\n                var _route3 = _objectSpread({}, routeToPush, {\n                  routeName: childRouterName,\n                  key: action.key || (0, _KeyGenerator.generateKey)()\n                });\n\n                return _objectSpread({}, _StateUtils.default.push(state, _route3), {\n                  isTransitioning: action.immediate !== true\n                });\n              }\n            }\n          }\n        }\n\n        if (action.type === _StackActions.default.POP_TO_TOP) {\n          if (action.key && state.key !== action.key) {\n            return state;\n          }\n\n          if (state.index > 0) {\n            return _objectSpread({}, state, {\n              isTransitioning: action.immediate !== true,\n              index: 0,\n              routes: [state.routes[0]]\n            });\n          }\n\n          return state;\n        }\n\n        if (action.type === _StackActions.default.REPLACE) {\n          var routeIndex;\n\n          if (action.key === undefined && state.routes.length) {\n            routeIndex = state.routes.length - 1;\n          } else {\n            routeIndex = state.routes.findIndex(function (r) {\n              return r.key === action.key;\n            });\n          }\n\n          if (routeIndex !== -1) {\n            var _childRouter3 = childRouters[action.routeName];\n            var childState = {};\n\n            if (_childRouter3) {\n              var _childAction2 = action.action || _NavigationActions.default.init({\n                params: action.params\n              });\n\n              childState = _childRouter3.getStateForAction(_childAction2);\n            }\n\n            var _routes = _toConsumableArray(state.routes);\n\n            _routes[routeIndex] = _objectSpread({\n              params: action.params\n            }, childState, {\n              routeName: action.routeName,\n              key: action.newKey || (0, _KeyGenerator.generateKey)()\n            });\n            return _objectSpread({}, state, {\n              routes: _routes\n            });\n          }\n        }\n\n        if (action.type === _StackActions.default.COMPLETE_TRANSITION && (action.key == null || action.key === state.key) && state.isTransitioning) {\n          return _objectSpread({}, state, {\n            isTransitioning: false\n          });\n        }\n\n        if (action.type === _NavigationActions.default.SET_PARAMS) {\n          var key = action.key;\n          var lastRoute = state.routes.find(function (route) {\n            return route.key === key;\n          });\n\n          if (lastRoute) {\n            var params = _objectSpread({}, lastRoute.params, action.params);\n\n            var _routes2 = _toConsumableArray(state.routes);\n\n            _routes2[state.routes.indexOf(lastRoute)] = _objectSpread({}, lastRoute, {\n              params: params\n            });\n            return _objectSpread({}, state, {\n              routes: _routes2\n            });\n          }\n        }\n\n        if (action.type === _StackActions.default.RESET) {\n          if (action.key != null && action.key != state.key) {\n            return state;\n          }\n\n          var newStackActions = action.actions;\n          return _objectSpread({}, state, {\n            routes: newStackActions.map(function (newStackAction) {\n              var router = childRouters[newStackAction.routeName];\n              var childState = {};\n\n              if (router) {\n                var _childAction3 = newStackAction.action || _NavigationActions.default.init({\n                  params: newStackAction.params\n                });\n\n                childState = router.getStateForAction(_childAction3);\n              }\n\n              return _objectSpread({\n                params: newStackAction.params\n              }, childState, {\n                routeName: newStackAction.routeName,\n                key: newStackAction.key || (0, _KeyGenerator.generateKey)()\n              });\n            }),\n            index: action.index\n          });\n        }\n\n        if (action.type === _NavigationActions.default.BACK || action.type === _StackActions.default.POP) {\n          var _key = action.key,\n              n = action.n,\n              immediate = action.immediate;\n          var backRouteIndex = state.index;\n\n          if (action.type === _StackActions.default.POP && n != null) {\n            backRouteIndex = Math.max(1, state.index - n + 1);\n          } else if (_key) {\n            var backRoute = state.routes.find(function (route) {\n              return route.key === _key;\n            });\n            backRouteIndex = state.routes.indexOf(backRoute);\n          }\n\n          if (backRouteIndex > 0) {\n            return _objectSpread({}, state, {\n              routes: state.routes.slice(0, backRouteIndex),\n              index: backRouteIndex - 1,\n              isTransitioning: immediate !== true\n            });\n          }\n        }\n\n        var keyIndex = action.key ? _StateUtils.default.indexOf(state, action.key) : -1;\n\n        for (var _iterator2 = state.routes.slice().reverse(), _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n          var _ref2;\n\n          if (_isArray2) {\n            if (_i2 >= _iterator2.length) break;\n            _ref2 = _iterator2[_i2++];\n          } else {\n            _i2 = _iterator2.next();\n            if (_i2.done) break;\n            _ref2 = _i2.value;\n          }\n\n          var _childRoute3 = _ref2;\n\n          if (_childRoute3.key === activeChildRoute.key) {\n            continue;\n          }\n\n          if (keyIndex >= 0 && _childRoute3.key !== action.key) {\n            continue;\n          }\n\n          var _childRouter5 = childRouters[_childRoute3.routeName];\n\n          if (_childRouter5) {\n            var _route4 = _childRouter5.getStateForAction(action, _childRoute3);\n\n            if (_route4 === null) {\n              return state;\n            } else if (_route4 && _route4 !== _childRoute3) {\n              return _StateUtils.default.replaceAt(state, _childRoute3.key, _route4, action.type === _NavigationActions.default.SET_PARAMS);\n            }\n          }\n        }\n\n        return state;\n      },\n      getPathAndParamsForState: function getPathAndParamsForState(state) {\n        var route = state.routes[state.index];\n        return getPathAndParamsForRoute(route);\n      },\n      getActionForPathAndParams: function getActionForPathAndParams(path, params) {\n        return _getActionForPathAndParams(path, params);\n      },\n      getScreenOptions: (0, _createConfigGetter.default)(routeConfigs, stackConfig.navigationOptions)\n    };\n  };\n\n  exports.default = _default;\n});","map":[[7,0,1,0],[9,0,2,0],[11,0,3,0],[13,0,4,0],[15,0,5,0],[17,0,6,0],[19,0,7,0],[21,0,8,0],[23,0,9,0],[39,0,11,0],[39,11,11,9,"behavesLikePushAction"],[39,32,11,0],[39,33,11,31,"action"],[39,39,11,0],[39,41,11,39],[40,0,12,2],[40,11,13,4,"action"],[40,18,13,11,"type"],[40,22,13,4],[40,27,13,20,"NavigationActions"],[40,54,13,38,"NAVIGATE"],[40,62,13,4],[40,66,14,4,"action"],[40,73,14,11,"type"],[40,77,14,4],[40,82,14,20,"StackActions"],[40,104,14,33,"PUSH"],[40,108,12,2],[41,0,16,1],[43,0,18,0],[43,6,18,6,"defaultActionCreators"],[43,30,18,30],[43,39,18,6,"defaultActionCreators"],[43,60,18,30],[43,61,18,31,"route"],[43,66,18,30],[43,68,18,38,"navStateKey"],[43,79,18,30],[44,0,18,30],[44,11,18,55],[44,13,18,30],[45,0,18,30],[45,3,18,0],[47,0,20,0],[47,11,20,9,"isResetToRootStack"],[47,29,20,0],[47,30,20,28,"action"],[47,36,20,0],[47,38,20,36],[48,0,21,2],[48,11,21,9,"action"],[48,18,21,16,"type"],[48,22,21,9],[48,27,21,25,"StackActions"],[48,49,21,38,"RESET"],[48,54,21,9],[48,58,21,47,"action"],[48,65,21,54,"key"],[48,68,21,47],[48,73,21,62],[48,77,21,2],[49,0,22,1],[51,17,24,15],[51,35,24,16,"routeConfigs"],[51,47,24,15],[51,49,24,51],[52,0,24,51],[52,8,24,30,"stackConfig"],[52,19,24,51],[52,90,24,44],[52,92,24,51],[53,0,26,2],[53,41,26,25,"routeConfigs"],[53,53,26,2],[54,0,28,2],[54,8,28,8,"childRouters"],[54,23,28,23],[54,25,28,2],[55,0,29,2],[55,8,29,8,"routeNames"],[55,21,29,21,"Object"],[55,28,29,28,"keys"],[55,32,29,21],[55,33,29,33,"routeConfigs"],[55,45,29,21],[55,46,29,2],[56,0,32,2,"routeNames"],[56,15,32,13,"forEach"],[56,22,32,2],[56,23,32,21],[56,44,32,34],[57,0,33,4],[57,10,33,10,"screen"],[57,19,33,19],[57,55,33,41,"routeConfigs"],[57,67,33,19],[57,69,33,55,"routeName"],[57,78,33,19],[57,79,33,4],[59,0,34,4],[59,10,34,8,"screen"],[59,20,34,18,"screen"],[59,27,34,25,"router"],[59,33,34,4],[59,35,34,33],[60,0,36,6,"childRouters"],[60,21,36,19,"routeName"],[60,30,36,6],[60,34,36,32,"screen"],[60,41,36,39,"router"],[60,47,36,6],[61,0,37,5],[61,7,34,4],[61,13,37,11],[62,0,39,6,"childRouters"],[62,21,39,19,"routeName"],[62,30,39,6],[62,34,39,32],[62,38,39,6],[63,0,40,5],[64,0,41,3],[64,5,32,2],[65,0,24,51],[65,8,43,10,"initialRouteParams"],[65,26,24,51],[65,29,43,33,"stackConfig"],[65,40,24,51],[65,41,43,10,"initialRouteParams"],[65,59,24,51],[66,0,44,2],[66,8,44,8,"getCustomActionCreators"],[66,34,45,4,"stackConfig"],[66,46,45,16,"getCustomActionCreators"],[66,69,45,4],[66,73,45,43,"defaultActionCreators"],[66,94,44,2],[67,0,47,2],[67,8,47,8,"initialRouteName"],[67,27,47,27,"stackConfig"],[67,39,47,39,"initialRouteName"],[67,55,47,27],[67,59,47,59,"routeNames"],[67,70,47,70],[67,71,47,59],[67,72,47,2],[68,0,49,2],[68,8,49,8,"initialChildRouter"],[68,29,49,29,"childRouters"],[68,42,49,42,"initialRouteName"],[68,58,49,29],[68,59,49,2],[70,0,51,2],[70,13,51,11,"getInitialState"],[70,28,51,2],[70,29,51,27,"action"],[70,35,51,2],[70,37,51,35],[71,0,52,4],[71,10,52,8,"route"],[71,18,52,16],[71,20,52,4],[72,0,53,4],[72,10,53,10,"childRouter"],[72,24,53,24,"childRouters"],[72,37,53,37,"action"],[72,44,53,44,"routeName"],[72,53,53,24],[72,54,53,4],[74,0,56,4],[74,10,56,8,"behavesLikePushAction"],[74,32,56,30,"action"],[74,38,56,8],[74,43,56,41,"childRouter"],[74,59,56,57,"undefined"],[74,68,56,4],[74,70,56,68],[75,0,57,6],[75,12,57,10,"childState"],[75,25,57,23],[75,27,57,6],[77,0,59,6],[77,12,59,10,"childRouter"],[77,28,59,26],[77,32,59,6],[77,34,59,32],[78,0,60,8],[78,14,60,14,"childAction"],[78,28,61,10,"action"],[78,35,61,17,"action"],[78,41,61,10],[78,45,61,27,"NavigationActions"],[78,72,61,45,"init"],[78,76,61,27],[78,77,61,50],[79,0,61,52,"params"],[79,20,61,60,"action"],[79,27,61,67,"params"],[80,0,61,50],[80,11,61,27],[80,12,60,8],[82,0,62,8,"childState"],[82,23,62,21,"childRouter"],[82,35,62,33,"getStateForAction"],[82,52,62,21],[82,53,62,51,"childAction"],[82,64,62,21],[82,65,62,8],[83,0,63,7],[85,0,64,6],[85,15,64,13],[86,0,65,8,"key"],[86,15,65,13],[86,32,64,13],[87,0,66,8,"isTransitioning"],[87,27,66,25],[87,32,64,13],[88,0,67,8,"index"],[88,17,67,15],[88,18,64,13],[89,0,68,8,"routes"],[89,18,68,16],[90,0,70,12,"params"],[90,20,70,20,"action"],[90,27,70,27,"params"],[91,0,68,16],[91,13,71,15,"childState"],[91,23,68,16],[92,0,72,12,"key"],[92,17,72,17,"action"],[92,24,72,24,"key"],[92,27,72,17],[92,31,72,31],[92,63,68,16],[93,0,73,12,"routeName"],[93,23,73,23,"action"],[93,30,73,30,"routeName"],[94,0,68,16],[95,0,64,13],[95,9,64,6],[96,0,77,5],[98,0,79,4],[98,10,79,8,"initialChildRouter"],[98,28,79,4],[98,30,79,28],[99,0,80,6,"route"],[99,16,80,14,"initialChildRouter"],[99,35,80,33,"getStateForAction"],[99,52,80,14],[99,53,81,8,"NavigationActions"],[99,80,81,26,"navigate"],[99,88,81,8],[99,89,81,35],[100,0,82,10,"routeName"],[100,21,82,21,"initialRouteName"],[100,37,81,35],[101,0,83,10,"params"],[101,18,83,18,"initialRouteParams"],[102,0,81,35],[102,9,81,8],[102,10,80,14],[102,11,80,6],[103,0,86,5],[105,0,87,4],[105,10,87,10,"params"],[105,19,87,19],[105,20,87,20,"route"],[105,26,87,26,"params"],[105,32,87,20],[105,36,87,36,"action"],[105,43,87,43,"params"],[105,49,87,20],[105,53,87,53,"initialRouteParams"],[105,71,87,19],[105,94,88,10,"route"],[105,100,88,16,"params"],[105,106,88,10],[105,110,88,26],[105,112,87,19],[105,114,89,10,"action"],[105,121,89,17,"params"],[105,127,89,10],[105,131,89,27],[105,133,87,19],[105,135,90,10,"initialRouteParams"],[105,157,90,32],[105,159,87,19],[105,160,87,4],[107,0,51,35],[107,10,92,12,"initialRouteKey"],[107,25,51,35],[107,28,92,32,"stackConfig"],[107,39,51,35],[107,40,92,12,"initialRouteKey"],[107,55,51,35],[108,0,93,4,"route"],[108,32,94,9,"route"],[108,37,93,4],[108,39,95,10,"params"],[108,48,95,19],[109,0,95,21,"params"],[110,0,95,19],[110,7,95,10],[110,10,95,32],[110,12,93,4],[111,0,96,6,"routeName"],[111,19,96,17,"initialRouteName"],[111,35,93,4],[112,0,97,6,"key"],[112,13,97,11,"action"],[112,20,97,18,"key"],[112,23,97,11],[112,27,97,26,"initialRouteKey"],[112,46,97,45],[113,0,93,4],[114,0,99,4],[114,13,99,11],[115,0,100,6,"key"],[115,13,100,11],[115,30,99,11],[116,0,101,6,"isTransitioning"],[116,25,101,23],[116,30,99,11],[117,0,102,6,"index"],[117,15,102,13],[117,16,99,11],[118,0,103,6,"routes"],[118,16,103,14],[118,17,103,15,"route"],[118,22,103,14],[119,0,99,11],[119,7,99,4],[120,0,105,3],[122,0,24,51],[122,28,110,6],[122,61,110,23,"childRouters"],[122,73,110,6],[122,75,110,37,"routeConfigs"],[122,87,110,6],[122,89,110,51,"stackConfig"],[122,101,110,63,"paths"],[122,106,110,6],[122,107,24,51],[123,0,24,51],[123,8,108,4,"getPathAndParamsForRoute"],[123,32,24,51],[123,53,108,4,"getPathAndParamsForRoute"],[123,77,24,51],[124,0,24,51],[124,8,109,4,"getActionForPathAndParams"],[124,34,24,51],[124,55,109,4,"getActionForPathAndParams"],[124,80,24,51],[126,0,112,2],[126,11,112,9],[127,0,113,4,"childRouters"],[127,32,112,9],[128,0,115,4,"getComponentForState"],[128,26,112,9],[128,58,115,25,"state"],[128,63,112,9],[128,65,115,32],[129,0,116,6],[129,12,116,12,"activeChildRoute"],[129,31,116,31,"state"],[129,37,116,37,"routes"],[129,43,116,31],[129,44,116,44,"state"],[129,50,116,50,"index"],[129,55,116,31],[129,56,116,6],[130,0,115,32],[130,12,117,14,"routeName"],[130,21,115,32],[130,24,117,28,"activeChildRoute"],[130,40,115,32],[130,41,117,14,"routeName"],[130,50,115,32],[132,0,118,6],[132,12,118,10,"childRouters"],[132,25,118,23,"routeName"],[132,34,118,10],[132,35,118,6],[132,37,118,35],[133,0,119,8],[133,17,119,15,"childRouters"],[133,30,119,28,"routeName"],[133,39,119,15],[133,41,119,39,"getComponentForState"],[133,61,119,15],[133,62,119,60,"activeChildRoute"],[133,78,119,15],[133,79,119,8],[134,0,120,7],[136,0,121,6],[136,15,121,13],[136,51,121,35,"routeConfigs"],[136,63,121,13],[136,65,121,49,"routeName"],[136,74,121,13],[136,75,121,6],[137,0,122,5],[137,7,112,9],[138,0,124,4,"getComponentForRouteName"],[138,30,112,9],[138,66,124,29,"routeName"],[138,75,112,9],[138,77,124,40],[139,0,125,6],[139,15,125,13],[139,51,125,35,"routeConfigs"],[139,63,125,13],[139,65,125,49,"routeName"],[139,74,125,13],[139,75,125,6],[140,0,126,5],[140,7,112,9],[141,0,128,4,"getActionCreators"],[141,23,112,9],[141,52,128,22,"route"],[141,57,112,9],[141,59,128,29,"navStateKey"],[141,70,112,9],[141,72,128,42],[142,0,129,6],[142,33,130,11,"getCustomActionCreators"],[142,57,130,35,"route"],[142,62,130,11],[142,64,130,42,"navStateKey"],[142,75,130,11],[142,76,129,6],[143,0,131,8,"pop"],[143,15,131,13],[143,28,131,14,"n"],[143,29,131,13],[143,31,131,17,"params"],[143,37,131,13],[144,0,131,13],[144,19,132,10,"StackActions"],[144,41,132,23,"pop"],[144,44,132,10],[145,0,133,12,"n"],[146,0,132,10],[146,15,134,15,"params"],[146,21,132,10],[146,23,131,13],[147,0,131,13],[147,11,129,6],[148,0,136,8,"popToTop"],[148,20,136,18],[149,0,136,18],[149,19,136,28,"StackActions"],[149,41,136,41,"popToTop"],[149,49,136,28],[149,50,136,50,"params"],[149,56,136,28],[149,57,136,18],[150,0,136,18],[150,11,129,6],[151,0,137,8,"push"],[151,16,137,14],[151,30,137,15,"routeName"],[151,39,137,14],[151,41,137,26,"params"],[151,47,137,14],[151,49,137,34,"action"],[151,55,137,14],[152,0,137,14],[152,19,138,10,"StackActions"],[152,41,138,23,"push"],[152,45,138,10],[152,46,138,28],[153,0,139,12,"routeName"],[153,34,138,28],[154,0,140,12,"params"],[154,28,138,28],[155,0,141,12,"action"],[156,0,138,28],[156,13,138,10],[156,14,137,14],[157,0,137,14],[157,11,129,6],[158,0,143,8,"replace"],[158,19,143,17],[158,36,143,18,"replaceWith"],[158,47,143,17],[158,49,143,31,"params"],[158,55,143,17],[158,57,143,39,"action"],[158,63,143,17],[158,65,143,47,"newKey"],[158,71,143,17],[158,73,143,58],[159,0,144,10],[159,16,144,14],[159,23,144,21,"replaceWith"],[159,34,144,14],[159,39,144,37],[159,47,144,10],[159,49,144,47],[160,0,145,12],[160,21,145,19,"StackActions"],[160,43,145,32,"replace"],[160,50,145,19],[160,51,145,40],[161,0,146,14,"routeName"],[161,27,146,25,"replaceWith"],[161,38,145,40],[162,0,147,14,"params"],[162,30,145,40],[163,0,148,14,"action"],[163,30,145,40],[164,0,149,14,"key"],[164,21,149,19,"route"],[164,27,149,25,"key"],[164,30,145,40],[165,0,150,14,"newKey"],[166,0,145,40],[166,15,145,19],[166,16,145,12],[167,0,152,11],[169,0,153,10],[169,36,154,12],[169,43,154,19,"replaceWith"],[169,54,154,12],[169,59,154,35],[169,67,153,10],[169,69,155,12],[169,109,153,10],[170,0,157,10],[170,36,158,12,"params"],[170,46,158,22],[170,50,157,10],[170,52,159,12],[170,121,157,10],[171,0,161,10],[171,36,162,12,"action"],[171,46,162,22],[171,50,161,10],[171,52,163,12],[171,127,161,10],[172,0,165,10],[172,36,166,12,"newKey"],[172,46,166,22],[172,50,165,10],[172,52,167,12],[172,127,165,10],[173,0,169,10],[173,19,169,17,"StackActions"],[173,41,169,30,"replace"],[173,48,169,17],[173,49,169,38,"replaceWith"],[173,60,169,17],[173,61,169,10],[174,0,170,9],[174,11,129,6],[175,0,171,8,"reset"],[175,17,171,15],[175,32,171,16,"actions"],[175,39,171,15],[175,41,171,25,"index"],[175,46,171,15],[176,0,171,15],[176,19,172,10,"StackActions"],[176,41,172,23,"reset"],[176,46,172,10],[176,47,172,29],[177,0,173,12,"actions"],[177,30,172,29],[178,0,174,12,"index"],[178,21,174,19,"index"],[178,30,174,28],[178,34,174,19],[178,37,174,35,"actions"],[178,45,174,43,"length"],[178,51,174,35],[178,54,174,52],[178,55,174,19],[178,58,174,56,"index"],[178,63,172,29],[179,0,175,12,"key"],[179,19,175,17,"navStateKey"],[180,0,172,29],[180,13,172,10],[180,14,171,15],[181,0,171,15],[181,11,129,6],[182,0,177,8,"dismiss"],[182,19,177,17],[183,0,177,17],[183,19,178,10,"NavigationActions"],[183,46,178,28,"back"],[183,50,178,10],[183,51,178,33],[184,0,179,12,"key"],[184,19,179,17,"navStateKey"],[185,0,178,33],[185,13,178,10],[185,14,177,17],[186,0,177,17],[187,0,129,6],[188,0,182,5],[188,7,112,9],[189,0,184,4,"getStateForAction"],[189,23,112,9],[189,52,184,22,"action"],[189,58,112,9],[189,60,184,30,"state"],[189,65,112,9],[189,67,184,37],[190,0,186,6],[190,12,186,10],[190,13,186,11,"state"],[190,18,186,6],[190,20,186,18],[191,0,187,8],[191,17,187,15,"getInitialState"],[191,33,187,31,"action"],[191,39,187,15],[191,40,187,8],[192,0,188,7],[194,0,190,6],[194,12,190,12,"activeChildRoute"],[194,31,190,31,"state"],[194,37,190,37,"routes"],[194,43,190,31],[194,44,190,44,"state"],[194,50,190,50,"index"],[194,55,190,31],[194,56,190,6],[196,0,192,6],[196,12,193,8],[196,13,193,9,"isResetToRootStack"],[196,32,193,28,"action"],[196,38,193,9],[196,39,193,8],[196,43,194,8,"action"],[196,50,194,15,"type"],[196,54,194,8],[196,59,194,24,"NavigationActions"],[196,86,194,42,"NAVIGATE"],[196,94,192,6],[196,96,195,8],[197,0,197,8],[197,14,197,14,"activeChildRouter"],[197,34,197,34,"childRouters"],[197,47,197,47,"activeChildRoute"],[197,64,197,64,"routeName"],[197,73,197,34],[197,74,197,8],[199,0,198,8],[199,14,198,12,"activeChildRouter"],[199,31,198,8],[199,33,198,31],[200,0,199,10],[200,16,199,16,"route"],[200,24,199,24,"activeChildRouter"],[200,42,199,42,"getStateForAction"],[200,59,199,24],[200,60,200,12,"action"],[200,66,199,24],[200,68,201,12,"activeChildRoute"],[200,84,199,24],[200,85,199,10],[202,0,203,10],[202,16,203,14,"route"],[202,26,203,24],[202,30,203,14],[202,34,203,32,"route"],[202,44,203,42,"activeChildRoute"],[202,60,203,10],[202,62,203,60],[203,0,204,12],[203,21,204,19,"StateUtils"],[203,41,204,30,"replaceAt"],[203,50,204,19],[203,51,205,14,"state"],[203,56,204,19],[203,58,206,14,"activeChildRoute"],[203,75,206,31,"key"],[203,78,204,19],[203,80,207,14,"route"],[203,85,204,19],[203,87,209,14,"action"],[203,94,209,21,"type"],[203,98,209,14],[203,103,209,30,"NavigationActions"],[203,130,209,48,"SET_PARAMS"],[203,140,204,19],[203,141,204,12],[204,0,211,11],[205,0,212,9],[206,0,213,7],[206,9,192,6],[206,15,213,13],[206,19,213,17,"action"],[206,26,213,24,"type"],[206,30,213,17],[206,35,213,33,"NavigationActions"],[206,62,213,51,"NAVIGATE"],[206,70,213,13],[206,72,213,61],[207,0,216,8],[207,31,216,31,"state"],[207,37,216,37,"routes"],[207,43,216,31],[207,44,216,44,"slice"],[207,49,216,31],[207,52,216,52,"reverse"],[207,59,216,31],[207,61,216,8],[207,221,216,63],[208,0,216,63],[210,0,216,63],[211,0,216,63],[212,0,216,63],[213,0,216,63],[214,0,216,63],[215,0,216,63],[216,0,216,63],[217,0,216,63],[219,0,216,63],[219,16,216,17,"childRoute"],[219,27,216,63],[220,0,217,10],[220,16,217,14,"childRouter"],[220,30,217,28,"childRouters"],[220,43,217,41,"childRoute"],[220,55,217,52,"routeName"],[220,64,217,28],[220,65,217,10],[221,0,218,10],[221,16,218,14,"childAction"],[221,30,219,12,"action"],[221,37,219,19,"routeName"],[221,46,219,12],[221,51,219,33,"childRoute"],[221,63,219,44,"routeName"],[221,72,219,12],[221,76,219,57,"action"],[221,83,219,64,"action"],[221,89,219,12],[221,92,220,16,"action"],[221,99,220,23,"action"],[221,105,219,12],[221,108,221,16,"action"],[221,114,218,10],[223,0,223,10],[223,16,223,14,"childRouter"],[223,27,223,10],[223,29,223,27],[224,0,224,12],[224,18,224,18,"nextRouteState"],[224,35,224,35,"childRouter"],[224,47,224,47,"getStateForAction"],[224,64,224,35],[224,65,225,14,"childAction"],[224,76,224,35],[224,78,226,14,"childRoute"],[224,89,224,35],[224,90,224,12],[226,0,229,12],[226,18,229,16,"nextRouteState"],[226,37,229,35],[226,41,229,16],[226,45,229,43,"nextRouteState"],[226,64,229,62,"childRoute"],[226,75,229,12],[226,77,229,74],[227,0,230,14],[227,20,230,20,"newState"],[227,31,230,31,"StateUtils"],[227,51,230,42,"replaceAndPrune"],[227,66,230,31],[227,67,231,16,"state"],[227,72,230,31],[227,74,232,16,"nextRouteState"],[227,91,232,33,"nextRouteState"],[227,106,232,48,"key"],[227,109,232,16],[227,112,232,54,"childRoute"],[227,124,232,65,"key"],[227,127,230,31],[227,129,233,16,"nextRouteState"],[227,146,233,33,"nextRouteState"],[227,160,233,16],[227,163,233,50,"childRoute"],[227,174,230,31],[227,175,230,14],[229,0,235,14],[229,41,236,19,"newState"],[229,49,235,14],[230,0,237,16,"isTransitioning"],[230,35,238,18,"state"],[230,41,238,24,"index"],[230,46,238,18],[230,51,238,34,"newState"],[230,60,238,43,"index"],[230,65,238,18],[230,68,239,22,"action"],[230,75,239,29,"immediate"],[230,84,239,22],[230,89,239,43],[230,93,238,18],[230,96,240,22,"state"],[230,102,240,28,"isTransitioning"],[231,0,235,14],[232,0,242,13],[233,0,243,11],[234,0,244,9],[235,0,245,7],[237,0,249,6],[237,12,250,8,"behavesLikePushAction"],[237,34,250,30,"action"],[237,40,250,8],[237,45,251,8,"childRouters"],[237,58,251,21,"action"],[237,65,251,28,"routeName"],[237,74,251,8],[237,80,251,43,"undefined"],[237,89,249,6],[237,91,252,8],[238,0,253,8],[238,14,253,14,"childRouter"],[238,29,253,28,"childRouters"],[238,42,253,41,"action"],[238,49,253,48,"routeName"],[238,58,253,28],[238,59,253,8],[240,0,254,8],[240,14,254,12,"route"],[240,20,254,8],[242,0,256,8],[242,34,257,10,"action"],[242,41,257,17,"type"],[242,45,257,10],[242,50,257,26,"StackActions"],[242,72,257,39,"PUSH"],[242,76,257,10],[242,80,257,47,"action"],[242,87,257,54,"key"],[242,90,257,47],[242,94,257,61],[242,98,256,8],[242,100,258,10],[242,153,256,8],[243,0,263,8],[243,14,263,14,"lastRouteIndex"],[243,31,263,31,"state"],[243,37,263,37,"routes"],[243,43,263,31],[243,44,263,44,"findIndex"],[243,53,263,31],[243,54,263,54],[243,67,263,59],[244,0,264,10],[244,16,264,14,"action"],[244,23,264,21,"key"],[244,26,264,10],[244,28,264,26],[245,0,265,12],[245,21,265,19,"r"],[245,23,265,21,"key"],[245,26,265,19],[245,31,265,29,"action"],[245,38,265,36,"key"],[245,41,265,12],[246,0,266,11],[246,13,264,10],[246,19,266,17],[247,0,267,12],[247,21,267,19,"r"],[247,23,267,21,"routeName"],[247,32,267,19],[247,37,267,35,"action"],[247,44,267,42,"routeName"],[247,53,267,12],[248,0,268,11],[249,0,269,9],[249,11,263,31],[249,12,263,8],[251,0,271,8],[251,14,271,12,"action"],[251,21,271,19,"type"],[251,25,271,12],[251,30,271,28,"StackActions"],[251,52,271,41,"PUSH"],[251,56,271,12],[251,60,271,49,"lastRouteIndex"],[251,79,271,68],[251,80,271,69],[251,81,271,8],[251,83,271,72],[252,0,273,10],[252,16,273,14,"state"],[252,22,273,20,"index"],[252,27,273,14],[252,32,273,30,"lastRouteIndex"],[252,46,273,14],[252,50,273,48],[252,51,273,49,"action"],[252,58,273,56,"params"],[252,64,273,10],[252,66,273,64],[253,0,274,12],[253,21,274,19],[253,25,274,12],[254,0,275,11],[256,0,278,10],[256,16,278,16,"routes"],[256,25,278,25,"state"],[256,31,278,31,"routes"],[256,37,278,25],[256,38,278,38,"slice"],[256,43,278,25],[256,44,278,44],[256,45,278,25],[256,47,278,47,"lastRouteIndex"],[256,64,278,64],[256,65,278,25],[256,66,278,10],[258,0,281,10],[258,16,281,14,"action"],[258,23,281,21,"params"],[258,29,281,10],[258,31,281,29],[259,0,282,12],[259,18,282,18,"route"],[259,28,282,26,"state"],[259,34,282,32,"routes"],[259,40,282,26],[259,41,282,39,"lastRouteIndex"],[259,55,282,26],[259,56,282,12],[260,0,283,12,"routes"],[260,21,283,19,"lastRouteIndex"],[260,35,283,12],[260,57,284,17,"route"],[260,64,283,12],[261,0,285,14,"params"],[261,42,286,19,"route"],[261,50,286,25,"params"],[261,56,285,14],[261,58,287,19,"action"],[261,65,287,26,"params"],[261,71,285,14],[262,0,283,12],[263,0,290,11],[265,0,292,10],[265,37,293,15,"state"],[265,42,292,10],[266,0,294,12,"isTransitioning"],[266,31,295,14,"state"],[266,37,295,20,"index"],[266,42,295,14],[266,47,295,30,"lastRouteIndex"],[266,61,295,14],[266,64,296,18,"action"],[266,71,296,25,"immediate"],[266,80,296,18],[266,85,296,39],[266,89,295,14],[266,92,297,18,"state"],[266,98,297,24,"isTransitioning"],[266,113,292,10],[267,0,298,12,"index"],[267,21,298,19,"lastRouteIndex"],[267,35,292,10],[268,0,299,12,"routes"],[269,0,292,10],[270,0,301,9],[272,0,303,8],[272,14,303,12,"childRouter"],[272,26,303,8],[272,28,303,25],[273,0,304,10],[273,16,304,16,"childAction"],[273,31,305,12,"action"],[273,38,305,19,"action"],[273,44,305,12],[273,48,305,29,"NavigationActions"],[273,75,305,47,"init"],[273,79,305,29],[273,80,305,52],[274,0,305,54,"params"],[274,22,305,62,"action"],[274,29,305,69,"params"],[275,0,305,52],[275,13,305,29],[275,14,304,10],[277,0,306,10,"route"],[278,0,307,12,"params"],[278,22,307,20,"action"],[278,29,307,27,"params"],[279,0,306,10],[279,15,309,15,"childRouter"],[279,28,309,27,"getStateForAction"],[279,45,309,15],[279,46,309,45,"childAction"],[279,58,309,15],[279,59,306,10],[280,0,310,12,"routeName"],[280,25,310,23,"action"],[280,32,310,30,"routeName"],[280,41,306,10],[281,0,311,12,"key"],[281,19,311,17,"action"],[281,26,311,24,"key"],[281,29,311,17],[281,33,311,31],[282,0,306,10],[283,0,313,9],[283,11,303,8],[283,17,313,15],[284,0,314,10,"route"],[284,21,314,18],[285,0,315,12,"params"],[285,22,315,20,"action"],[285,29,315,27,"params"],[285,35,314,18],[286,0,316,12,"routeName"],[286,25,316,23,"action"],[286,32,316,30,"routeName"],[286,41,314,18],[287,0,317,12,"key"],[287,19,317,17,"action"],[287,26,317,24,"key"],[287,29,317,17],[287,33,317,31],[288,0,314,18],[288,13,314,10],[289,0,319,9],[291,0,320,8],[291,35,321,13,"StateUtils"],[291,55,321,24,"push"],[291,59,321,13],[291,60,321,29,"state"],[291,65,321,13],[291,67,321,36,"route"],[291,73,321,13],[291,74,320,8],[292,0,322,10,"isTransitioning"],[292,29,322,27,"action"],[292,36,322,34,"immediate"],[292,45,322,27],[292,50,322,48],[293,0,320,8],[294,0,324,7],[294,9,249,6],[294,15,324,13],[294,19,325,8,"action"],[294,26,325,15,"type"],[294,30,325,8],[294,35,325,24,"StackActions"],[294,57,325,37,"PUSH"],[294,61,325,8],[294,65,326,8,"childRouters"],[294,78,326,21,"action"],[294,85,326,28,"routeName"],[294,94,326,8],[294,100,326,43,"undefined"],[294,109,324,13],[294,111,327,8],[295,0,329,8],[295,17,329,15,"state"],[295,22,329,8],[296,0,330,7],[298,0,333,6],[298,12,333,10,"behavesLikePushAction"],[298,34,333,32,"action"],[298,40,333,10],[298,41,333,6],[298,43,333,41],[299,0,334,8],[299,14,334,14,"childRouterNames"],[299,33,334,33,"Object"],[299,40,334,40,"keys"],[299,44,334,33],[299,45,334,45,"childRouters"],[299,57,334,33],[299,58,334,8],[301,0,335,8],[301,15,335,13],[301,19,335,17,"i"],[301,23,335,21],[301,24,335,8],[301,26,335,24,"i"],[301,30,335,28,"childRouterNames"],[301,47,335,45,"length"],[301,53,335,8],[301,55,335,53,"i"],[301,58,335,8],[301,60,335,58],[302,0,336,10],[302,16,336,16,"childRouterName"],[302,34,336,34,"childRouterNames"],[302,51,336,51,"i"],[302,52,336,34],[302,53,336,10],[303,0,337,10],[303,16,337,16,"childRouter"],[303,32,337,30,"childRouters"],[303,45,337,43,"childRouterName"],[303,60,337,30],[303,61,337,10],[305,0,338,10],[305,16,338,14,"childRouter"],[305,29,338,10],[305,31,338,27],[306,0,340,12],[306,18,340,18,"initChildRoute"],[306,35,340,35,"childRouter"],[306,49,340,47,"getStateForAction"],[306,66,340,35],[306,67,341,14,"NavigationActions"],[306,94,341,32,"init"],[306,98,341,14],[306,100,340,35],[306,101,340,12],[308,0,344,12],[308,18,344,18,"navigatedChildRoute"],[308,40,344,40,"childRouter"],[308,54,344,52,"getStateForAction"],[308,71,344,40],[308,72,345,14,"action"],[308,78,344,40],[308,80,346,14,"initChildRoute"],[308,94,344,40],[308,95,344,12],[310,0,348,12],[310,18,348,16,"routeToPush"],[310,32,348,30],[310,36,348,12],[312,0,349,12],[312,18,349,16,"navigatedChildRoute"],[312,42,349,40],[312,46,349,12],[312,48,349,46],[313,0,351,14,"routeToPush"],[313,30,351,28,"initChildRoute"],[313,44,351,14],[314,0,352,13],[314,15,349,12],[314,21,352,19],[314,25,352,23,"navigatedChildRoute"],[314,49,352,47,"initChildRoute"],[314,63,352,19],[314,65,352,63],[315,0,354,14,"routeToPush"],[315,30,354,28,"navigatedChildRoute"],[315,49,354,14],[316,0,355,13],[318,0,356,12],[318,18,356,16,"routeToPush"],[318,29,356,12],[318,31,356,29],[319,0,357,14],[319,20,357,20,"route"],[319,48,358,19,"routeToPush"],[319,59,357,20],[320,0,359,16,"routeName"],[320,29,359,27,"childRouterName"],[320,44,357,20],[321,0,360,16,"key"],[321,23,360,21,"action"],[321,30,360,28,"key"],[321,33,360,21],[321,37,360,35],[322,0,357,20],[322,18,357,14],[324,0,362,14],[324,41,363,19,"StateUtils"],[324,61,363,30,"push"],[324,65,363,19],[324,66,363,35,"state"],[324,71,363,19],[324,73,363,42,"route"],[324,80,363,19],[324,81,362,14],[325,0,364,16,"isTransitioning"],[325,35,364,33,"action"],[325,42,364,40,"immediate"],[325,51,364,33],[325,56,364,54],[326,0,362,14],[327,0,366,13],[328,0,367,11],[329,0,368,9],[330,0,369,7],[332,0,372,6],[332,12,372,10,"action"],[332,19,372,17,"type"],[332,23,372,10],[332,28,372,26,"StackActions"],[332,50,372,39,"POP_TO_TOP"],[332,60,372,6],[332,62,372,51],[333,0,375,8],[333,14,375,12,"action"],[333,21,375,19,"key"],[333,24,375,12],[333,28,375,26,"state"],[333,34,375,32,"key"],[333,37,375,26],[333,42,375,40,"action"],[333,49,375,47,"key"],[333,52,375,8],[333,54,375,52],[334,0,376,10],[334,19,376,17,"state"],[334,24,376,10],[335,0,377,9],[337,0,381,8],[337,14,381,12,"state"],[337,20,381,18,"index"],[337,25,381,12],[337,28,381,26],[337,29,381,8],[337,31,381,29],[338,0,382,10],[338,37,383,15,"state"],[338,42,382,10],[339,0,384,12,"isTransitioning"],[339,31,384,29,"action"],[339,38,384,36,"immediate"],[339,47,384,29],[339,52,384,50],[339,56,382,10],[340,0,385,12,"index"],[340,21,385,19],[340,22,382,10],[341,0,386,12,"routes"],[341,22,386,20],[341,23,386,21,"state"],[341,29,386,27,"routes"],[341,35,386,21],[341,36,386,34],[341,37,386,21],[341,38,386,20],[342,0,382,10],[343,0,388,9],[345,0,389,8],[345,17,389,15,"state"],[345,22,389,8],[346,0,390,7],[348,0,393,6],[348,12,393,10,"action"],[348,19,393,17,"type"],[348,23,393,10],[348,28,393,26,"StackActions"],[348,50,393,39,"REPLACE"],[348,57,393,6],[348,59,393,48],[349,0,394,8],[349,14,394,12,"routeIndex"],[349,24,394,8],[351,0,397,8],[351,14,397,12,"action"],[351,21,397,19,"key"],[351,24,397,12],[351,29,397,27,"undefined"],[351,38,397,12],[351,42,397,40,"state"],[351,48,397,46,"routes"],[351,54,397,40],[351,55,397,53,"length"],[351,61,397,8],[351,63,397,61],[352,0,398,10,"routeIndex"],[352,25,398,23,"state"],[352,31,398,29,"routes"],[352,37,398,23],[352,38,398,36,"length"],[352,44,398,23],[352,47,398,45],[352,48,398,10],[353,0,399,9],[353,11,397,8],[353,17,399,15],[354,0,400,10,"routeIndex"],[354,25,400,23,"state"],[354,31,400,29,"routes"],[354,37,400,23],[354,38,400,36,"findIndex"],[354,47,400,23],[354,48,400,46],[355,0,400,46],[355,21,400,51,"r"],[355,23,400,53,"key"],[355,26,400,51],[355,31,400,61,"action"],[355,38,400,68,"key"],[355,41,400,46],[356,0,400,46],[356,13,400,23],[356,14,400,10],[357,0,401,9],[359,0,404,8],[359,14,404,12,"routeIndex"],[359,29,404,27],[359,30,404,28],[359,31,404,8],[359,33,404,31],[360,0,405,10],[360,16,405,16,"childRouter"],[360,32,405,30,"childRouters"],[360,45,405,43,"action"],[360,52,405,50,"routeName"],[360,61,405,30],[360,62,405,10],[361,0,406,10],[361,16,406,14,"childState"],[361,29,406,27],[361,31,406,10],[363,0,407,10],[363,16,407,14,"childRouter"],[363,29,407,10],[363,31,407,27],[364,0,408,12],[364,18,408,18,"childAction"],[364,34,409,14,"action"],[364,41,409,21,"action"],[364,47,409,14],[364,51,410,14,"NavigationActions"],[364,78,410,32,"init"],[364,82,410,14],[364,83,410,37],[365,0,410,39,"params"],[365,24,410,47,"action"],[365,31,410,54,"params"],[366,0,410,37],[366,15,410,14],[366,16,408,12],[368,0,411,12,"childState"],[368,27,411,25,"childRouter"],[368,41,411,37,"getStateForAction"],[368,58,411,25],[368,59,411,55,"childAction"],[368,72,411,25],[368,73,411,12],[369,0,412,11],[371,0,413,10],[371,16,413,16,"routes"],[371,45,413,29,"state"],[371,51,413,35,"routes"],[371,57,413,16],[371,58,413,10],[373,0,414,10,"routes"],[373,20,414,17,"routeIndex"],[373,30,414,10],[374,0,415,12,"params"],[374,22,415,20,"action"],[374,29,415,27,"params"],[375,0,414,10],[375,15,417,15,"childState"],[375,25,414,10],[376,0,418,12,"routeName"],[376,25,418,23,"action"],[376,32,418,30,"routeName"],[376,41,414,10],[377,0,419,12,"key"],[377,19,419,17,"action"],[377,26,419,24,"newKey"],[377,32,419,17],[377,36,419,34],[378,0,414,10],[379,0,421,10],[379,37,421,22,"state"],[379,42,421,10],[380,0,421,29,"routes"],[381,0,421,10],[382,0,422,9],[383,0,423,7],[385,0,426,6],[385,12,427,8,"action"],[385,19,427,15,"type"],[385,23,427,8],[385,28,427,24,"StackActions"],[385,50,427,37,"COMPLETE_TRANSITION"],[385,69,427,8],[385,74,428,9,"action"],[385,81,428,16,"key"],[385,84,428,9],[385,88,428,23],[385,92,428,9],[385,96,428,31,"action"],[385,103,428,38,"key"],[385,106,428,31],[385,111,428,46,"state"],[385,117,428,52,"key"],[385,120,427,8],[385,125,429,8,"state"],[385,131,429,14,"isTransitioning"],[385,146,426,6],[385,148,430,8],[386,0,431,8],[386,35,432,13,"state"],[386,40,431,8],[387,0,433,10,"isTransitioning"],[387,29,433,27],[388,0,431,8],[389,0,435,7],[391,0,437,6],[391,12,437,10,"action"],[391,19,437,17,"type"],[391,23,437,10],[391,28,437,26,"NavigationActions"],[391,55,437,44,"SET_PARAMS"],[391,65,437,6],[391,67,437,56],[392,0,438,8],[392,14,438,14,"key"],[392,20,438,20,"action"],[392,27,438,27,"key"],[392,30,438,8],[393,0,439,8],[393,14,439,14,"lastRoute"],[393,26,439,26,"state"],[393,32,439,32,"routes"],[393,38,439,26],[393,39,439,39,"find"],[393,43,439,26],[393,44,439,44],[394,0,439,44],[394,19,439,53,"route"],[394,25,439,59,"key"],[394,28,439,53],[394,33,439,67,"key"],[394,36,439,44],[395,0,439,44],[395,11,439,26],[395,12,439,8],[397,0,440,8],[397,14,440,12,"lastRoute"],[397,23,440,8],[397,25,440,23],[398,0,441,10],[398,16,441,16,"params"],[398,43,442,15,"lastRoute"],[398,53,442,25,"params"],[398,59,441,16],[398,61,443,15,"action"],[398,68,443,22,"params"],[398,74,441,16],[398,75,441,10],[400,0,445,10],[400,16,445,16,"routes"],[400,46,445,29,"state"],[400,52,445,35,"routes"],[400,58,445,16],[400,59,445,10],[402,0,446,10,"routes"],[402,21,446,17,"state"],[402,27,446,23,"routes"],[402,33,446,17],[402,34,446,30,"indexOf"],[402,41,446,17],[402,42,446,38,"lastRoute"],[402,51,446,17],[402,52,446,10],[402,74,447,15,"lastRoute"],[402,83,446,10],[403,0,448,12,"params"],[404,0,446,10],[405,0,450,10],[405,37,451,15,"state"],[405,42,450,10],[406,0,452,12,"routes"],[407,0,450,10],[408,0,454,9],[409,0,455,7],[411,0,457,6],[411,12,457,10,"action"],[411,19,457,17,"type"],[411,23,457,10],[411,28,457,26,"StackActions"],[411,50,457,39,"RESET"],[411,55,457,6],[411,57,457,46],[412,0,459,8],[412,14,459,12,"action"],[412,21,459,19,"key"],[412,24,459,12],[412,28,459,26],[412,32,459,12],[412,36,459,34,"action"],[412,43,459,41,"key"],[412,46,459,34],[412,50,459,48,"state"],[412,56,459,54,"key"],[412,59,459,8],[412,61,459,59],[413,0,462,10],[413,19,462,17,"state"],[413,24,462,10],[414,0,463,9],[416,0,464,8],[416,14,464,14,"newStackActions"],[416,32,464,32,"action"],[416,39,464,39,"actions"],[416,46,464,8],[417,0,466,8],[417,35,467,13,"state"],[417,40,466,8],[418,0,468,10,"routes"],[418,20,468,18,"newStackActions"],[418,36,468,34,"map"],[418,39,468,18],[418,40,468,38],[418,66,468,56],[419,0,469,12],[419,18,469,18,"router"],[419,27,469,27,"childRouters"],[419,40,469,40,"newStackAction"],[419,55,469,55,"routeName"],[419,64,469,27],[419,65,469,12],[420,0,471,12],[420,18,471,16,"childState"],[420,31,471,29],[420,33,471,12],[422,0,473,12],[422,18,473,16,"router"],[422,24,473,12],[422,26,473,24],[423,0,474,14],[423,20,474,20,"childAction"],[423,36,475,16,"newStackAction"],[423,51,475,31,"action"],[423,57,475,16],[423,61,476,16,"NavigationActions"],[423,88,476,34,"init"],[423,92,476,16],[423,93,476,39],[424,0,476,41,"params"],[424,26,476,49,"newStackAction"],[424,41,476,64,"params"],[425,0,476,39],[425,17,476,16],[425,18,474,14],[427,0,478,14,"childState"],[427,29,478,27,"router"],[427,36,478,34,"getStateForAction"],[427,53,478,27],[427,54,478,52,"childAction"],[427,67,478,27],[427,68,478,14],[428,0,479,13],[430,0,481,12],[431,0,482,14,"params"],[431,24,482,22,"newStackAction"],[431,39,482,37,"params"],[432,0,481,12],[432,17,483,17,"childState"],[432,27,481,12],[433,0,484,14,"routeName"],[433,27,484,25,"newStackAction"],[433,42,484,40,"routeName"],[433,51,481,12],[434,0,485,14,"key"],[434,21,485,19,"newStackAction"],[434,36,485,34,"key"],[434,39,485,19],[434,43,485,41],[435,0,481,12],[436,0,487,11],[436,13,468,18],[436,14,466,8],[437,0,488,10,"index"],[437,19,488,17,"action"],[437,26,488,24,"index"],[438,0,466,8],[439,0,490,7],[441,0,492,6],[441,12,493,8,"action"],[441,19,493,15,"type"],[441,23,493,8],[441,28,493,24,"NavigationActions"],[441,55,493,42,"BACK"],[441,59,493,8],[441,63,494,8,"action"],[441,70,494,15,"type"],[441,74,494,8],[441,79,494,24,"StackActions"],[441,101,494,37,"POP"],[441,104,492,6],[441,106,495,8],[442,0,495,8],[442,14,496,16,"key"],[442,18,495,8],[442,21,496,38,"action"],[442,27,495,8],[442,28,496,16,"key"],[442,31,495,8],[443,0,495,8],[443,14,496,21,"n"],[443,15,495,8],[443,18,496,38,"action"],[443,24,495,8],[443,25,496,21,"n"],[443,26,495,8],[444,0,495,8],[444,14,496,24,"immediate"],[444,23,495,8],[444,26,496,38,"action"],[444,32,495,8],[444,33,496,24,"immediate"],[444,42,495,8],[445,0,497,8],[445,14,497,12,"backRouteIndex"],[445,31,497,29,"state"],[445,37,497,35,"index"],[445,42,497,8],[447,0,498,8],[447,14,498,12,"action"],[447,21,498,19,"type"],[447,25,498,12],[447,30,498,28,"StackActions"],[447,52,498,41,"POP"],[447,55,498,12],[447,59,498,48,"n"],[447,64,498,53],[447,68,498,8],[447,70,498,59],[448,0,501,10,"backRouteIndex"],[448,29,501,27,"Math"],[448,34,501,32,"max"],[448,37,501,27],[448,38,501,36],[448,39,501,27],[448,41,501,39,"state"],[448,47,501,45,"index"],[448,52,501,39],[448,55,501,53,"n"],[448,56,501,39],[448,59,501,57],[448,60,501,27],[448,61,501,10],[449,0,502,9],[449,11,498,8],[449,17,502,15],[449,21,502,19,"key"],[449,25,502,15],[449,27,502,24],[450,0,503,10],[450,16,503,16,"backRoute"],[450,28,503,28,"state"],[450,34,503,34,"routes"],[450,40,503,28],[450,41,503,41,"find"],[450,45,503,28],[450,46,503,46],[451,0,503,46],[451,21,503,55,"route"],[451,27,503,61,"key"],[451,30,503,55],[451,35,503,69,"key"],[451,39,503,46],[452,0,503,46],[452,13,503,28],[452,14,503,10],[453,0,504,10,"backRouteIndex"],[453,29,504,27,"state"],[453,35,504,33,"routes"],[453,41,504,27],[453,42,504,40,"indexOf"],[453,49,504,27],[453,50,504,48,"backRoute"],[453,59,504,27],[453,60,504,10],[454,0,505,9],[456,0,507,8],[456,14,507,12,"backRouteIndex"],[456,31,507,29],[456,32,507,8],[456,34,507,32],[457,0,508,10],[457,37,509,15,"state"],[457,42,508,10],[458,0,510,12,"routes"],[458,22,510,20,"state"],[458,28,510,26,"routes"],[458,34,510,20],[458,35,510,33,"slice"],[458,40,510,20],[458,41,510,39],[458,42,510,20],[458,44,510,42,"backRouteIndex"],[458,58,510,20],[458,59,508,10],[459,0,511,12,"index"],[459,21,511,19,"backRouteIndex"],[459,38,511,36],[459,39,508,10],[460,0,512,12,"isTransitioning"],[460,31,512,29,"immediate"],[460,45,512,43],[461,0,508,10],[462,0,514,9],[463,0,515,7],[465,0,520,6],[465,12,520,12,"keyIndex"],[465,23,520,23,"action"],[465,30,520,30,"key"],[465,33,520,23],[465,36,520,36,"StateUtils"],[465,56,520,47,"indexOf"],[465,63,520,36],[465,64,520,55,"state"],[465,69,520,36],[465,71,520,62,"action"],[465,78,520,69,"key"],[465,81,520,36],[465,82,520,23],[465,85,520,76],[465,86,520,77],[465,87,520,6],[467,0,524,6],[467,30,524,29,"state"],[467,36,524,35,"routes"],[467,42,524,29],[467,43,524,42,"slice"],[467,48,524,29],[467,51,524,50,"reverse"],[467,58,524,29],[467,60,524,6],[467,227,524,61],[468,0,524,61],[470,0,524,61],[471,0,524,61],[472,0,524,61],[473,0,524,61],[474,0,524,61],[475,0,524,61],[476,0,524,61],[477,0,524,61],[479,0,524,61],[479,14,524,15,"childRoute"],[479,26,524,61],[481,0,525,8],[481,14,525,12,"childRoute"],[481,27,525,23,"key"],[481,30,525,12],[481,35,525,31,"activeChildRoute"],[481,52,525,48,"key"],[481,55,525,8],[481,57,525,53],[482,0,527,10],[483,0,528,9],[485,0,532,8],[485,14,532,12,"keyIndex"],[485,26,532,24],[485,27,532,12],[485,31,532,29,"childRoute"],[485,44,532,40,"key"],[485,47,532,29],[485,52,532,48,"action"],[485,59,532,55,"key"],[485,62,532,8],[485,64,532,60],[486,0,533,10],[487,0,534,9],[489,0,535,8],[489,14,535,12,"childRouter"],[489,30,535,26,"childRouters"],[489,43,535,39,"childRoute"],[489,56,535,50,"routeName"],[489,65,535,26],[489,66,535,8],[491,0,536,8],[491,14,536,12,"childRouter"],[491,27,536,8],[491,29,536,25],[492,0,537,10],[492,16,537,16,"route"],[492,26,537,24,"childRouter"],[492,40,537,36,"getStateForAction"],[492,57,537,24],[492,58,537,54,"action"],[492,64,537,24],[492,66,537,62,"childRoute"],[492,78,537,24],[492,79,537,10],[494,0,539,10],[494,16,539,14,"route"],[494,28,539,24],[494,32,539,10],[494,34,539,30],[495,0,540,12],[495,21,540,19,"state"],[495,26,540,12],[496,0,541,11],[496,13,539,10],[496,19,541,17],[496,23,541,21,"route"],[496,34,541,30,"route"],[496,46,541,40,"childRoute"],[496,58,541,17],[496,60,541,52],[497,0,542,12],[497,21,542,19,"StateUtils"],[497,41,542,30,"replaceAt"],[497,50,542,19],[497,51,543,14,"state"],[497,56,542,19],[497,58,544,14,"childRoute"],[497,71,544,25,"key"],[497,74,542,19],[497,76,545,14,"route"],[497,83,542,19],[497,85,547,14,"action"],[497,92,547,21,"type"],[497,96,547,14],[497,101,547,30,"NavigationActions"],[497,128,547,48,"SET_PARAMS"],[497,138,542,19],[497,139,542,12],[498,0,549,11],[499,0,550,9],[500,0,551,7],[502,0,553,6],[502,15,553,13,"state"],[502,20,553,6],[503,0,554,5],[503,7,112,9],[504,0,556,4,"getPathAndParamsForState"],[504,30,112,9],[504,66,556,29,"state"],[504,71,112,9],[504,73,556,36],[505,0,557,6],[505,12,557,12,"route"],[505,20,557,20,"state"],[505,26,557,26,"routes"],[505,32,557,20],[505,33,557,33,"state"],[505,39,557,39,"index"],[505,44,557,20],[505,45,557,6],[506,0,558,6],[506,15,558,13,"getPathAndParamsForRoute"],[506,40,558,38,"route"],[506,45,558,13],[506,46,558,6],[507,0,559,5],[507,7,112,9],[508,0,561,4,"getActionForPathAndParams"],[508,31,112,9],[508,68,561,30,"path"],[508,72,112,9],[508,74,561,36,"params"],[508,80,112,9],[508,82,561,44],[509,0,562,6],[509,15,562,13,"getActionForPathAndParams"],[509,42,562,39,"path"],[509,46,562,13],[509,48,562,45,"params"],[509,54,562,13],[509,55,562,6],[510,0,563,5],[510,7,112,9],[511,0,565,4,"getScreenOptions"],[511,24,565,22],[511,57,566,6,"routeConfigs"],[511,69,565,22],[511,71,567,6,"stackConfig"],[511,83,567,18,"navigationOptions"],[511,100,565,22],[512,0,112,9],[512,5,112,2],[513,0,570,1],[513,3]]},"type":"js/module"}]}