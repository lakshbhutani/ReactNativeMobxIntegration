{"dependencies":[{"name":"../utils/invariant","isAsync":false},{"name":"../utils/shallowEqual","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = ScenesReducer;\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"../utils/invariant\"));\n\n  var _shallowEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"../utils/shallowEqual\"));\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var SCENE_KEY_PREFIX = 'scene_';\n\n  function compareKey(one, two) {\n    var delta = one.length - two.length;\n\n    if (delta > 0) {\n      return 1;\n    }\n\n    if (delta < 0) {\n      return -1;\n    }\n\n    return one > two ? 1 : -1;\n  }\n\n  function compareScenes(one, two) {\n    if (one.index > two.index) {\n      return 1;\n    }\n\n    if (one.index < two.index) {\n      return -1;\n    }\n\n    return compareKey(one.key, two.key);\n  }\n\n  function areScenesShallowEqual(one, two) {\n    return one.key === two.key && one.index === two.index && one.isStale === two.isStale && one.isActive === two.isActive && areRoutesShallowEqual(one.route, two.route);\n  }\n\n  function areRoutesShallowEqual(one, two) {\n    if (!one || !two) {\n      return one === two;\n    }\n\n    if (one.key !== two.key) {\n      return false;\n    }\n\n    return (0, _shallowEqual.default)(one, two);\n  }\n\n  function ScenesReducer(scenes, nextState, prevState, descriptors) {\n    scenes.forEach(function (scene) {\n      var route = scene.route;\n\n      if (descriptors && descriptors[route.key]) {\n        scene.descriptor = descriptors[route.key];\n      }\n    });\n\n    if (prevState === nextState) {\n      return scenes;\n    }\n\n    var prevScenes = new Map();\n    var freshScenes = new Map();\n    var staleScenes = new Map();\n    scenes.forEach(function (scene) {\n      var key = scene.key;\n\n      if (scene.isStale) {\n        staleScenes.set(key, scene);\n      }\n\n      prevScenes.set(key, scene);\n    });\n    var nextKeys = new Set();\n    nextState.routes.forEach(function (route, index) {\n      var key = SCENE_KEY_PREFIX + route.key;\n      var descriptor = descriptors && descriptors[route.key];\n      var scene = {\n        index: index,\n        isActive: false,\n        isStale: false,\n        key: key,\n        route: route,\n        descriptor: descriptor\n      };\n      (0, _invariant.default)(!nextKeys.has(key), \"navigation.state.routes[\" + index + \"].key \\\"\" + key + \"\\\" conflicts with \" + 'another route!');\n      nextKeys.add(key);\n\n      if (staleScenes.has(key)) {\n        staleScenes.delete(key);\n      }\n\n      freshScenes.set(key, scene);\n    });\n\n    if (prevState) {\n      prevState.routes.forEach(function (route, index) {\n        var key = SCENE_KEY_PREFIX + route.key;\n\n        if (freshScenes.has(key)) {\n          return;\n        }\n\n        var lastScene = scenes.find(function (scene) {\n          return scene.route.key === route.key;\n        });\n        var descriptor = lastScene ? lastScene.descriptor : descriptors[route.key];\n\n        if (descriptor) {\n          staleScenes.set(key, {\n            index: index,\n            isActive: false,\n            isStale: true,\n            key: key,\n            route: route,\n            descriptor: descriptor\n          });\n        }\n      });\n    }\n\n    var nextScenes = [];\n\n    var mergeScene = function mergeScene(nextScene) {\n      var key = nextScene.key;\n      var prevScene = prevScenes.has(key) ? prevScenes.get(key) : null;\n\n      if (prevScene && areScenesShallowEqual(prevScene, nextScene)) {\n        nextScenes.push(prevScene);\n      } else {\n        nextScenes.push(nextScene);\n      }\n    };\n\n    staleScenes.forEach(mergeScene);\n    freshScenes.forEach(mergeScene);\n    nextScenes.sort(compareScenes);\n    var activeScenesCount = 0;\n    nextScenes.forEach(function (scene, ii) {\n      var isActive = !scene.isStale && scene.index === nextState.index;\n\n      if (isActive !== scene.isActive) {\n        nextScenes[ii] = _objectSpread({}, scene, {\n          isActive: isActive\n        });\n      }\n\n      if (isActive) {\n        activeScenesCount++;\n      }\n    });\n    (0, _invariant.default)(activeScenesCount === 1, 'there should always be only one scene active, not %s.', activeScenesCount);\n\n    if (nextScenes.length !== scenes.length) {\n      return nextScenes;\n    }\n\n    if (nextScenes.some(function (scene, index) {\n      return !areScenesShallowEqual(scenes[index], scene);\n    })) {\n      return nextScenes;\n    }\n\n    return scenes;\n  }\n});","map":[[7,0,1,0],[9,0,2,0],[17,0,4,0],[17,6,4,6,"SCENE_KEY_PREFIX"],[17,25,4,25],[17,33,4,0],[19,0,9,0],[19,11,9,9,"compareKey"],[19,21,9,0],[19,22,9,20,"one"],[19,25,9,0],[19,27,9,25,"two"],[19,30,9,0],[19,32,9,30],[20,0,10,2],[20,8,10,8,"delta"],[20,16,10,16,"one"],[20,20,10,20,"length"],[20,26,10,16],[20,29,10,29,"two"],[20,33,10,33,"length"],[20,39,10,2],[22,0,11,2],[22,8,11,6,"delta"],[22,16,11,14],[22,17,11,2],[22,19,11,17],[23,0,12,4],[23,13,12,11],[23,14,12,4],[24,0,13,3],[26,0,14,2],[26,8,14,6,"delta"],[26,16,14,14],[26,17,14,2],[26,19,14,17],[27,0,15,4],[27,13,15,11],[27,14,15,12],[27,15,15,4],[28,0,16,3],[30,0,17,2],[30,11,17,9,"one"],[30,17,17,15,"two"],[30,20,17,9],[30,23,17,21],[30,24,17,9],[30,27,17,25],[30,28,17,26],[30,29,17,2],[31,0,18,1],[33,0,23,0],[33,11,23,9,"compareScenes"],[33,24,23,0],[33,25,23,23,"one"],[33,28,23,0],[33,30,23,28,"two"],[33,33,23,0],[33,35,23,33],[34,0,24,2],[34,8,24,6,"one"],[34,12,24,10,"index"],[34,17,24,6],[34,20,24,18,"two"],[34,24,24,22,"index"],[34,29,24,2],[34,31,24,29],[35,0,25,4],[35,13,25,11],[35,14,25,4],[36,0,26,3],[38,0,27,2],[38,8,27,6,"one"],[38,12,27,10,"index"],[38,17,27,6],[38,20,27,18,"two"],[38,24,27,22,"index"],[38,29,27,2],[38,31,27,29],[39,0,28,4],[39,13,28,11],[39,14,28,12],[39,15,28,4],[40,0,29,3],[42,0,31,2],[42,11,31,9,"compareKey"],[42,22,31,20,"one"],[42,26,31,24,"key"],[42,29,31,9],[42,31,31,29,"two"],[42,35,31,33,"key"],[42,38,31,9],[42,39,31,2],[43,0,32,1],[45,0,37,0],[45,11,37,9,"areScenesShallowEqual"],[45,32,37,0],[45,33,37,31,"one"],[45,36,37,0],[45,38,37,36,"two"],[45,41,37,0],[45,43,37,41],[46,0,38,2],[46,11,38,9,"one"],[46,15,38,13,"key"],[46,18,38,9],[46,23,38,21,"two"],[46,27,38,25,"key"],[46,30,38,9],[46,34,38,32,"one"],[46,38,38,36,"index"],[46,43,38,32],[46,48,38,46,"two"],[46,52,38,50,"index"],[46,57,38,9],[46,61,38,59,"one"],[46,65,38,63,"isStale"],[46,72,38,59],[46,77,38,75,"two"],[46,81,38,79,"isStale"],[46,88,38,9],[46,92,38,90,"one"],[46,96,38,94,"isActive"],[46,104,38,90],[46,109,38,107,"two"],[46,113,38,111,"isActive"],[46,121,38,9],[46,125,38,123,"areRoutesShallowEqual"],[46,147,38,145,"one"],[46,151,38,149,"route"],[46,156,38,123],[46,158,38,156,"two"],[46,162,38,160,"route"],[46,167,38,123],[46,168,38,2],[47,0,39,1],[49,0,44,0],[49,11,44,9,"areRoutesShallowEqual"],[49,32,44,0],[49,33,44,31,"one"],[49,36,44,0],[49,38,44,36,"two"],[49,41,44,0],[49,43,44,41],[50,0,45,2],[50,8,45,6],[50,9,45,7,"one"],[50,12,45,6],[50,16,45,14],[50,17,45,15,"two"],[50,20,45,2],[50,22,45,20],[51,0,46,4],[51,13,46,11,"one"],[51,21,46,19,"two"],[51,24,46,4],[52,0,47,3],[54,0,49,2],[54,8,49,6,"one"],[54,12,49,10,"key"],[54,15,49,6],[54,20,49,18,"two"],[54,24,49,22,"key"],[54,27,49,2],[54,29,49,27],[55,0,50,4],[55,13,50,11],[55,18,50,4],[56,0,51,3],[58,0,53,2],[58,11,53,9],[58,38,53,22,"one"],[58,41,53,9],[58,43,53,27,"two"],[58,46,53,9],[58,47,53,2],[59,0,54,1],[61,0,56,15],[61,11,56,24,"ScenesReducer"],[61,24,56,15],[61,25,56,38,"scenes"],[61,31,56,15],[61,33,56,46,"nextState"],[61,42,56,15],[61,44,56,57,"prevState"],[61,53,56,15],[61,55,56,68,"descriptors"],[61,66,56,15],[61,68,56,81],[62,0,60,2,"scenes"],[62,11,60,9,"forEach"],[62,18,60,2],[62,19,60,17],[62,36,60,26],[63,0,60,26],[63,10,61,12,"route"],[63,15,60,26],[63,18,61,22,"scene"],[63,23,60,26],[63,24,61,12,"route"],[63,29,60,26],[65,0,62,4],[65,10,62,8,"descriptors"],[65,25,62,23,"descriptors"],[65,37,62,35,"route"],[65,43,62,41,"key"],[65,46,62,23],[65,47,62,4],[65,49,62,47],[66,0,63,6,"scene"],[66,14,63,12,"descriptor"],[66,24,63,6],[66,27,63,25,"descriptors"],[66,39,63,37,"route"],[66,45,63,43,"key"],[66,48,63,25],[66,49,63,6],[67,0,64,5],[68,0,65,3],[68,5,60,2],[70,0,68,2],[70,8,68,6,"prevState"],[70,22,68,20,"nextState"],[70,31,68,2],[70,33,68,31],[71,0,69,4],[71,13,69,11,"scenes"],[71,19,69,4],[72,0,70,3],[74,0,72,2],[74,8,72,8,"prevScenes"],[74,21,72,21],[74,25,72,25,"Map"],[74,28,72,21],[74,30,72,2],[75,0,73,2],[75,8,73,8,"freshScenes"],[75,22,73,22],[75,26,73,26,"Map"],[75,29,73,22],[75,31,73,2],[76,0,74,2],[76,8,74,8,"staleScenes"],[76,22,74,22],[76,26,74,26,"Map"],[76,29,74,22],[76,31,74,2],[77,0,77,2,"scenes"],[77,11,77,9,"forEach"],[77,18,77,2],[77,19,77,17],[77,36,77,26],[78,0,77,26],[78,10,78,12,"key"],[78,13,77,26],[78,16,78,20,"scene"],[78,21,77,26],[78,22,78,12,"key"],[78,25,77,26],[80,0,79,4],[80,10,79,8,"scene"],[80,16,79,14,"isStale"],[80,23,79,4],[80,25,79,23],[81,0,80,6,"staleScenes"],[81,20,80,18,"set"],[81,23,80,6],[81,24,80,22,"key"],[81,27,80,6],[81,29,80,27,"scene"],[81,34,80,6],[82,0,81,5],[84,0,82,4,"prevScenes"],[84,17,82,15,"set"],[84,20,82,4],[84,21,82,19,"key"],[84,24,82,4],[84,26,82,24,"scene"],[84,31,82,4],[85,0,83,3],[85,5,77,2],[86,0,85,2],[86,8,85,8,"nextKeys"],[86,19,85,19],[86,23,85,23,"Set"],[86,26,85,19],[86,28,85,2],[87,0,86,2,"nextState"],[87,14,86,12,"routes"],[87,20,86,2],[87,21,86,19,"forEach"],[87,28,86,2],[87,29,86,27],[87,39,86,28,"route"],[87,44,86,27],[87,46,86,35,"index"],[87,51,86,27],[87,53,86,45],[88,0,87,4],[88,10,87,10,"key"],[88,16,87,16,"SCENE_KEY_PREFIX"],[88,35,87,35,"route"],[88,41,87,41,"key"],[88,44,87,4],[89,0,89,4],[89,10,89,8,"descriptor"],[89,23,89,21,"descriptors"],[89,38,89,36,"descriptors"],[89,50,89,48,"route"],[89,56,89,54,"key"],[89,59,89,36],[89,60,89,4],[90,0,91,4],[90,10,91,10,"scene"],[90,18,91,18],[91,0,92,6,"index"],[91,20,91,18],[92,0,93,6,"isActive"],[92,18,93,16],[92,23,91,18],[93,0,94,6,"isStale"],[93,17,94,15],[93,22,91,18],[94,0,95,6,"key"],[94,16,91,18],[95,0,96,6,"route"],[95,20,91,18],[96,0,97,6,"descriptor"],[97,0,91,18],[97,7,91,4],[98,0,99,4],[98,30,99,14],[98,31,99,15,"nextKeys"],[98,40,99,24,"has"],[98,43,99,15],[98,44,99,28,"key"],[98,47,99,15],[98,48,99,4],[98,50,99,34],[98,79,99,61,"index"],[98,84,99,34],[98,100,99,76,"key"],[98,103,99,34],[98,129,99,101],[98,145,99,4],[99,0,100,4,"nextKeys"],[99,15,100,13,"add"],[99,18,100,4],[99,19,100,17,"key"],[99,22,100,4],[101,0,102,4],[101,10,102,8,"staleScenes"],[101,22,102,20,"has"],[101,25,102,8],[101,26,102,24,"key"],[101,29,102,8],[101,30,102,4],[101,32,102,30],[102,0,105,6,"staleScenes"],[102,20,105,18,"delete"],[102,26,105,6],[102,27,105,25,"key"],[102,30,105,6],[103,0,106,5],[105,0,107,4,"freshScenes"],[105,18,107,16,"set"],[105,21,107,4],[105,22,107,20,"key"],[105,25,107,4],[105,27,107,25,"scene"],[105,32,107,4],[106,0,108,3],[106,5,86,2],[108,0,110,2],[108,8,110,6,"prevState"],[108,17,110,2],[108,19,110,17],[109,0,112,4,"prevState"],[109,16,112,14,"routes"],[109,22,112,4],[109,23,112,21,"forEach"],[109,30,112,4],[109,31,112,29],[109,41,112,30,"route"],[109,46,112,29],[109,48,112,37,"index"],[109,53,112,29],[109,55,112,47],[110,0,113,6],[110,12,113,12,"key"],[110,18,113,18,"SCENE_KEY_PREFIX"],[110,37,113,37,"route"],[110,43,113,43,"key"],[110,46,113,6],[112,0,114,6],[112,12,114,10,"freshScenes"],[112,24,114,22,"has"],[112,27,114,10],[112,28,114,26,"key"],[112,31,114,10],[112,32,114,6],[112,34,114,32],[113,0,115,8],[114,0,116,7],[116,0,117,6],[116,12,117,12,"lastScene"],[116,24,117,24,"scenes"],[116,31,117,31,"find"],[116,35,117,24],[116,36,117,36],[117,0,117,36],[117,17,117,45,"scene"],[117,23,117,51,"route"],[117,28,117,45],[117,29,117,57,"key"],[117,32,117,45],[117,37,117,65,"route"],[117,43,117,71,"key"],[117,46,117,36],[118,0,117,36],[118,9,117,24],[118,10,117,6],[119,0,124,6],[119,12,124,12,"descriptor"],[119,25,124,25,"lastScene"],[119,37,124,37,"lastScene"],[119,47,124,47,"descriptor"],[119,57,124,25],[119,60,124,60,"descriptors"],[119,72,124,72,"route"],[119,78,124,78,"key"],[119,81,124,60],[119,82,124,6],[121,0,126,6],[121,12,126,10,"descriptor"],[121,22,126,6],[121,24,126,22],[122,0,127,8,"staleScenes"],[122,22,127,20,"set"],[122,25,127,8],[122,26,127,24,"key"],[122,29,127,8],[122,31,127,29],[123,0,128,10,"index"],[123,24,127,29],[124,0,129,10,"isActive"],[124,22,129,20],[124,27,127,29],[125,0,130,10,"isStale"],[125,21,130,19],[125,25,127,29],[126,0,131,10,"key"],[126,20,127,29],[127,0,132,10,"route"],[127,24,127,29],[128,0,133,10,"descriptor"],[129,0,127,29],[129,11,127,8],[130,0,135,7],[131,0,136,5],[131,7,112,4],[132,0,137,3],[134,0,139,2],[134,8,139,8,"nextScenes"],[134,21,139,21],[134,23,139,2],[136,0,141,2],[136,8,141,8,"mergeScene"],[136,21,141,21],[136,30,141,8,"mergeScene"],[136,40,141,21],[136,52,141,34],[137,0,141,34],[137,10,142,12,"key"],[137,13,141,34],[137,16,142,20,"nextScene"],[137,25,141,34],[137,26,142,12,"key"],[137,29,141,34],[138,0,143,4],[138,10,143,10,"prevScene"],[138,22,143,22,"prevScenes"],[138,33,143,33,"has"],[138,36,143,22],[138,37,143,37,"key"],[138,40,143,22],[138,44,143,44,"prevScenes"],[138,55,143,55,"get"],[138,58,143,44],[138,59,143,59,"key"],[138,62,143,44],[138,63,143,22],[138,66,143,66],[138,70,143,4],[140,0,144,4],[140,10,144,8,"prevScene"],[140,23,144,21,"areScenesShallowEqual"],[140,45,144,43,"prevScene"],[140,54,144,21],[140,56,144,54,"nextScene"],[140,65,144,21],[140,66,144,4],[140,68,144,66],[141,0,147,6,"nextScenes"],[141,19,147,17,"push"],[141,23,147,6],[141,24,147,22,"prevScene"],[141,33,147,6],[142,0,148,5],[142,7,144,4],[142,13,148,11],[143,0,149,6,"nextScenes"],[143,19,149,17,"push"],[143,23,149,6],[143,24,149,22,"nextScene"],[143,33,149,6],[144,0,150,5],[145,0,151,3],[145,5,141,2],[147,0,153,2,"staleScenes"],[147,16,153,14,"forEach"],[147,23,153,2],[147,24,153,22,"mergeScene"],[147,34,153,2],[148,0,154,2,"freshScenes"],[148,16,154,14,"forEach"],[148,23,154,2],[148,24,154,22,"mergeScene"],[148,34,154,2],[149,0,156,2,"nextScenes"],[149,15,156,13,"sort"],[149,19,156,2],[149,20,156,18,"compareScenes"],[149,33,156,2],[150,0,158,2],[150,8,158,6,"activeScenesCount"],[150,28,158,26],[150,29,158,2],[151,0,159,2,"nextScenes"],[151,15,159,13,"forEach"],[151,22,159,2],[151,23,159,21],[151,33,159,22,"scene"],[151,38,159,21],[151,40,159,29,"ii"],[151,42,159,21],[151,44,159,36],[152,0,160,4],[152,10,160,10,"isActive"],[152,21,160,21],[152,22,160,22,"scene"],[152,28,160,28,"isStale"],[152,35,160,21],[152,39,160,39,"scene"],[152,45,160,45,"index"],[152,50,160,39],[152,55,160,55,"nextState"],[152,65,160,65,"index"],[152,70,160,4],[154,0,161,4],[154,10,161,8,"isActive"],[154,23,161,21,"scene"],[154,29,161,27,"isActive"],[154,37,161,4],[154,39,161,37],[155,0,162,6,"nextScenes"],[155,19,162,17,"ii"],[155,21,162,6],[155,43,163,11,"scene"],[155,48,162,6],[156,0,164,8,"isActive"],[157,0,162,6],[158,0,166,5],[160,0,167,4],[160,10,167,8,"isActive"],[160,18,167,4],[160,20,167,18],[161,0,168,6,"activeScenesCount"],[162,0,169,5],[163,0,170,3],[163,5,159,2],[164,0,172,2],[164,28,172,12,"activeScenesCount"],[164,50,172,34],[164,51,172,2],[164,53,172,37],[164,108,172,2],[164,110,172,94,"activeScenesCount"],[164,127,172,2],[166,0,174,2],[166,8,174,6,"nextScenes"],[166,19,174,17,"length"],[166,25,174,6],[166,30,174,28,"scenes"],[166,37,174,35,"length"],[166,43,174,2],[166,45,174,43],[167,0,175,4],[167,13,175,11,"nextScenes"],[167,23,175,4],[168,0,176,3],[170,0,178,2],[170,8,178,6,"nextScenes"],[170,19,178,17,"some"],[170,23,178,6],[170,24,178,22],[170,34,178,23,"scene"],[170,39,178,22],[170,41,178,30,"index"],[170,46,178,22],[171,0,178,22],[171,13,178,40],[171,14,178,41,"areScenesShallowEqual"],[171,36,178,63,"scenes"],[171,43,178,70,"index"],[171,48,178,63],[171,49,178,41],[171,51,178,78,"scene"],[171,56,178,41],[171,57,178,22],[172,0,178,22],[172,5,178,6],[172,6,178,2],[172,8,178,87],[173,0,179,4],[173,13,179,11,"nextScenes"],[173,23,179,4],[174,0,180,3],[176,0,183,2],[176,11,183,9,"scenes"],[176,17,183,2],[177,0,184,1]]},"type":"js/module"}]}