{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = getChildEventSubscriber;\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  function getChildEventSubscriber(addListener, key) {\n    var actionSubscribers = new Set();\n    var willFocusSubscribers = new Set();\n    var didFocusSubscribers = new Set();\n    var willBlurSubscribers = new Set();\n    var didBlurSubscribers = new Set();\n\n    var removeAll = function removeAll() {\n      [actionSubscribers, willFocusSubscribers, didFocusSubscribers, willBlurSubscribers, didBlurSubscribers].forEach(function (set) {\n        return set.clear();\n      });\n      upstreamSubscribers.forEach(function (subs) {\n        return subs && subs.remove();\n      });\n    };\n\n    var getChildSubscribers = function getChildSubscribers(evtName) {\n      switch (evtName) {\n        case 'action':\n          return actionSubscribers;\n\n        case 'willFocus':\n          return willFocusSubscribers;\n\n        case 'didFocus':\n          return didFocusSubscribers;\n\n        case 'willBlur':\n          return willBlurSubscribers;\n\n        case 'didBlur':\n          return didBlurSubscribers;\n\n        default:\n          return null;\n      }\n    };\n\n    var emit = function emit(type, payload) {\n      var payloadWithType = _objectSpread({}, payload, {\n        type: type\n      });\n\n      var subscribers = getChildSubscribers(type);\n      subscribers && subscribers.forEach(function (subs) {\n        subs(payloadWithType);\n      });\n    };\n\n    var lastEmittedEvent = 'didBlur';\n    var upstreamEvents = ['willFocus', 'didFocus', 'willBlur', 'didBlur', 'action'];\n    var upstreamSubscribers = upstreamEvents.map(function (eventName) {\n      return addListener(eventName, function (payload) {\n        var state = payload.state,\n            lastState = payload.lastState,\n            action = payload.action;\n        var lastRoutes = lastState && lastState.routes;\n        var routes = state && state.routes;\n        var lastFocusKey = lastState && lastState.routes && lastState.routes[lastState.index].key;\n        var focusKey = routes && routes[state.index].key;\n        var isChildFocused = focusKey === key;\n        var lastRoute = lastRoutes && lastRoutes.find(function (route) {\n          return route.key === key;\n        });\n        var newRoute = routes && routes.find(function (route) {\n          return route.key === key;\n        });\n        var childPayload = {\n          context: key + \":\" + action.type + \"_\" + (payload.context || 'Root'),\n          state: newRoute,\n          lastState: lastRoute,\n          action: action,\n          type: eventName\n        };\n        var isTransitioning = !!state && state.isTransitioning;\n        var previouslyLastEmittedEvent = lastEmittedEvent;\n\n        if (lastEmittedEvent === 'didBlur') {\n          if (eventName === 'willFocus' && isChildFocused) {\n            emit(lastEmittedEvent = 'willFocus', childPayload);\n          } else if (eventName === 'action' && isChildFocused) {\n            emit(lastEmittedEvent = 'willFocus', childPayload);\n          }\n        }\n\n        if (lastEmittedEvent === 'willFocus') {\n          if (eventName === 'didFocus' && isChildFocused && !isTransitioning) {\n            emit(lastEmittedEvent = 'didFocus', childPayload);\n          } else if (eventName === 'action' && isChildFocused && !isTransitioning) {\n            emit(lastEmittedEvent = 'didFocus', childPayload);\n          }\n        }\n\n        if (lastEmittedEvent === 'didFocus') {\n          if (!isChildFocused) {\n            emit(lastEmittedEvent = 'willBlur', childPayload);\n          } else if (eventName === 'willBlur') {\n            emit(lastEmittedEvent = 'willBlur', childPayload);\n          } else if (eventName === 'action' && previouslyLastEmittedEvent === 'didFocus') {\n            emit('action', childPayload);\n          }\n        }\n\n        if (lastEmittedEvent === 'willBlur') {\n          if (eventName === 'action' && !isChildFocused && !isTransitioning) {\n            emit(lastEmittedEvent = 'didBlur', childPayload);\n          } else if (eventName === 'didBlur') {\n            emit(lastEmittedEvent = 'didBlur', childPayload);\n          }\n        }\n\n        if (lastEmittedEvent === 'didBlur' && !newRoute) {\n          removeAll();\n        }\n      });\n    });\n    return {\n      addListener: function addListener(eventName, eventHandler) {\n        var subscribers = getChildSubscribers(eventName);\n\n        if (!subscribers) {\n          throw new Error(\"Invalid event name \\\"\" + eventName + \"\\\"\");\n        }\n\n        subscribers.add(eventHandler);\n\n        var remove = function remove() {\n          subscribers.delete(eventHandler);\n        };\n\n        return {\n          remove: remove\n        };\n      }\n    };\n  }\n});","map":[[11,0,7,15],[11,11,7,24,"getChildEventSubscriber"],[11,34,7,15],[11,35,7,48,"addListener"],[11,46,7,15],[11,48,7,61,"key"],[11,51,7,15],[11,53,7,66],[12,0,8,2],[12,8,8,8,"actionSubscribers"],[12,28,8,28],[12,32,8,32,"Set"],[12,35,8,28],[12,37,8,2],[13,0,9,2],[13,8,9,8,"willFocusSubscribers"],[13,31,9,31],[13,35,9,35,"Set"],[13,38,9,31],[13,40,9,2],[14,0,10,2],[14,8,10,8,"didFocusSubscribers"],[14,30,10,30],[14,34,10,34,"Set"],[14,37,10,30],[14,39,10,2],[15,0,11,2],[15,8,11,8,"willBlurSubscribers"],[15,30,11,30],[15,34,11,34,"Set"],[15,37,11,30],[15,39,11,2],[16,0,12,2],[16,8,12,8,"didBlurSubscribers"],[16,29,12,29],[16,33,12,33,"Set"],[16,36,12,29],[16,38,12,2],[18,0,14,2],[18,8,14,8,"removeAll"],[18,20,14,20],[18,29,14,8,"removeAll"],[18,38,14,20],[18,41,14,26],[19,0,15,4],[19,7,16,6,"actionSubscribers"],[19,24,15,4],[19,26,17,6,"willFocusSubscribers"],[19,46,15,4],[19,48,18,6,"didFocusSubscribers"],[19,67,15,4],[19,69,19,6,"willBlurSubscribers"],[19,88,15,4],[19,90,20,6,"didBlurSubscribers"],[19,108,15,4],[19,110,21,6,"forEach"],[19,117,15,4],[19,118,21,14],[20,0,21,14],[20,15,21,21,"set"],[20,19,21,25,"clear"],[20,24,21,21],[20,26,21,14],[21,0,21,14],[21,7,15,4],[22,0,23,4,"upstreamSubscribers"],[22,26,23,24,"forEach"],[22,33,23,4],[22,34,23,32],[23,0,23,32],[23,15,23,40,"subs"],[23,23,23,48,"subs"],[23,28,23,53,"remove"],[23,34,23,48],[23,36,23,32],[24,0,23,32],[24,7,23,4],[25,0,24,3],[25,5,14,2],[27,0,26,2],[27,8,26,8,"getChildSubscribers"],[27,30,26,30],[27,39,26,8,"getChildSubscribers"],[27,58,26,30],[27,68,26,41],[28,0,27,4],[28,14,27,12,"evtName"],[28,21,27,4],[29,0,28,6],[29,13,28,11],[29,21,28,6],[30,0,29,8],[30,17,29,15,"actionSubscribers"],[30,34,29,8],[32,0,30,6],[32,13,30,11],[32,24,30,6],[33,0,31,8],[33,17,31,15,"willFocusSubscribers"],[33,37,31,8],[35,0,32,6],[35,13,32,11],[35,23,32,6],[36,0,33,8],[36,17,33,15,"didFocusSubscribers"],[36,36,33,8],[38,0,34,6],[38,13,34,11],[38,23,34,6],[39,0,35,8],[39,17,35,15,"willBlurSubscribers"],[39,36,35,8],[41,0,36,6],[41,13,36,11],[41,22,36,6],[42,0,37,8],[42,17,37,15,"didBlurSubscribers"],[42,35,37,8],[44,0,38,6],[45,0,39,8],[45,17,39,15],[45,21,39,8],[46,0,27,4],[47,0,41,3],[47,5,26,2],[49,0,43,2],[49,8,43,8,"emit"],[49,15,43,15],[49,24,43,8,"emit"],[49,28,43,15],[49,29,43,16,"type"],[49,33,43,15],[49,35,43,22,"payload"],[49,42,43,15],[49,44,43,34],[50,0,44,4],[50,10,44,10,"payloadWithType"],[50,46,44,33,"payload"],[50,53,44,10],[51,0,44,42,"type"],[52,0,44,10],[52,8,44,4],[54,0,45,4],[54,10,45,10,"subscribers"],[54,24,45,24,"getChildSubscribers"],[54,44,45,44,"type"],[54,48,45,24],[54,49,45,4],[55,0,46,4,"subscribers"],[55,21,47,6,"subscribers"],[55,33,47,18,"forEach"],[55,40,47,6],[55,41,47,26],[55,57,47,34],[56,0,48,8,"subs"],[56,13,48,13,"payloadWithType"],[56,28,48,8],[57,0,49,7],[57,7,47,6],[57,8,46,4],[58,0,50,3],[58,5,43,2],[60,0,56,2],[60,8,56,6,"lastEmittedEvent"],[60,27,56,25],[60,36,56,2],[61,0,58,2],[61,8,58,8,"upstreamEvents"],[61,25,58,25],[61,26,59,4],[61,37,58,25],[61,39,60,4],[61,49,58,25],[61,51,61,4],[61,61,58,25],[61,63,62,4],[61,72,58,25],[61,74,63,4],[61,82,58,25],[61,83,58,2],[62,0,66,2],[62,8,66,8,"upstreamSubscribers"],[62,30,66,30,"upstreamEvents"],[62,45,66,45,"map"],[62,48,66,30],[62,49,66,49],[63,0,66,49],[63,13,67,4,"addListener"],[63,25,67,16,"eventName"],[63,34,67,4],[63,36,67,27],[63,55,67,38],[64,0,67,38],[64,12,68,14,"state"],[64,17,67,38],[64,20,68,43,"payload"],[64,27,67,38],[64,28,68,14,"state"],[64,33,67,38],[65,0,67,38],[65,12,68,21,"lastState"],[65,21,67,38],[65,24,68,43,"payload"],[65,31,67,38],[65,32,68,21,"lastState"],[65,41,67,38],[66,0,67,38],[66,12,68,32,"action"],[66,18,67,38],[66,21,68,43,"payload"],[66,28,67,38],[66,29,68,32,"action"],[66,35,67,38],[67,0,69,6],[67,12,69,12,"lastRoutes"],[67,25,69,25,"lastState"],[67,38,69,38,"lastState"],[67,48,69,48,"routes"],[67,54,69,6],[68,0,70,6],[68,12,70,12,"routes"],[68,21,70,21,"state"],[68,30,70,30,"state"],[68,36,70,36,"routes"],[68,42,70,6],[69,0,72,6],[69,12,72,12,"lastFocusKey"],[69,27,73,8,"lastState"],[69,40,73,21,"lastState"],[69,50,73,31,"routes"],[69,56,73,8],[69,60,73,41,"lastState"],[69,70,73,51,"routes"],[69,76,73,41],[69,77,73,58,"lastState"],[69,87,73,68,"index"],[69,92,73,41],[69,94,73,75,"key"],[69,97,72,6],[70,0,74,6],[70,12,74,12,"focusKey"],[70,23,74,23,"routes"],[70,33,74,33,"routes"],[70,40,74,40,"state"],[70,46,74,46,"index"],[70,51,74,33],[70,53,74,53,"key"],[70,56,74,6],[71,0,76,6],[71,12,76,12,"isChildFocused"],[71,29,76,29,"focusKey"],[71,42,76,42,"key"],[71,45,76,6],[72,0,77,6],[72,12,77,12,"lastRoute"],[72,24,78,8,"lastRoutes"],[72,38,78,22,"lastRoutes"],[72,49,78,33,"find"],[72,53,78,22],[72,54,78,38],[73,0,78,38],[73,17,78,47,"route"],[73,23,78,53,"key"],[73,26,78,47],[73,31,78,61,"key"],[73,34,78,38],[74,0,78,38],[74,9,78,22],[74,10,77,6],[75,0,79,6],[75,12,79,12,"newRoute"],[75,23,79,23,"routes"],[75,33,79,33,"routes"],[75,40,79,40,"find"],[75,44,79,33],[75,45,79,45],[76,0,79,45],[76,17,79,54,"route"],[76,23,79,60,"key"],[76,26,79,54],[76,31,79,68,"key"],[76,34,79,45],[77,0,79,45],[77,9,79,33],[77,10,79,6],[78,0,80,6],[78,12,80,12,"childPayload"],[78,27,80,27],[79,0,81,8,"context"],[79,19,81,20,"key"],[79,22,81,8],[79,31,81,27,"action"],[79,38,81,34,"type"],[79,42,81,8],[79,52,81,42,"payload"],[79,60,81,50,"context"],[79,67,81,42],[79,71,81,61],[79,77,81,8],[79,78,80,27],[80,0,82,8,"state"],[80,17,82,15,"newRoute"],[80,25,80,27],[81,0,83,8,"lastState"],[81,21,83,19,"lastRoute"],[81,30,80,27],[82,0,84,8,"action"],[82,24,80,27],[83,0,85,8,"type"],[83,16,85,14,"eventName"],[84,0,80,27],[84,9,80,6],[85,0,87,6],[85,12,87,12,"isTransitioning"],[85,30,87,30],[85,31,87,31],[85,32,87,32,"state"],[85,37,87,30],[85,41,87,41,"state"],[85,47,87,47,"isTransitioning"],[85,62,87,6],[86,0,89,6],[86,12,89,12,"previouslyLastEmittedEvent"],[86,41,89,41,"lastEmittedEvent"],[86,57,89,6],[88,0,91,6],[88,12,91,10,"lastEmittedEvent"],[88,33,91,31],[88,42,91,6],[88,44,91,42],[89,0,93,8],[89,14,93,12,"eventName"],[89,28,93,26],[89,39,93,12],[89,43,93,41,"isChildFocused"],[89,57,93,8],[89,59,93,57],[90,0,94,10,"emit"],[90,17,94,16,"lastEmittedEvent"],[90,36,94,35],[90,47,94,10],[90,49,94,49,"childPayload"],[90,61,94,10],[91,0,95,9],[91,11,93,8],[91,17,95,15],[91,21,95,19,"eventName"],[91,35,95,33],[91,43,95,19],[91,47,95,45,"isChildFocused"],[91,61,95,15],[91,63,95,61],[92,0,96,10,"emit"],[92,17,96,16,"lastEmittedEvent"],[92,36,96,35],[92,47,96,10],[92,49,96,49,"childPayload"],[92,61,96,10],[93,0,97,9],[94,0,98,7],[96,0,99,6],[96,12,99,10,"lastEmittedEvent"],[96,33,99,31],[96,44,99,6],[96,46,99,44],[97,0,102,8],[97,14,102,12,"eventName"],[97,28,102,26],[97,38,102,12],[97,42,102,40,"isChildFocused"],[97,56,102,12],[97,60,102,58],[97,61,102,59,"isTransitioning"],[97,76,102,8],[97,78,102,76],[98,0,103,10,"emit"],[98,17,103,16,"lastEmittedEvent"],[98,36,103,35],[98,46,103,10],[98,48,103,48,"childPayload"],[98,60,103,10],[99,0,104,9],[99,11,102,8],[99,17,104,15],[99,21,105,10,"eventName"],[99,35,105,24],[99,43,105,10],[99,47,106,10,"isChildFocused"],[99,61,105,10],[99,65,107,10],[99,66,107,11,"isTransitioning"],[99,81,104,15],[99,83,108,10],[100,0,109,10,"emit"],[100,17,109,16,"lastEmittedEvent"],[100,36,109,35],[100,46,109,10],[100,48,109,48,"childPayload"],[100,60,109,10],[101,0,110,9],[102,0,111,7],[104,0,113,6],[104,12,113,10,"lastEmittedEvent"],[104,33,113,31],[104,43,113,6],[104,45,113,43],[105,0,115,8],[105,14,115,12],[105,15,115,13,"isChildFocused"],[105,29,115,8],[105,31,115,29],[106,0,117,10,"emit"],[106,17,117,16,"lastEmittedEvent"],[106,36,117,35],[106,46,117,10],[106,48,117,48,"childPayload"],[106,60,117,10],[107,0,118,9],[107,11,115,8],[107,17,118,15],[107,21,118,19,"eventName"],[107,35,118,33],[107,45,118,15],[107,47,118,45],[108,0,120,10,"emit"],[108,17,120,16,"lastEmittedEvent"],[108,36,120,35],[108,46,120,10],[108,48,120,48,"childPayload"],[108,60,120,10],[109,0,121,9],[109,11,118,15],[109,17,121,15],[109,21,122,10,"eventName"],[109,35,122,24],[109,43,122,10],[109,47,123,10,"previouslyLastEmittedEvent"],[109,78,123,41],[109,88,121,15],[109,90,124,10],[110,0,126,10,"emit"],[110,17,126,15],[110,25,126,10],[110,27,126,25,"childPayload"],[110,39,126,10],[111,0,127,9],[112,0,128,7],[114,0,130,6],[114,12,130,10,"lastEmittedEvent"],[114,33,130,31],[114,43,130,6],[114,45,130,43],[115,0,132,8],[115,14,132,12,"eventName"],[115,28,132,26],[115,36,132,12],[115,40,132,38],[115,41,132,39,"isChildFocused"],[115,55,132,12],[115,59,132,57],[115,60,132,58,"isTransitioning"],[115,75,132,8],[115,77,132,75],[116,0,135,10,"emit"],[116,17,135,16,"lastEmittedEvent"],[116,36,135,35],[116,45,135,10],[116,47,135,47,"childPayload"],[116,59,135,10],[117,0,136,9],[117,11,132,8],[117,17,136,15],[117,21,136,19,"eventName"],[117,35,136,33],[117,44,136,15],[117,46,136,44],[118,0,138,10,"emit"],[118,17,138,16,"lastEmittedEvent"],[118,36,138,35],[118,45,138,10],[118,47,138,47,"childPayload"],[118,59,138,10],[119,0,139,9],[120,0,140,7],[122,0,142,6],[122,12,142,10,"lastEmittedEvent"],[122,33,142,31],[122,42,142,10],[122,46,142,44],[122,47,142,45,"newRoute"],[122,55,142,6],[122,57,142,55],[123,0,143,8,"removeAll"],[124,0,144,7],[125,0,145,5],[125,7,67,4],[125,8,66,49],[126,0,66,49],[126,5,66,30],[126,6,66,2],[127,0,148,2],[127,11,148,9],[128,0,149,4,"addListener"],[128,17,148,9],[128,40,149,16,"eventName"],[128,49,148,9],[128,51,149,27,"eventHandler"],[128,63,148,9],[128,65,149,41],[129,0,150,6],[129,12,150,12,"subscribers"],[129,26,150,26,"getChildSubscribers"],[129,46,150,46,"eventName"],[129,55,150,26],[129,56,150,6],[131,0,151,6],[131,12,151,10],[131,13,151,11,"subscribers"],[131,24,151,6],[131,26,151,24],[132,0,152,8],[132,16,152,14],[132,20,152,18,"Error"],[132,25,152,14],[132,52,152,47,"eventName"],[132,61,152,14],[132,69,152,8],[133,0,153,7],[135,0,154,6,"subscribers"],[135,20,154,18,"add"],[135,23,154,6],[135,24,154,22,"eventHandler"],[135,36,154,6],[137,0,155,6],[137,12,155,12,"remove"],[137,21,155,21],[137,30,155,12,"remove"],[137,36,155,21],[137,39,155,27],[138,0,156,8,"subscribers"],[138,22,156,20,"delete"],[138,28,156,8],[138,29,156,27,"eventHandler"],[138,41,156,8],[139,0,157,7],[139,9,155,6],[141,0,158,6],[141,15,158,13],[142,0,158,15,"remove"],[143,0,158,13],[143,9,158,6],[144,0,159,5],[145,0,148,9],[145,5,148,2],[146,0,161,1]]},"type":"js/module"}]}