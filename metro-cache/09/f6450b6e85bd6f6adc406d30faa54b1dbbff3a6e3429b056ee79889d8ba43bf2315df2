{"dependencies":[{"name":"ReactNative","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  var ReactNative = _$$_REQUIRE(_dependencyMap[0], 'ReactNative');\n\n  var InternalScrollViewType = function (_ReactNative$NativeCo) {\n    \"use strict\";\n\n    function InternalScrollViewType() {\n      _classCallCheck(this, InternalScrollViewType);\n\n      return _possibleConstructorReturn(this, _getPrototypeOf(InternalScrollViewType).apply(this, arguments));\n    }\n\n    _createClass(InternalScrollViewType, [{\n      key: \"scrollTo\",\n      value: function scrollTo(y, x, animated) {}\n    }, {\n      key: \"flashScrollIndicators\",\n      value: function flashScrollIndicators() {}\n    }, {\n      key: \"scrollToEnd\",\n      value: function scrollToEnd(options) {}\n    }, {\n      key: \"scrollWithoutAnimationTo\",\n      value: function scrollWithoutAnimationTo() {\n        var y = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n        var x = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      }\n    }, {\n      key: \"getScrollResponder\",\n      value: function getScrollResponder() {}\n    }, {\n      key: \"getScrollableNode\",\n      value: function getScrollableNode() {}\n    }, {\n      key: \"getInnerViewNode\",\n      value: function getInnerViewNode() {}\n    }, {\n      key: \"scrollResponderScrollNativeHandleToKeyboard\",\n      value: function scrollResponderScrollNativeHandleToKeyboard(nodeHandle, additionalOffset, preventNegativeScrollOffset) {}\n    }, {\n      key: \"scrollResponderScrollTo\",\n      value: function scrollResponderScrollTo(x, y, animated) {}\n    }]);\n\n    _inherits(InternalScrollViewType, _ReactNative$NativeCo);\n\n    return InternalScrollViewType;\n  }(ReactNative.NativeComponent);\n\n  module.exports = InternalScrollViewType;\n});","map":[[18,0,11,0],[18,6,11,6,"ReactNative"],[18,20,11,20,"require"],[18,51,11,28],[18,64,11,20],[18,65,11,0],[20,6,17,6,"InternalScrollViewType"],[20,28],[31,31,19,4,"y"],[31,32],[31,34,20,4,"x"],[31,35],[31,37,21,4,"animated"],[31,45],[31,47,22,4],[31,48,22,6],[34,46,24,26],[34,47,24,28],[37,34,25,14,"options"],[37,41],[37,43,25,46],[37,44,25,48],[40,49,26,57],[41,0,26,57],[41,12,26,27,"y"],[41,13,26,57],[41,84,26,39],[41,85,26,57],[42,0,26,57],[42,12,26,42,"x"],[42,13,26,57],[42,84,26,54],[42,85,26,57],[43,0,26,59],[46,43,28,28],[46,44,28,30],[49,42,29,27],[49,43,29,29],[52,41,30,26],[52,42,30,28],[55,66,33,4,"nodeHandle"],[55,76],[55,78,34,4,"additionalOffset"],[55,94],[55,96,35,4,"preventNegativeScrollOffset"],[55,123],[55,125,36,4],[55,126,36,6],[58,46,39,4,"x"],[58,47],[58,49,40,4,"y"],[58,50],[58,52,41,4,"animated"],[58,60],[58,62,42,4],[58,63,42,6],[64,4,17,44,"ReactNative"],[64,16,17,56,"NativeComponent"],[64,31],[66,0,45,0,"module"],[66,9,45,7,"exports"],[66,16,45,0],[66,19,45,17,"InternalScrollViewType"],[66,41,45,0]]},"type":"js/module"}]}