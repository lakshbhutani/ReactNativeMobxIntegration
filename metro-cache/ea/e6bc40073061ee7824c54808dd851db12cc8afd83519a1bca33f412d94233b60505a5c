{"dependencies":[{"name":"react","isAsync":false},{"name":"./../../react-transform-hmr/lib/index.js","isAsync":false},{"name":"prop-types","isAsync":false},{"name":"./react-native","isAsync":false},{"name":"./ensure-native-module-available","isAsync":false},{"name":"./icon-button","isAsync":false},{"name":"./tab-bar-item-ios","isAsync":false},{"name":"./toolbar-android","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createIconSet;\n  exports.DEFAULT_ICON_COLOR = exports.DEFAULT_ICON_SIZE = exports.NativeIconAPI = void 0;\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../react-transform-hmr/lib/index.js\"));\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"prop-types\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[3], \"./react-native\");\n\n  var _ensureNativeModuleAvailable = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./ensure-native-module-available\"));\n\n  var _iconButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./icon-button\"));\n\n  var _tabBarItemIos = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./tab-bar-item-ios\"));\n\n  var _toolbarAndroid = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./toolbar-android\"));\n\n  var _jsxFileName = \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/react-native-vector-icons/lib/create-icon-set.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\n  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\n  function _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\n  function _iterableToArray(iter) { if ((typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\") in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\n  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  var _components = {\n    Icon: {\n      displayName: \"Icon\",\n      isInFunction: true\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/react-native-vector-icons/lib/create-icon-set.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var NativeIconAPI = _reactNative.NativeModules.RNVectorIconsManager || _reactNative.NativeModules.RNVectorIconsModule;\n  exports.NativeIconAPI = NativeIconAPI;\n  var DEFAULT_ICON_SIZE = 12;\n  exports.DEFAULT_ICON_SIZE = DEFAULT_ICON_SIZE;\n  var DEFAULT_ICON_COLOR = 'black';\n  exports.DEFAULT_ICON_COLOR = DEFAULT_ICON_COLOR;\n\n  function createIconSet(glyphMap, fontFamily, fontFile, fontStyle) {\n    var fontBasename = fontFile ? fontFile.replace(/\\.(otf|ttf)$/, '') : fontFamily;\n\n    var fontReference = _reactNative.Platform.select({\n      windows: \"Assets/\" + fontFile + \"#\" + fontFamily,\n      android: fontBasename,\n      web: fontBasename,\n      default: fontFamily\n    });\n\n    var IconNamePropType = _propTypes.default.oneOf(Object.keys(glyphMap));\n\n    var Icon = function (_PureComponent) {\n      function Icon() {\n        var _getPrototypeOf2;\n\n        var _temp, _this;\n\n        _classCallCheck(this, Icon);\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Icon)).call.apply(_getPrototypeOf2, [this].concat(args))), _this.root = null, _this.handleRef = function (ref) {\n          _this.root = ref;\n        }, _temp));\n      }\n\n      _createClass(Icon, [{\n        key: \"setNativeProps\",\n        value: function setNativeProps(nativeProps) {\n          if (this.root) {\n            this.root.setNativeProps(nativeProps);\n          }\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this$props = this.props,\n              name = _this$props.name,\n              size = _this$props.size,\n              color = _this$props.color,\n              style = _this$props.style,\n              props = _objectWithoutProperties(_this$props, [\"name\", \"size\", \"color\", \"style\"]);\n\n          var glyph = name ? glyphMap[name] || '?' : '';\n\n          if (typeof glyph === 'number') {\n            glyph = String.fromCharCode(glyph);\n          }\n\n          var styleDefaults = {\n            fontSize: size,\n            color: color\n          };\n          var styleOverrides = {\n            fontFamily: fontReference,\n            fontWeight: 'normal',\n            fontStyle: 'normal'\n          };\n          props.style = [styleDefaults, style, styleOverrides, fontStyle || {}];\n          props.ref = this.handleRef;\n          return _react.default.createElement(_reactNative.Text, _extends({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            }\n          }), glyph, this.props.children);\n        }\n      }]);\n\n      _inherits(Icon, _PureComponent);\n\n      return Icon;\n    }(_react.PureComponent);\n\n    Icon.propTypes = {\n      name: IconNamePropType,\n      size: _propTypes.default.number,\n      color: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n      children: _propTypes.default.node,\n      style: _propTypes.default.any\n    };\n    Icon.defaultProps = {\n      size: DEFAULT_ICON_SIZE,\n      allowFontScaling: false\n    };\n    Icon = _wrapComponent(\"Icon\")(Icon);\n    var imageSourceCache = {};\n\n    function getImageSource(name) {\n      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_ICON_SIZE;\n      var color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_ICON_COLOR;\n      (0, _ensureNativeModuleAvailable.default)();\n      var glyph = glyphMap[name] || '?';\n\n      if (typeof glyph === 'number') {\n        glyph = String.fromCharCode(glyph);\n      }\n\n      var processedColor = (0, _reactNative.processColor)(color);\n      var cacheKey = glyph + \":\" + size + \":\" + processedColor;\n\n      var scale = _reactNative.PixelRatio.get();\n\n      return new Promise(function (resolve, reject) {\n        var cached = imageSourceCache[cacheKey];\n\n        if (typeof cached !== 'undefined') {\n          if (!cached || cached instanceof Error) {\n            reject(cached);\n          } else {\n            resolve({\n              uri: cached,\n              scale: scale\n            });\n          }\n        } else {\n          NativeIconAPI.getImageForFont(fontReference, glyph, size, processedColor, function (err, image) {\n            var error = typeof err === 'string' ? new Error(err) : err;\n            imageSourceCache[cacheKey] = image || error || false;\n\n            if (!error && image) {\n              resolve({\n                uri: image,\n                scale: scale\n              });\n            } else {\n              reject(error);\n            }\n          });\n        }\n      });\n    }\n\n    function loadFont() {\n      var file = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : fontFile;\n\n      if (_reactNative.Platform.OS === 'ios') {\n        (0, _ensureNativeModuleAvailable.default)();\n\n        if (!file) {\n          return Promise.reject(new Error('Unable to load font, because no file was specified. '));\n        }\n\n        return NativeIconAPI.loadFontWithFileName.apply(NativeIconAPI, _toConsumableArray(file.split('.')));\n      }\n\n      return Promise.resolve();\n    }\n\n    function hasIcon(name) {\n      return Object.prototype.hasOwnProperty.call(glyphMap, name);\n    }\n\n    function getRawGlyphMap() {\n      return glyphMap;\n    }\n\n    function getFontFamily() {\n      return fontReference;\n    }\n\n    Icon.Button = (0, _iconButton.default)(Icon);\n    Icon.TabBarItem = (0, _tabBarItemIos.default)(IconNamePropType, getImageSource);\n    Icon.TabBarItemIOS = Icon.TabBarItem;\n    Icon.ToolbarAndroid = (0, _toolbarAndroid.default)(IconNamePropType, getImageSource);\n    Icon.getImageSource = getImageSource;\n    Icon.loadFont = loadFont;\n    Icon.hasIcon = hasIcon;\n    Icon.getRawGlyphMap = getRawGlyphMap;\n    Icon.getFontFamily = getFontFamily;\n    return Icon;\n  }\n});","map":[[8,0,1,0],[12,0,2,0],[14,0,3,0],[16,0,11,0],[18,0,12,0],[20,0,13,0],[22,0,14,0],[78,0,16,7],[78,6,16,13,"NativeIconAPI"],[78,22,17,2,"NativeModules"],[78,49,17,16,"RNVectorIconsManager"],[78,69,17,2],[78,73,17,40,"NativeModules"],[78,100,17,54,"RNVectorIconsModule"],[78,119,16,7],[80,0,19,7],[80,6,19,13,"DEFAULT_ICON_SIZE"],[80,26,19,33],[80,28,19,7],[82,0,20,7],[82,6,20,13,"DEFAULT_ICON_COLOR"],[82,27,20,34],[82,34,20,7],[85,0,22,15],[85,11,22,24,"createIconSet"],[85,24,22,15],[85,25,23,2,"glyphMap"],[85,33,22,15],[85,35,24,2,"fontFamily"],[85,45,22,15],[85,47,25,2,"fontFile"],[85,55,22,15],[85,57,26,2,"fontStyle"],[85,66,22,15],[85,68,27,2],[86,0,29,2],[86,8,29,8,"fontBasename"],[86,23,29,23,"fontFile"],[86,34,30,6,"fontFile"],[86,43,30,15,"replace"],[86,50,30,6],[86,51,30,23],[86,65,30,6],[86,67,30,39],[86,69,30,6],[86,70,29,23],[86,73,31,6,"fontFamily"],[86,83,29,2],[88,0,33,2],[88,8,33,8,"fontReference"],[88,24,33,24,"Platform"],[88,46,33,33,"select"],[88,52,33,24],[88,53,33,40],[89,0,34,4,"windows"],[89,27,34,23,"fontFile"],[89,35,34,4],[89,44,34,35,"fontFamily"],[89,54,33,40],[90,0,35,4,"android"],[90,15,35,13,"fontBasename"],[90,27,33,40],[91,0,36,4,"web"],[91,11,36,9,"fontBasename"],[91,23,33,40],[92,0,37,4,"default"],[92,15,37,13,"fontFamily"],[93,0,33,40],[93,5,33,24],[93,6,33,2],[95,0,40,2],[95,8,40,8,"IconNamePropType"],[95,27,40,27,"PropTypes"],[95,46,40,37,"oneOf"],[95,51,40,27],[95,52,40,43,"Object"],[95,59,40,50,"keys"],[95,63,40,43],[95,64,40,55,"glyphMap"],[95,72,40,43],[95,73,40,27],[95,74,40,2],[97,0,27,2],[97,8,42,8,"Icon"],[97,12,27,2],[98,0,27,2],[99,0,27,2],[101,0,27,2],[103,0,27,2],[105,0,27,2],[106,0,27,2],[107,0,27,2],[109,0,27,2],[109,200,62,4,"root"],[109,204,27,2],[109,207,62,11],[109,211,27,2],[109,219,63,4,"handleRef"],[109,228,27,2],[109,231,63,16],[109,246,63,23],[110,0,64,6],[110,16,64,11,"root"],[110,20,64,6],[110,23,64,18,"ref"],[110,26,64,6],[111,0,65,5],[111,9,27,2],[112,0,27,2],[114,0,27,2],[115,0,27,2],[116,0,27,2],[116,39,56,19,"nativeProps"],[116,50,27,2],[116,52,56,32],[117,0,57,6],[117,14,57,10],[117,19,57,15,"root"],[117,23,57,6],[117,25,57,21],[118,0,58,8],[118,17,58,13,"root"],[118,21,58,8],[118,22,58,18,"setNativeProps"],[118,36,58,8],[118,37,58,33,"nativeProps"],[118,48,58,8],[119,0,59,7],[120,0,60,5],[121,0,27,2],[122,0,27,2],[123,0,27,2],[123,33,67,13],[124,0,67,13],[124,28,68,53],[124,33,68,58,"props"],[124,38,67,13],[125,0,67,13],[125,14,68,14,"name"],[125,18,67,13],[125,33,68,14,"name"],[125,37,67,13],[126,0,67,13],[126,14,68,20,"size"],[126,18,67,13],[126,33,68,20,"size"],[126,37,67,13],[127,0,67,13],[127,14,68,26,"color"],[127,19,67,13],[127,34,68,26,"color"],[127,39,67,13],[128,0,67,13],[128,14,68,33,"style"],[128,19,67,13],[128,34,68,33,"style"],[128,39,67,13],[129,0,67,13],[129,14,68,43,"props"],[129,19,67,13],[131,0,70,6],[131,14,70,10,"glyph"],[131,22,70,18,"name"],[131,29,70,25,"glyphMap"],[131,38,70,34,"name"],[131,42,70,25],[131,47,70,43],[131,50,70,18],[131,53,70,49],[131,55,70,6],[133,0,71,6],[133,14,71,10],[133,21,71,17,"glyph"],[133,26,71,10],[133,31,71,27],[133,39,71,6],[133,41,71,37],[134,0,72,8,"glyph"],[134,20,72,16,"String"],[134,27,72,23,"fromCharCode"],[134,39,72,16],[134,40,72,36,"glyph"],[134,45,72,16],[134,46,72,8],[135,0,73,7],[137,0,75,6],[137,14,75,12,"styleDefaults"],[137,30,75,28],[138,0,76,8,"fontSize"],[138,22,76,18,"size"],[138,26,75,28],[139,0,77,8,"color"],[140,0,75,28],[140,11,75,6],[141,0,80,6],[141,14,80,12,"styleOverrides"],[141,31,80,29],[142,0,81,8,"fontFamily"],[142,24,81,20,"fontReference"],[142,37,80,29],[143,0,82,8,"fontWeight"],[143,24,82,20],[143,32,80,29],[144,0,83,8,"fontStyle"],[144,23,83,19],[145,0,80,29],[145,11,80,6],[146,0,86,6,"props"],[146,16,86,12,"style"],[146,21,86,6],[146,24,86,20],[146,25,86,21,"styleDefaults"],[146,38,86,20],[146,40,86,36,"style"],[146,45,86,20],[146,47,86,43,"styleOverrides"],[146,61,86,20],[146,63,86,59,"fontStyle"],[146,76,86,72],[146,78,86,20],[146,79,86,6],[147,0,87,6,"props"],[147,16,87,12,"ref"],[147,19,87,6],[147,22,87,18],[147,27,87,23,"handleRef"],[147,36,87,6],[148,0,89,6],[148,17,90,8],[148,46,90,9],[148,63,90,8],[148,78,90,18,"props"],[148,83,90,8],[149,0,90,8],[150,0,90,8],[151,0,90,8],[152,0,90,8],[153,0,90,8],[153,14,91,11,"glyph"],[153,19,90,8],[153,21,92,11],[153,26,92,16,"props"],[153,31,92,11],[153,32,92,22,"children"],[153,40,90,8],[153,41,89,6],[154,0,95,5],[155,0,27,2],[157,0,27,2],[159,0,27,2],[160,0,27,2],[160,6,42,21,"PureComponent"],[160,26,27,2],[162,0,42,8,"Icon"],[162,8,27,2],[162,9,43,11,"propTypes"],[162,18,27,2],[162,21,43,23],[163,0,44,6,"name"],[163,12,44,12,"IconNamePropType"],[163,28,43,23],[164,0,45,6,"size"],[164,12,45,12,"PropTypes"],[164,31,45,22,"number"],[164,37,43,23],[165,0,46,6,"color"],[165,13,46,13,"PropTypes"],[165,32,46,23,"oneOfType"],[165,41,46,13],[165,42,46,33],[165,43,46,34,"PropTypes"],[165,62,46,44,"string"],[165,68,46,33],[165,70,46,52,"PropTypes"],[165,89,46,62,"number"],[165,95,46,33],[165,96,46,13],[165,97,43,23],[166,0,47,6,"children"],[166,16,47,16,"PropTypes"],[166,35,47,26,"node"],[166,39,43,23],[167,0,48,6,"style"],[167,13,48,13,"PropTypes"],[167,32,48,23,"any"],[168,0,43,23],[168,5,27,2],[169,0,42,8,"Icon"],[169,8,27,2],[169,9,51,11,"defaultProps"],[169,21,27,2],[169,24,51,26],[170,0,52,6,"size"],[170,12,52,12,"DEFAULT_ICON_SIZE"],[170,29,51,26],[171,0,53,6,"allowFontScaling"],[171,24,53,24],[172,0,51,26],[172,5,27,2],[173,0,27,2],[174,0,98,2],[174,8,98,8,"imageSourceCache"],[174,27,98,27],[174,29,98,2],[176,0,100,2],[176,13,100,11,"getImageSource"],[176,27,100,2],[176,28,101,4,"name"],[176,32,100,2],[176,34,104,4],[177,0,104,4],[177,10,102,4,"size"],[177,14,104,4],[177,85,102,11,"DEFAULT_ICON_SIZE"],[177,102,104,4],[178,0,104,4],[178,10,103,4,"color"],[178,15,104,4],[178,86,103,12,"DEFAULT_ICON_COLOR"],[178,104,104,4],[179,0,105,4],[180,0,107,4],[180,10,107,8,"glyph"],[180,18,107,16,"glyphMap"],[180,27,107,25,"name"],[180,31,107,16],[180,36,107,34],[180,39,107,4],[182,0,108,4],[182,10,108,8],[182,17,108,15,"glyph"],[182,22,108,8],[182,27,108,25],[182,35,108,4],[182,37,108,35],[183,0,109,6,"glyph"],[183,16,109,14,"String"],[183,23,109,21,"fromCharCode"],[183,35,109,14],[183,36,109,34,"glyph"],[183,41,109,14],[183,42,109,6],[184,0,110,5],[186,0,112,4],[186,10,112,10,"processedColor"],[186,27,112,27],[186,58,112,40,"color"],[186,63,112,27],[186,64,112,4],[187,0,113,4],[187,10,113,10,"cacheKey"],[187,21,113,24,"glyph"],[187,26,113,10],[187,35,113,33,"size"],[187,39,113,10],[187,48,113,41,"processedColor"],[187,62,113,4],[189,0,114,4],[189,10,114,10,"scale"],[189,18,114,18,"PixelRatio"],[189,42,114,29,"get"],[189,45,114,18],[189,47,114,4],[191,0,116,4],[191,13,116,11],[191,17,116,15,"Promise"],[191,24,116,11],[191,25,116,23],[191,35,116,24,"resolve"],[191,42,116,23],[191,44,116,33,"reject"],[191,50,116,23],[191,52,116,44],[192,0,117,6],[192,12,117,12,"cached"],[192,21,117,21,"imageSourceCache"],[192,38,117,38,"cacheKey"],[192,46,117,21],[192,47,117,6],[194,0,118,6],[194,12,118,10],[194,19,118,17,"cached"],[194,25,118,10],[194,30,118,28],[194,41,118,6],[194,43,118,41],[195,0,119,8],[195,14,119,12],[195,15,119,13,"cached"],[195,21,119,12],[195,25,119,23,"cached"],[195,43,119,41,"Error"],[195,48,119,8],[195,50,119,48],[196,0,120,10,"reject"],[196,19,120,17,"cached"],[196,25,120,10],[197,0,121,9],[197,11,119,8],[197,17,121,15],[198,0,122,10,"resolve"],[198,20,122,18],[199,0,122,20,"uri"],[199,19,122,25,"cached"],[199,25,122,18],[200,0,122,33,"scale"],[201,0,122,18],[201,13,122,10],[202,0,123,9],[203,0,124,7],[203,9,118,6],[203,15,124,13],[204,0,125,8,"NativeIconAPI"],[204,24,125,22,"getImageForFont"],[204,39,125,8],[204,40,126,10,"fontReference"],[204,53,125,8],[204,55,127,10,"glyph"],[204,60,125,8],[204,62,128,10,"size"],[204,66,125,8],[204,68,129,10,"processedColor"],[204,82,125,8],[204,84,130,10],[204,94,130,11,"err"],[204,97,130,10],[204,99,130,16,"image"],[204,104,130,10],[204,106,130,26],[205,0,131,12],[205,16,131,18,"error"],[205,24,131,26],[205,31,131,33,"err"],[205,34,131,26],[205,39,131,41],[205,47,131,26],[205,50,131,52],[205,54,131,56,"Error"],[205,59,131,52],[205,60,131,62,"err"],[205,63,131,52],[205,64,131,26],[205,67,131,69,"err"],[205,70,131,12],[206,0,132,12,"imageSourceCache"],[206,29,132,29,"cacheKey"],[206,37,132,12],[206,41,132,41,"image"],[206,50,132,50,"error"],[206,55,132,41],[206,59,132,59],[206,64,132,12],[208,0,133,12],[208,16,133,16],[208,17,133,17,"error"],[208,22,133,16],[208,26,133,26,"image"],[208,31,133,12],[208,33,133,33],[209,0,134,14,"resolve"],[209,22,134,22],[210,0,134,24,"uri"],[210,21,134,29,"image"],[210,26,134,22],[211,0,134,36,"scale"],[212,0,134,22],[212,15,134,14],[213,0,135,13],[213,13,133,12],[213,19,135,19],[214,0,136,14,"reject"],[214,21,136,21,"error"],[214,26,136,14],[215,0,137,13],[216,0,138,11],[216,11,125,8],[217,0,140,7],[218,0,141,5],[218,7,116,11],[218,8,116,4],[219,0,142,3],[221,0,144,2],[221,13,144,11,"loadFont"],[221,21,144,2],[221,24,144,37],[222,0,144,37],[222,10,144,20,"file"],[222,14,144,37],[222,85,144,27,"fontFile"],[222,93,144,37],[224,0,145,4],[224,10,145,8,"Platform"],[224,32,145,17,"OS"],[224,34,145,8],[224,39,145,24],[224,44,145,4],[224,46,145,31],[225,0,146,6],[227,0,147,6],[227,12,147,10],[227,13,147,11,"file"],[227,17,147,6],[227,19,147,17],[228,0,148,8],[228,17,148,15,"Promise"],[228,25,148,23,"reject"],[228,31,148,15],[228,32,149,10],[228,36,149,14,"Error"],[228,41,149,10],[228,42,149,20],[228,96,149,10],[228,97,148,15],[228,98,148,8],[229,0,151,7],[231,0,152,6],[231,15,152,13,"NativeIconAPI"],[231,29,152,27,"loadFontWithFileName"],[231,49,152,13],[231,90,152,51,"file"],[231,95,152,56,"split"],[231,100,152,51],[231,101,152,62],[231,104,152,51],[231,105,152,13],[231,107,152,6],[232,0,153,5],[234,0,154,4],[234,13,154,11,"Promise"],[234,21,154,19,"resolve"],[234,28,154,11],[234,30,154,4],[235,0,155,3],[237,0,157,2],[237,13,157,11,"hasIcon"],[237,20,157,2],[237,21,157,19,"name"],[237,25,157,2],[237,27,157,25],[238,0,158,4],[238,13,158,11,"Object"],[238,20,158,18,"prototype"],[238,29,158,11],[238,30,158,28,"hasOwnProperty"],[238,44,158,11],[238,45,158,43,"call"],[238,49,158,11],[238,50,158,48,"glyphMap"],[238,58,158,11],[238,60,158,58,"name"],[238,64,158,11],[238,65,158,4],[239,0,159,3],[241,0,161,2],[241,13,161,11,"getRawGlyphMap"],[241,27,161,2],[241,30,161,28],[242,0,162,4],[242,13,162,11,"glyphMap"],[242,21,162,4],[243,0,163,3],[245,0,165,2],[245,13,165,11,"getFontFamily"],[245,26,165,2],[245,29,165,27],[246,0,166,4],[246,13,166,11,"fontReference"],[246,26,166,4],[247,0,167,3],[249,0,169,2,"Icon"],[249,9,169,7,"Button"],[249,15,169,2],[249,18,169,16],[249,43,169,42,"Icon"],[249,47,169,16],[249,48,169,2],[250,0,170,2,"Icon"],[250,9,170,7,"TabBarItem"],[250,19,170,2],[250,22,170,20],[250,50,171,4,"IconNamePropType"],[250,66,170,20],[250,68,172,4,"getImageSource"],[250,82,170,20],[250,83,170,2],[251,0,174,2,"Icon"],[251,9,174,7,"TabBarItemIOS"],[251,22,174,2],[251,25,174,23,"Icon"],[251,30,174,28,"TabBarItem"],[251,40,174,2],[252,0,175,2,"Icon"],[252,9,175,7,"ToolbarAndroid"],[252,23,175,2],[252,26,175,24],[252,55,176,4,"IconNamePropType"],[252,71,175,24],[252,73,177,4,"getImageSource"],[252,87,175,24],[252,88,175,2],[253,0,179,2,"Icon"],[253,9,179,7,"getImageSource"],[253,23,179,2],[253,26,179,24,"getImageSource"],[253,40,179,2],[254,0,180,2,"Icon"],[254,9,180,7,"loadFont"],[254,17,180,2],[254,20,180,18,"loadFont"],[254,28,180,2],[255,0,181,2,"Icon"],[255,9,181,7,"hasIcon"],[255,16,181,2],[255,19,181,17,"hasIcon"],[255,26,181,2],[256,0,182,2,"Icon"],[256,9,182,7,"getRawGlyphMap"],[256,23,182,2],[256,26,182,24,"getRawGlyphMap"],[256,40,182,2],[257,0,183,2,"Icon"],[257,9,183,7,"getFontFamily"],[257,22,183,2],[257,25,183,23,"getFontFamily"],[257,38,183,2],[258,0,185,2],[258,11,185,9,"Icon"],[258,15,185,2],[259,0,186,1]]},"type":"js/module"}]}