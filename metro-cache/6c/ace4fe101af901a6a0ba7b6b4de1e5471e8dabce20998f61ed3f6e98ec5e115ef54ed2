{"dependencies":[{"name":"ColorPropType","isAsync":false},{"name":"NativeMethodsMixin","isAsync":false},{"name":"prop-types","isAsync":false},{"name":"Platform","isAsync":false},{"name":"React","isAsync":false},{"name":"ReactNativeViewAttributes","isAsync":false},{"name":"StyleSheet","isAsync":false},{"name":"Touchable","isAsync":false},{"name":"TouchableWithoutFeedback","isAsync":false},{"name":"View","isAsync":false},{"name":"ViewPropTypes","isAsync":false},{"name":"create-react-class","isAsync":false},{"name":"ensurePositiveDelayProps","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _jsxFileName = \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/react-native/Libraries/Components/Touchable/TouchableHighlight.js\";\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var ColorPropType = _$$_REQUIRE(_dependencyMap[0], 'ColorPropType');\n\n  var NativeMethodsMixin = _$$_REQUIRE(_dependencyMap[1], 'NativeMethodsMixin');\n\n  var PropTypes = _$$_REQUIRE(_dependencyMap[2], 'prop-types');\n\n  var Platform = _$$_REQUIRE(_dependencyMap[3], 'Platform');\n\n  var React = _$$_REQUIRE(_dependencyMap[4], 'React');\n\n  var ReactNativeViewAttributes = _$$_REQUIRE(_dependencyMap[5], 'ReactNativeViewAttributes');\n\n  var StyleSheet = _$$_REQUIRE(_dependencyMap[6], 'StyleSheet');\n\n  var Touchable = _$$_REQUIRE(_dependencyMap[7], 'Touchable');\n\n  var TouchableWithoutFeedback = _$$_REQUIRE(_dependencyMap[8], 'TouchableWithoutFeedback');\n\n  var View = _$$_REQUIRE(_dependencyMap[9], 'View');\n\n  var ViewPropTypes = _$$_REQUIRE(_dependencyMap[10], 'ViewPropTypes');\n\n  var createReactClass = _$$_REQUIRE(_dependencyMap[11], 'create-react-class');\n\n  var ensurePositiveDelayProps = _$$_REQUIRE(_dependencyMap[12], 'ensurePositiveDelayProps');\n\n  var DEFAULT_PROPS = {\n    activeOpacity: 0.85,\n    delayPressOut: 100,\n    underlayColor: 'black'\n  };\n  var PRESS_RETENTION_OFFSET = {\n    top: 20,\n    left: 20,\n    right: 20,\n    bottom: 30\n  };\n  var TouchableHighlight = createReactClass({\n    displayName: 'TouchableHighlight',\n    propTypes: _objectSpread({}, TouchableWithoutFeedback.propTypes, {\n      activeOpacity: PropTypes.number,\n      underlayColor: ColorPropType,\n      style: ViewPropTypes.style,\n      onShowUnderlay: PropTypes.func,\n      onHideUnderlay: PropTypes.func,\n      hasTVPreferredFocus: PropTypes.bool,\n      tvParallaxProperties: PropTypes.object,\n      testOnly_pressed: PropTypes.bool\n    }),\n    mixins: [NativeMethodsMixin, Touchable.Mixin],\n    getDefaultProps: function getDefaultProps() {\n      return DEFAULT_PROPS;\n    },\n    getInitialState: function getInitialState() {\n      this._isMounted = false;\n\n      if (this.props.testOnly_pressed) {\n        return _objectSpread({}, this.touchableGetInitialState(), {\n          extraChildStyle: {\n            opacity: this.props.activeOpacity\n          },\n          extraUnderlayStyle: {\n            backgroundColor: this.props.underlayColor\n          }\n        });\n      } else {\n        return _objectSpread({}, this.touchableGetInitialState(), {\n          extraChildStyle: null,\n          extraUnderlayStyle: null\n        });\n      }\n    },\n    componentDidMount: function componentDidMount() {\n      this._isMounted = true;\n      ensurePositiveDelayProps(this.props);\n    },\n    componentWillUnmount: function componentWillUnmount() {\n      this._isMounted = false;\n      clearTimeout(this._hideTimeout);\n    },\n    UNSAFE_componentWillReceiveProps: function UNSAFE_componentWillReceiveProps(nextProps) {\n      ensurePositiveDelayProps(nextProps);\n    },\n    viewConfig: {\n      uiViewClassName: 'RCTView',\n      validAttributes: ReactNativeViewAttributes.RCTView\n    },\n    touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {\n      clearTimeout(this._hideTimeout);\n      this._hideTimeout = null;\n\n      this._showUnderlay();\n\n      this.props.onPressIn && this.props.onPressIn(e);\n    },\n    touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {\n      if (!this._hideTimeout) {\n        this._hideUnderlay();\n      }\n\n      this.props.onPressOut && this.props.onPressOut(e);\n    },\n    touchableHandlePress: function touchableHandlePress(e) {\n      clearTimeout(this._hideTimeout);\n\n      if (!Platform.isTV) {\n        this._showUnderlay();\n\n        this._hideTimeout = setTimeout(this._hideUnderlay, this.props.delayPressOut);\n      }\n\n      this.props.onPress && this.props.onPress(e);\n    },\n    touchableHandleLongPress: function touchableHandleLongPress(e) {\n      this.props.onLongPress && this.props.onLongPress(e);\n    },\n    touchableGetPressRectOffset: function touchableGetPressRectOffset() {\n      return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;\n    },\n    touchableGetHitSlop: function touchableGetHitSlop() {\n      return this.props.hitSlop;\n    },\n    touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {\n      return this.props.delayPressIn;\n    },\n    touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {\n      return this.props.delayLongPress;\n    },\n    touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {\n      return this.props.delayPressOut;\n    },\n    _showUnderlay: function _showUnderlay() {\n      if (!this._isMounted || !this._hasPressHandler()) {\n        return;\n      }\n\n      this.setState({\n        extraChildStyle: {\n          opacity: this.props.activeOpacity\n        },\n        extraUnderlayStyle: {\n          backgroundColor: this.props.underlayColor\n        }\n      });\n      this.props.onShowUnderlay && this.props.onShowUnderlay();\n    },\n    _hideUnderlay: function _hideUnderlay() {\n      clearTimeout(this._hideTimeout);\n      this._hideTimeout = null;\n\n      if (this.props.testOnly_pressed) {\n        return;\n      }\n\n      if (this._hasPressHandler()) {\n        this.setState({\n          extraChildStyle: null,\n          extraUnderlayStyle: null\n        });\n        this.props.onHideUnderlay && this.props.onHideUnderlay();\n      }\n    },\n    _hasPressHandler: function _hasPressHandler() {\n      return !!(this.props.onPress || this.props.onPressIn || this.props.onPressOut || this.props.onLongPress);\n    },\n    render: function render() {\n      var child = React.Children.only(this.props.children);\n      return React.createElement(View, {\n        accessible: this.props.accessible !== false,\n        accessibilityLabel: this.props.accessibilityLabel,\n        accessibilityComponentType: this.props.accessibilityComponentType,\n        accessibilityTraits: this.props.accessibilityTraits,\n        style: StyleSheet.compose(this.props.style, this.state.extraUnderlayStyle),\n        onLayout: this.props.onLayout,\n        hitSlop: this.props.hitSlop,\n        isTVSelectable: true,\n        tvParallaxProperties: this.props.tvParallaxProperties,\n        hasTVPreferredFocus: this.props.hasTVPreferredFocus,\n        onStartShouldSetResponder: this.touchableHandleStartShouldSetResponder,\n        onResponderTerminationRequest: this.touchableHandleResponderTerminationRequest,\n        onResponderGrant: this.touchableHandleResponderGrant,\n        onResponderMove: this.touchableHandleResponderMove,\n        onResponderRelease: this.touchableHandleResponderRelease,\n        onResponderTerminate: this.touchableHandleResponderTerminate,\n        nativeID: this.props.nativeID,\n        testID: this.props.testID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        }\n      }, React.cloneElement(child, {\n        style: StyleSheet.compose(child.props.style, this.state.extraChildStyle)\n      }), Touchable.renderDebugView({\n        color: 'green',\n        hitSlop: this.props.hitSlop\n      }));\n    }\n  });\n  module.exports = TouchableHighlight;\n});","map":[[2,0,10,0],[10,0,12,0],[10,6,12,6,"ColorPropType"],[10,22,12,22,"require"],[10,53,12,30],[10,68,12,22],[10,69,12,0],[12,0,13,0],[12,6,13,6,"NativeMethodsMixin"],[12,27,13,27,"require"],[12,58,13,35],[12,78,13,27],[12,79,13,0],[14,0,14,0],[14,6,14,6,"PropTypes"],[14,18,14,18,"require"],[14,49,14,26],[14,61,14,18],[14,62,14,0],[16,0,15,0],[16,6,15,6,"Platform"],[16,17,15,17,"require"],[16,48,15,25],[16,58,15,17],[16,59,15,0],[18,0,16,0],[18,6,16,6,"React"],[18,14,16,14,"require"],[18,45,16,22],[18,52,16,14],[18,53,16,0],[20,0,17,0],[20,6,17,6,"ReactNativeViewAttributes"],[20,34,17,34,"require"],[20,65,17,42],[20,92,17,34],[20,93,17,0],[22,0,18,0],[22,6,18,6,"StyleSheet"],[22,19,18,19,"require"],[22,50,18,27],[22,62,18,19],[22,63,18,0],[24,0,19,0],[24,6,19,6,"Touchable"],[24,18,19,18,"require"],[24,49,19,26],[24,60,19,18],[24,61,19,0],[26,0,20,0],[26,6,20,6,"TouchableWithoutFeedback"],[26,33,20,33,"require"],[26,64,20,41],[26,90,20,33],[26,91,20,0],[28,0,21,0],[28,6,21,6,"View"],[28,13,21,13,"require"],[28,44,21,21],[28,50,21,13],[28,51,21,0],[30,0,22,0],[30,6,22,6,"ViewPropTypes"],[30,22,22,22,"require"],[30,54,22,30],[30,69,22,22],[30,70,22,0],[32,0,24,0],[32,6,24,6,"createReactClass"],[32,25,24,25,"require"],[32,57,24,33],[32,77,24,25],[32,78,24,0],[34,0,25,0],[34,6,25,6,"ensurePositiveDelayProps"],[34,33,25,33,"require"],[34,65,25,41],[34,91,25,33],[34,92,25,0],[36,0,32,0],[36,6,32,6,"DEFAULT_PROPS"],[36,22,32,22],[37,0,33,2,"activeOpacity"],[37,19,33,17],[37,23,32,22],[38,0,34,2,"delayPressOut"],[38,19,34,17],[38,22,32,22],[39,0,35,2,"underlayColor"],[39,19,35,17],[40,0,32,22],[40,3,32,0],[41,0,38,0],[41,6,38,6,"PRESS_RETENTION_OFFSET"],[41,31,38,31],[42,0,38,32,"top"],[42,9,38,37],[42,11,38,31],[43,0,38,41,"left"],[43,10,38,47],[43,12,38,31],[44,0,38,51,"right"],[44,11,38,58],[44,13,38,31],[45,0,38,62,"bottom"],[45,12,38,70],[46,0,38,31],[46,3,38,0],[47,0,154,0],[47,6,154,6,"TouchableHighlight"],[47,27,154,29,"createReactClass"],[47,44,154,46],[48,0,155,2,"displayName"],[48,17,155,15],[48,37,154,46],[49,0,156,2,"propTypes"],[49,33,157,7,"TouchableWithoutFeedback"],[49,58,157,32,"propTypes"],[49,67,156,2],[50,0,162,4,"activeOpacity"],[50,21,162,19,"PropTypes"],[50,31,162,29,"number"],[50,37,156,2],[51,0,167,4,"underlayColor"],[51,21,167,19,"ColorPropType"],[51,34,156,2],[52,0,172,4,"style"],[52,13,172,11,"ViewPropTypes"],[52,27,172,25,"style"],[52,32,156,2],[53,0,176,4,"onShowUnderlay"],[53,22,176,20,"PropTypes"],[53,32,176,30,"func"],[53,36,156,2],[54,0,180,4,"onHideUnderlay"],[54,22,180,20,"PropTypes"],[54,32,180,30,"func"],[54,36,156,2],[55,0,186,4,"hasTVPreferredFocus"],[55,27,186,25,"PropTypes"],[55,37,186,35,"bool"],[55,41,156,2],[56,0,201,4,"tvParallaxProperties"],[56,28,201,26,"PropTypes"],[56,38,201,36,"object"],[56,44,156,2],[57,0,205,4,"testOnly_pressed"],[57,24,205,22,"PropTypes"],[57,34,205,32,"bool"],[58,0,156,2],[58,6,154,46],[59,0,208,2,"mixins"],[59,12,208,10],[59,13,208,11,"NativeMethodsMixin"],[59,31,208,10],[59,33,208,31,"Touchable"],[59,43,208,41,"Mixin"],[59,48,208,10],[59,49,154,46],[60,0,210,2,"getDefaultProps"],[60,21,210,19],[61,0,210,19],[61,13,210,25,"DEFAULT_PROPS"],[61,26,210,19],[62,0,210,19],[62,5,154,46],[63,0,212,2,"getInitialState"],[63,21,212,19],[63,48,212,30],[64,0,213,4],[64,11,213,9,"_isMounted"],[64,21,213,4],[64,24,213,22],[64,29,213,4],[66,0,214,4],[66,10,214,8],[66,15,214,13,"props"],[66,20,214,8],[66,21,214,19,"testOnly_pressed"],[66,37,214,4],[66,39,214,37],[67,0,215,6],[67,33,216,11],[67,38,216,16,"touchableGetInitialState"],[67,62,216,11],[67,64,215,6],[68,0,217,8,"extraChildStyle"],[68,27,217,25],[69,0,218,10,"opacity"],[69,21,218,19],[69,26,218,24,"props"],[69,31,218,19],[69,32,218,30,"activeOpacity"],[70,0,217,25],[70,11,215,6],[71,0,220,8,"extraUnderlayStyle"],[71,30,220,28],[72,0,221,10,"backgroundColor"],[72,29,221,27],[72,34,221,32,"props"],[72,39,221,27],[72,40,221,38,"underlayColor"],[73,0,220,28],[74,0,215,6],[75,0,224,5],[75,7,214,4],[75,13,224,11],[76,0,225,6],[76,33,226,11],[76,38,226,16,"touchableGetInitialState"],[76,62,226,11],[76,64,225,6],[77,0,227,8,"extraChildStyle"],[77,27,227,25],[77,31,225,6],[78,0,228,8,"extraUnderlayStyle"],[78,30,228,28],[79,0,225,6],[80,0,230,5],[81,0,231,3],[81,5,154,46],[82,0,233,2,"componentDidMount"],[82,23,233,21],[82,52,233,32],[83,0,234,4],[83,11,234,9,"_isMounted"],[83,21,234,4],[83,24,234,22],[83,28,234,4],[84,0,235,4,"ensurePositiveDelayProps"],[84,31,235,29],[84,36,235,34,"props"],[84,41,235,4],[85,0,236,3],[85,5,154,46],[86,0,238,2,"componentWillUnmount"],[86,26,238,24],[86,58,238,35],[87,0,239,4],[87,11,239,9,"_isMounted"],[87,21,239,4],[87,24,239,22],[87,29,239,4],[88,0,240,4,"clearTimeout"],[88,19,240,17],[88,24,240,22,"_hideTimeout"],[88,36,240,4],[89,0,241,3],[89,5,154,46],[90,0,243,2,"UNSAFE_componentWillReceiveProps"],[90,38,243,36],[90,80,243,45,"nextProps"],[90,89,243,36],[90,91,243,56],[91,0,244,4,"ensurePositiveDelayProps"],[91,31,244,29,"nextProps"],[91,40,244,4],[92,0,245,3],[92,5,154,46],[93,0,247,2,"viewConfig"],[93,16,247,14],[94,0,248,4,"uiViewClassName"],[94,23,248,21],[94,32,247,14],[95,0,249,4,"validAttributes"],[95,23,249,21,"ReactNativeViewAttributes"],[95,49,249,47,"RCTView"],[96,0,247,14],[96,5,154,46],[97,0,256,2,"touchableHandleActivePressIn"],[97,34,256,32],[97,72,256,41,"e"],[97,73,256,32],[97,75,256,56],[98,0,257,4,"clearTimeout"],[98,19,257,17],[98,24,257,22,"_hideTimeout"],[98,36,257,4],[99,0,258,4],[99,11,258,9,"_hideTimeout"],[99,23,258,4],[99,26,258,24],[99,30,258,4],[101,0,259,4],[101,11,259,9,"_showUnderlay"],[101,24,259,4],[103,0,260,4],[103,11,260,9,"props"],[103,16,260,4],[103,17,260,15,"onPressIn"],[103,26,260,4],[103,30,260,28],[103,35,260,33,"props"],[103,40,260,28],[103,41,260,39,"onPressIn"],[103,50,260,28],[103,51,260,49,"e"],[103,52,260,28],[103,53,260,4],[104,0,261,3],[104,5,154,46],[105,0,263,2,"touchableHandleActivePressOut"],[105,35,263,33],[105,74,263,42,"e"],[105,75,263,33],[105,77,263,57],[106,0,264,4],[106,10,264,8],[106,11,264,9],[106,16,264,14,"_hideTimeout"],[106,28,264,4],[106,30,264,28],[107,0,265,6],[107,13,265,11,"_hideUnderlay"],[107,26,265,6],[108,0,266,5],[110,0,267,4],[110,11,267,9,"props"],[110,16,267,4],[110,17,267,15,"onPressOut"],[110,27,267,4],[110,31,267,29],[110,36,267,34,"props"],[110,41,267,29],[110,42,267,40,"onPressOut"],[110,52,267,29],[110,53,267,51,"e"],[110,54,267,29],[110,55,267,4],[111,0,268,3],[111,5,154,46],[112,0,270,2,"touchableHandlePress"],[112,26,270,24],[112,56,270,33,"e"],[112,57,270,24],[112,59,270,48],[113,0,271,4,"clearTimeout"],[113,19,271,17],[113,24,271,22,"_hideTimeout"],[113,36,271,4],[115,0,272,4],[115,10,272,8],[115,11,272,9,"Platform"],[115,20,272,18,"isTV"],[115,24,272,4],[115,26,272,24],[116,0,273,6],[116,13,273,11,"_showUnderlay"],[116,26,273,6],[118,0,274,6],[118,13,274,11,"_hideTimeout"],[118,25,274,6],[118,28,274,26,"setTimeout"],[118,39,275,8],[118,44,275,13,"_hideUnderlay"],[118,57,274,26],[118,59,276,8],[118,64,276,13,"props"],[118,69,276,8],[118,70,276,19,"delayPressOut"],[118,83,274,26],[118,84,274,6],[119,0,278,5],[121,0,279,4],[121,11,279,9,"props"],[121,16,279,4],[121,17,279,15,"onPress"],[121,24,279,4],[121,28,279,26],[121,33,279,31,"props"],[121,38,279,26],[121,39,279,37,"onPress"],[121,46,279,26],[121,47,279,45,"e"],[121,48,279,26],[121,49,279,4],[122,0,280,3],[122,5,154,46],[123,0,282,2,"touchableHandleLongPress"],[123,30,282,28],[123,64,282,37,"e"],[123,65,282,28],[123,67,282,52],[124,0,283,4],[124,11,283,9,"props"],[124,16,283,4],[124,17,283,15,"onLongPress"],[124,28,283,4],[124,32,283,30],[124,37,283,35,"props"],[124,42,283,30],[124,43,283,41,"onLongPress"],[124,54,283,30],[124,55,283,53,"e"],[124,56,283,30],[124,57,283,4],[125,0,284,3],[125,5,154,46],[126,0,286,2,"touchableGetPressRectOffset"],[126,33,286,31],[126,72,286,42],[127,0,287,4],[127,13,287,11],[127,18,287,16,"props"],[127,23,287,11],[127,24,287,22,"pressRetentionOffset"],[127,44,287,11],[127,48,287,46,"PRESS_RETENTION_OFFSET"],[127,70,287,4],[128,0,288,3],[128,5,154,46],[129,0,290,2,"touchableGetHitSlop"],[129,25,290,23],[129,56,290,34],[130,0,291,4],[130,13,291,11],[130,18,291,16,"props"],[130,23,291,11],[130,24,291,22,"hitSlop"],[130,31,291,4],[131,0,292,3],[131,5,154,46],[132,0,294,2,"touchableGetHighlightDelayMS"],[132,34,294,32],[132,74,294,43],[133,0,295,4],[133,13,295,11],[133,18,295,16,"props"],[133,23,295,11],[133,24,295,22,"delayPressIn"],[133,36,295,4],[134,0,296,3],[134,5,154,46],[135,0,298,2,"touchableGetLongPressDelayMS"],[135,34,298,32],[135,74,298,43],[136,0,299,4],[136,13,299,11],[136,18,299,16,"props"],[136,23,299,11],[136,24,299,22,"delayLongPress"],[136,38,299,4],[137,0,300,3],[137,5,154,46],[138,0,302,2,"touchableGetPressOutDelayMS"],[138,33,302,31],[138,72,302,42],[139,0,303,4],[139,13,303,11],[139,18,303,16,"props"],[139,23,303,11],[139,24,303,22,"delayPressOut"],[139,37,303,4],[140,0,304,3],[140,5,154,46],[141,0,306,2,"_showUnderlay"],[141,19,306,17],[141,44,306,28],[142,0,307,4],[142,10,307,8],[142,11,307,9],[142,16,307,14,"_isMounted"],[142,26,307,8],[142,30,307,28],[142,31,307,29],[142,36,307,34,"_hasPressHandler"],[142,52,307,29],[142,54,307,4],[142,56,307,54],[143,0,308,6],[144,0,309,5],[146,0,310,4],[146,11,310,9,"setState"],[146,19,310,4],[146,20,310,18],[147,0,311,6,"extraChildStyle"],[147,25,311,23],[148,0,312,8,"opacity"],[148,19,312,17],[148,24,312,22,"props"],[148,29,312,17],[148,30,312,28,"activeOpacity"],[149,0,311,23],[149,9,310,18],[150,0,314,6,"extraUnderlayStyle"],[150,28,314,26],[151,0,315,8,"backgroundColor"],[151,27,315,25],[151,32,315,30,"props"],[151,37,315,25],[151,38,315,36,"underlayColor"],[152,0,314,26],[153,0,310,18],[153,7,310,4],[154,0,318,4],[154,11,318,9,"props"],[154,16,318,4],[154,17,318,15,"onShowUnderlay"],[154,31,318,4],[154,35,318,33],[154,40,318,38,"props"],[154,45,318,33],[154,46,318,44,"onShowUnderlay"],[154,60,318,33],[154,62,318,4],[155,0,319,3],[155,5,154,46],[156,0,321,2,"_hideUnderlay"],[156,19,321,17],[156,44,321,28],[157,0,322,4,"clearTimeout"],[157,19,322,17],[157,24,322,22,"_hideTimeout"],[157,36,322,4],[158,0,323,4],[158,11,323,9,"_hideTimeout"],[158,23,323,4],[158,26,323,24],[158,30,323,4],[160,0,324,4],[160,10,324,8],[160,15,324,13,"props"],[160,20,324,8],[160,21,324,19,"testOnly_pressed"],[160,37,324,4],[160,39,324,37],[161,0,325,6],[162,0,326,5],[164,0,327,4],[164,10,327,8],[164,15,327,13,"_hasPressHandler"],[164,31,327,8],[164,33,327,4],[164,35,327,33],[165,0,328,6],[165,13,328,11,"setState"],[165,21,328,6],[165,22,328,20],[166,0,329,8,"extraChildStyle"],[166,27,329,25],[166,31,328,20],[167,0,330,8,"extraUnderlayStyle"],[167,30,330,28],[168,0,328,20],[168,9,328,6],[169,0,332,6],[169,13,332,11,"props"],[169,18,332,6],[169,19,332,17,"onHideUnderlay"],[169,33,332,6],[169,37,332,35],[169,42,332,40,"props"],[169,47,332,35],[169,48,332,46,"onHideUnderlay"],[169,62,332,35],[169,64,332,6],[170,0,333,5],[171,0,334,3],[171,5,154,46],[172,0,336,2,"_hasPressHandler"],[172,22,336,20],[172,50,336,31],[173,0,337,4],[173,13,337,11],[173,14,337,12],[173,16,338,6],[173,21,338,11,"props"],[173,26,338,6],[173,27,338,17,"onPress"],[173,34,338,6],[173,38,339,6],[173,43,339,11,"props"],[173,48,339,6],[173,49,339,17,"onPressIn"],[173,58,338,6],[173,62,340,6],[173,67,340,11,"props"],[173,72,340,6],[173,73,340,17,"onPressOut"],[173,83,338,6],[173,87,341,6],[173,92,341,11,"props"],[173,97,341,6],[173,98,341,17,"onLongPress"],[173,109,337,12],[173,110,337,4],[174,0,343,3],[174,5,154,46],[175,0,345,2,"render"],[175,12,345,10],[175,30,345,21],[176,0,346,4],[176,10,346,10,"child"],[176,18,346,18,"React"],[176,24,346,24,"Children"],[176,32,346,18],[176,33,346,33,"only"],[176,37,346,18],[176,38,346,38],[176,43,346,43,"props"],[176,48,346,38],[176,49,346,49,"children"],[176,57,346,18],[176,58,346,4],[177,0,347,4],[177,13,348,6],[177,33,348,7],[177,37,348,6],[178,0,349,8],[178,20,349,20],[178,25,349,25,"props"],[178,30,349,20],[178,31,349,31,"accessible"],[178,41,349,20],[178,46,349,46],[178,51,348,6],[179,0,350,8],[179,28,350,28],[179,33,350,33,"props"],[179,38,350,28],[179,39,350,39,"accessibilityLabel"],[179,57,348,6],[180,0,351,8],[180,36,351,36],[180,41,351,41,"props"],[180,46,351,36],[180,47,351,47,"accessibilityComponentType"],[180,73,348,6],[181,0,352,8],[181,29,352,29],[181,34,352,34,"props"],[181,39,352,29],[181,40,352,40,"accessibilityTraits"],[181,59,348,6],[182,0,353,8],[182,15,353,15,"StyleSheet"],[182,26,353,26,"compose"],[182,33,353,15],[182,34,354,10],[182,39,354,15,"props"],[182,44,354,10],[182,45,354,21,"style"],[182,50,353,15],[182,52,355,10],[182,57,355,15,"state"],[182,62,355,10],[182,63,355,21,"extraUnderlayStyle"],[182,81,353,15],[182,82,348,6],[183,0,357,8],[183,18,357,18],[183,23,357,23,"props"],[183,28,357,18],[183,29,357,29,"onLayout"],[183,37,348,6],[184,0,358,8],[184,17,358,17],[184,22,358,22,"props"],[184,27,358,17],[184,28,358,28,"hitSlop"],[184,35,348,6],[185,0,359,8],[185,24,359,24],[185,28,348,6],[186,0,360,8],[186,30,360,30],[186,35,360,35,"props"],[186,40,360,30],[186,41,360,41,"tvParallaxProperties"],[186,61,348,6],[187,0,361,8],[187,29,361,29],[187,34,361,34,"props"],[187,39,361,29],[187,40,361,40,"hasTVPreferredFocus"],[187,59,348,6],[188,0,362,8],[188,35,362,35],[188,40,362,40,"touchableHandleStartShouldSetResponder"],[188,78,348,6],[189,0,363,8],[189,39,364,10],[189,44,364,15,"touchableHandleResponderTerminationRequest"],[189,86,348,6],[190,0,366,8],[190,26,366,26],[190,31,366,31,"touchableHandleResponderGrant"],[190,60,348,6],[191,0,367,8],[191,25,367,25],[191,30,367,30,"touchableHandleResponderMove"],[191,58,348,6],[192,0,368,8],[192,28,368,28],[192,33,368,33,"touchableHandleResponderRelease"],[192,64,348,6],[193,0,369,8],[193,30,369,30],[193,35,369,35,"touchableHandleResponderTerminate"],[193,68,348,6],[194,0,370,8],[194,18,370,18],[194,23,370,23,"props"],[194,28,370,18],[194,29,370,29,"nativeID"],[194,37,348,6],[195,0,371,8],[195,16,371,16],[195,21,371,21,"props"],[195,26,371,16],[195,27,371,27,"testID"],[195,33,348,6],[196,0,348,6],[197,0,348,6],[198,0,348,6],[199,0,348,6],[200,0,348,6],[200,9,372,9,"React"],[200,15,372,15,"cloneElement"],[200,27,372,9],[200,28,372,28,"child"],[200,33,372,9],[200,35,372,35],[201,0,373,10,"style"],[201,15,373,17,"StyleSheet"],[201,26,373,28,"compose"],[201,33,373,17],[201,34,374,12,"child"],[201,40,374,18,"props"],[201,45,374,12],[201,46,374,24,"style"],[201,51,373,17],[201,53,375,12],[201,58,375,17,"state"],[201,63,375,12],[201,64,375,23,"extraChildStyle"],[201,79,373,17],[202,0,372,35],[202,7,372,9],[202,8,348,6],[202,10,378,9,"Touchable"],[202,20,378,19,"renderDebugView"],[202,35,378,9],[202,36,378,35],[203,0,379,10,"color"],[203,15,379,17],[203,22,378,35],[204,0,380,10,"hitSlop"],[204,17,380,19],[204,22,380,24,"props"],[204,27,380,19],[204,28,380,30,"hitSlop"],[205,0,378,35],[205,7,378,9],[205,8,348,6],[205,9,347,4],[206,0,384,3],[207,0,154,46],[207,3,154,29],[207,4,154,0],[208,0,387,0,"module"],[208,9,387,7,"exports"],[208,16,387,0],[208,19,387,17,"TouchableHighlight"],[208,37,387,0]]},"type":"js/module"}]}