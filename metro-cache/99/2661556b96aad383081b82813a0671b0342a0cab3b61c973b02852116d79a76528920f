{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  var KIND_KEY = 'key';\n  var KIND_VALUE = 'value';\n  var KIND_KEY_VAL = 'key+value';\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' ? typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\" : '@@iterator';\n\n  var toIterator = function () {\n    if (!(Array.prototype[ITERATOR_SYMBOL] && String.prototype[ITERATOR_SYMBOL])) {\n      return function () {\n        var ArrayIterator = function () {\n          function ArrayIterator(array, kind) {\n            _classCallCheck(this, ArrayIterator);\n\n            if (!Array.isArray(array)) {\n              throw new TypeError('Object is not an Array');\n            }\n\n            this._iteratedObject = array;\n            this._kind = kind;\n            this._nextIndex = 0;\n          }\n\n          _createClass(ArrayIterator, [{\n            key: \"next\",\n            value: function next() {\n              if (!this instanceof ArrayIterator) {\n                throw new TypeError('Object is not an ArrayIterator');\n              }\n\n              if (this._iteratedObject == null) {\n                return createIterResultObject(undefined, true);\n              }\n\n              var array = this._iteratedObject;\n              var len = this._iteratedObject.length;\n              var index = this._nextIndex;\n              var kind = this._kind;\n\n              if (index >= len) {\n                this._iteratedObject = undefined;\n                return createIterResultObject(undefined, true);\n              }\n\n              this._nextIndex = index + 1;\n\n              if (kind === KIND_KEY) {\n                return createIterResultObject(index, false);\n              } else if (kind === KIND_VALUE) {\n                return createIterResultObject(array[index], false);\n              } else if (kind === KIND_KEY_VAL) {\n                return createIterResultObject([index, array[index]], false);\n              }\n            }\n          }, {\n            key: '@@iterator',\n            value: function iterator() {\n              return this;\n            }\n          }]);\n\n          return ArrayIterator;\n        }();\n\n        var StringIterator = function () {\n          function StringIterator(string) {\n            _classCallCheck(this, StringIterator);\n\n            if (typeof string !== 'string') {\n              throw new TypeError('Object is not a string');\n            }\n\n            this._iteratedString = string;\n            this._nextIndex = 0;\n          }\n\n          _createClass(StringIterator, [{\n            key: \"next\",\n            value: function next() {\n              if (!this instanceof StringIterator) {\n                throw new TypeError('Object is not a StringIterator');\n              }\n\n              if (this._iteratedString == null) {\n                return createIterResultObject(undefined, true);\n              }\n\n              var index = this._nextIndex;\n              var s = this._iteratedString;\n              var len = s.length;\n\n              if (index >= len) {\n                this._iteratedString = undefined;\n                return createIterResultObject(undefined, true);\n              }\n\n              var ret;\n              var first = s.charCodeAt(index);\n\n              if (first < 0xd800 || first > 0xdbff || index + 1 === len) {\n                ret = s[index];\n              } else {\n                var second = s.charCodeAt(index + 1);\n\n                if (second < 0xdc00 || second > 0xdfff) {\n                  ret = s[index];\n                } else {\n                  ret = s[index] + s[index + 1];\n                }\n              }\n\n              this._nextIndex = index + ret.length;\n              return createIterResultObject(ret, false);\n            }\n          }, {\n            key: '@@iterator',\n            value: function iterator() {\n              return this;\n            }\n          }]);\n\n          return StringIterator;\n        }();\n\n        function createIterResultObject(value, done) {\n          return {\n            value: value,\n            done: done\n          };\n        }\n\n        return function (object, kind) {\n          if (typeof object === 'string') {\n            return new StringIterator(object);\n          } else if (Array.isArray(object)) {\n            return new ArrayIterator(object, kind || KIND_VALUE);\n          } else {\n            return object[ITERATOR_SYMBOL]();\n          }\n        };\n      }();\n    } else {\n      return function (object) {\n        return object[ITERATOR_SYMBOL]();\n      };\n    }\n  }();\n\n  _extends(toIterator, {\n    KIND_KEY: KIND_KEY,\n    KIND_VALUE: KIND_VALUE,\n    KIND_KEY_VAL: KIND_KEY_VAL,\n    ITERATOR_SYMBOL: ITERATOR_SYMBOL\n  });\n\n  module.exports = toIterator;\n});","map":[[2,0,10,0],[12,0,22,0],[12,6,22,6,"KIND_KEY"],[12,17,22,17],[12,22,22,0],[13,0,23,0],[13,6,23,6,"KIND_VALUE"],[13,19,23,19],[13,26,23,0],[14,0,24,0],[14,6,24,6,"KIND_KEY_VAL"],[14,21,24,21],[14,32,24,0],[15,0,26,0],[15,6,26,6,"ITERATOR_SYMBOL"],[15,24,27,2],[15,31,27,9,"Symbol"],[15,37,27,2],[15,42,27,20],[15,52,27,2],[15,86,27,33,"Symbol"],[15,93,27,40,"iterator"],[15,101,27,2],[15,119,27,51],[15,131,26,0],[17,0,29,0],[17,6,29,6,"toIterator"],[17,19,29,20],[17,31,29,31],[18,0,30,2],[18,8,31,4],[18,10,31,6,"Array"],[18,16,31,12,"prototype"],[18,25,31,6],[18,26,31,22,"ITERATOR_SYMBOL"],[18,41,31,6],[18,46,31,42,"String"],[18,53,31,49,"prototype"],[18,62,31,42],[18,63,31,59,"ITERATOR_SYMBOL"],[18,78,31,42],[18,79,31,4],[18,80,30,2],[18,82,32,4],[19,0,34,4],[19,13,34,12],[19,25,34,23],[20,0,34,23],[20,12,35,12,"ArrayIterator"],[20,25,34,23],[21,0,37,8],[21,33,37,20,"array"],[21,38,37,8],[21,40,37,27,"kind"],[21,44,37,8],[21,46,37,33],[22,0,37,33],[24,0,38,10],[24,16,38,14],[24,17,38,15,"Array"],[24,23,38,21,"isArray"],[24,30,38,15],[24,31,38,29,"array"],[24,36,38,15],[24,37,38,10],[24,39,38,37],[25,0,39,12],[25,20,39,18],[25,24,39,22,"TypeError"],[25,33,39,18],[25,34,39,32],[25,58,39,18],[25,59,39,12],[26,0,40,11],[28,0,41,10],[28,17,41,15,"_iteratedObject"],[28,32,41,10],[28,35,41,33,"array"],[28,40,41,10],[29,0,42,10],[29,17,42,15,"_kind"],[29,22,42,10],[29,25,42,23,"kind"],[29,29,42,10],[30,0,43,10],[30,17,43,15,"_nextIndex"],[30,27,43,10],[30,30,43,28],[30,31,43,10],[31,0,44,9],[33,0,34,23],[34,0,34,23],[35,0,34,23],[35,35,47,15],[36,0,48,10],[36,18,48,14],[36,19,48,15],[36,23,48,14],[36,35,48,31,"ArrayIterator"],[36,48,48,10],[36,50,48,46],[37,0,49,12],[37,22,49,18],[37,26,49,22,"TypeError"],[37,35,49,18],[37,36,49,32],[37,68,49,18],[37,69,49,12],[38,0,50,11],[40,0,52,10],[40,18,52,14],[40,23,52,19,"_iteratedObject"],[40,38,52,14],[40,42,52,38],[40,46,52,10],[40,48,52,44],[41,0,53,12],[41,23,53,19,"createIterResultObject"],[41,46,53,42,"undefined"],[41,55,53,19],[41,57,53,53],[41,61,53,19],[41,62,53,12],[42,0,54,11],[44,0,56,10],[44,18,56,16,"array"],[44,26,56,24],[44,31,56,29,"_iteratedObject"],[44,46,56,10],[45,0,57,10],[45,18,57,16,"len"],[45,24,57,22],[45,29,57,27,"_iteratedObject"],[45,44,57,22],[45,45,57,43,"length"],[45,51,57,10],[46,0,58,10],[46,18,58,16,"index"],[46,26,58,24],[46,31,58,29,"_nextIndex"],[46,41,58,10],[47,0,59,10],[47,18,59,16,"kind"],[47,25,59,23],[47,30,59,28,"_kind"],[47,35,59,10],[49,0,61,10],[49,18,61,14,"index"],[49,27,61,23,"len"],[49,30,61,10],[49,32,61,28],[50,0,62,12],[50,21,62,17,"_iteratedObject"],[50,36,62,12],[50,39,62,35,"undefined"],[50,48,62,12],[51,0,63,12],[51,23,63,19,"createIterResultObject"],[51,46,63,42,"undefined"],[51,55,63,19],[51,57,63,53],[51,61,63,19],[51,62,63,12],[52,0,64,11],[54,0,66,10],[54,19,66,15,"_nextIndex"],[54,29,66,10],[54,32,66,28,"index"],[54,40,66,36],[54,41,66,10],[56,0,68,10],[56,18,68,14,"kind"],[56,27,68,23,"KIND_KEY"],[56,35,68,10],[56,37,68,33],[57,0,69,12],[57,23,69,19,"createIterResultObject"],[57,46,69,42,"index"],[57,51,69,19],[57,53,69,49],[57,58,69,19],[57,59,69,12],[58,0,70,11],[58,15,68,10],[58,21,70,17],[58,25,70,21,"kind"],[58,34,70,30,"KIND_VALUE"],[58,44,70,17],[58,46,70,42],[59,0,71,12],[59,23,71,19,"createIterResultObject"],[59,46,71,42,"array"],[59,52,71,48,"index"],[59,57,71,42],[59,58,71,19],[59,60,71,56],[59,65,71,19],[59,66,71,12],[60,0,72,11],[60,15,70,17],[60,21,72,17],[60,25,72,21,"kind"],[60,34,72,30,"KIND_KEY_VAL"],[60,46,72,17],[60,48,72,44],[61,0,73,12],[61,23,73,19,"createIterResultObject"],[61,46,73,42],[61,47,73,43,"index"],[61,52,73,42],[61,54,73,50,"array"],[61,60,73,56,"index"],[61,65,73,50],[61,66,73,42],[61,67,73,19],[61,69,73,65],[61,74,73,19],[61,75,73,12],[62,0,74,11],[63,0,75,9],[64,0,34,23],[65,0,34,23],[65,17,78,8],[65,29,34,23],[66,0,34,23],[66,39,78,23],[67,0,79,10],[67,21,79,17],[67,25,79,10],[68,0,80,9],[69,0,34,23],[71,0,34,23],[72,0,34,23],[74,0,34,23],[74,12,83,12,"StringIterator"],[74,26,34,23],[75,0,85,8],[75,34,85,20,"string"],[75,40,85,8],[75,42,85,28],[76,0,85,28],[78,0,86,10],[78,16,86,14],[78,23,86,21,"string"],[78,29,86,14],[78,34,86,32],[78,42,86,10],[78,44,86,42],[79,0,87,12],[79,20,87,18],[79,24,87,22,"TypeError"],[79,33,87,18],[79,34,87,32],[79,58,87,18],[79,59,87,12],[80,0,88,11],[82,0,89,10],[82,17,89,15,"_iteratedString"],[82,32,89,10],[82,35,89,33,"string"],[82,41,89,10],[83,0,90,10],[83,17,90,15,"_nextIndex"],[83,27,90,10],[83,30,90,28],[83,31,90,10],[84,0,91,9],[86,0,34,23],[87,0,34,23],[88,0,34,23],[88,35,94,15],[89,0,95,10],[89,18,95,14],[89,19,95,15],[89,23,95,14],[89,35,95,31,"StringIterator"],[89,49,95,10],[89,51,95,47],[90,0,96,12],[90,22,96,18],[90,26,96,22,"TypeError"],[90,35,96,18],[90,36,96,32],[90,68,96,18],[90,69,96,12],[91,0,97,11],[93,0,99,10],[93,18,99,14],[93,23,99,19,"_iteratedString"],[93,38,99,14],[93,42,99,38],[93,46,99,10],[93,48,99,44],[94,0,100,12],[94,23,100,19,"createIterResultObject"],[94,46,100,42,"undefined"],[94,55,100,19],[94,57,100,53],[94,61,100,19],[94,62,100,12],[95,0,101,11],[97,0,103,10],[97,18,103,16,"index"],[97,26,103,24],[97,31,103,29,"_nextIndex"],[97,41,103,10],[98,0,104,10],[98,18,104,16,"s"],[98,22,104,20],[98,27,104,25,"_iteratedString"],[98,42,104,10],[99,0,105,10],[99,18,105,16,"len"],[99,24,105,22,"s"],[99,26,105,24,"length"],[99,32,105,10],[101,0,107,10],[101,18,107,14,"index"],[101,27,107,23,"len"],[101,30,107,10],[101,32,107,28],[102,0,108,12],[102,21,108,17,"_iteratedString"],[102,36,108,12],[102,39,108,35,"undefined"],[102,48,108,12],[103,0,109,12],[103,23,109,19,"createIterResultObject"],[103,46,109,42,"undefined"],[103,55,109,19],[103,57,109,53],[103,61,109,19],[103,62,109,12],[104,0,110,11],[106,0,112,10],[106,18,112,14,"ret"],[106,21,112,10],[107,0,113,10],[107,18,113,16,"first"],[107,26,113,24,"s"],[107,28,113,26,"charCodeAt"],[107,38,113,24],[107,39,113,37,"index"],[107,44,113,24],[107,45,113,10],[109,0,115,10],[109,18,115,14,"first"],[109,26,115,22],[109,32,115,14],[109,36,115,32,"first"],[109,44,115,40],[109,50,115,14],[109,54,115,50,"index"],[109,62,115,58],[109,63,115,50],[109,68,115,64,"len"],[109,71,115,10],[109,73,115,69],[110,0,116,12,"ret"],[110,22,116,18,"s"],[110,24,116,20,"index"],[110,29,116,18],[110,30,116,12],[111,0,117,11],[111,15,115,10],[111,21,117,17],[112,0,118,12],[112,20,118,18,"second"],[112,29,118,27,"s"],[112,31,118,29,"charCodeAt"],[112,41,118,27],[112,42,118,40,"index"],[112,50,118,48],[112,51,118,27],[112,52,118,12],[114,0,119,12],[114,20,119,16,"second"],[114,29,119,25],[114,35,119,16],[114,39,119,35,"second"],[114,48,119,44],[114,54,119,12],[114,56,119,52],[115,0,120,14,"ret"],[115,24,120,20,"s"],[115,26,120,22,"index"],[115,31,120,20],[115,32,120,14],[116,0,121,13],[116,17,119,12],[116,23,121,19],[117,0,122,14,"ret"],[117,24,122,20,"s"],[117,26,122,22,"index"],[117,31,122,20],[117,35,122,31,"s"],[117,37,122,33,"index"],[117,45,122,41],[117,46,122,31],[117,47,122,14],[118,0,123,13],[119,0,124,11],[121,0,126,10],[121,19,126,15,"_nextIndex"],[121,29,126,10],[121,32,126,28,"index"],[121,40,126,36,"ret"],[121,44,126,40,"length"],[121,50,126,10],[122,0,128,10],[122,21,128,17,"createIterResultObject"],[122,44,128,40,"ret"],[122,47,128,17],[122,49,128,45],[122,54,128,17],[122,55,128,10],[123,0,129,9],[124,0,34,23],[125,0,34,23],[125,17,132,8],[125,29,34,23],[126,0,34,23],[126,39,132,23],[127,0,133,10],[127,21,133,17],[127,25,133,10],[128,0,134,9],[129,0,34,23],[131,0,34,23],[132,0,34,23],[134,0,138,6],[134,17,138,15,"createIterResultObject"],[134,39,138,6],[134,40,138,38,"value"],[134,45,138,6],[134,47,138,45,"done"],[134,51,138,6],[134,53,138,51],[135,0,139,8],[135,17,139,15],[136,0,139,16,"value"],[136,19,139,23,"value"],[136,24,139,15],[137,0,139,30,"done"],[137,18,139,36,"done"],[138,0,139,15],[138,11,139,8],[139,0,140,7],[141,0,142,6],[141,15,142,13],[141,25,142,22,"object"],[141,31,142,13],[141,33,142,30,"kind"],[141,37,142,13],[141,39,142,36],[142,0,143,8],[142,14,143,12],[142,21,143,19,"object"],[142,27,143,12],[142,32,143,30],[142,40,143,8],[142,42,143,40],[143,0,144,10],[143,19,144,17],[143,23,144,21,"StringIterator"],[143,37,144,17],[143,38,144,36,"object"],[143,44,144,17],[143,45,144,10],[144,0,145,9],[144,11,143,8],[144,17,145,15],[144,21,145,19,"Array"],[144,27,145,25,"isArray"],[144,34,145,19],[144,35,145,33,"object"],[144,41,145,19],[144,42,145,15],[144,44,145,42],[145,0,146,10],[145,19,146,17],[145,23,146,21,"ArrayIterator"],[145,36,146,17],[145,37,146,35,"object"],[145,43,146,17],[145,45,146,43,"kind"],[145,53,146,51,"KIND_VALUE"],[145,63,146,17],[145,64,146,10],[146,0,147,9],[146,11,145,15],[146,17,147,15],[147,0,148,10],[147,19,148,17,"object"],[147,26,148,24,"ITERATOR_SYMBOL"],[147,41,148,17],[147,44,148,10],[148,0,149,9],[149,0,150,7],[149,9,142,6],[150,0,151,5],[150,7,34,11],[150,9,34,4],[151,0,152,3],[151,5,30,2],[151,11,152,9],[152,0,153,4],[152,13,153,11],[152,23,153,20,"object"],[152,29,153,11],[152,31,153,28],[153,0,154,6],[153,15,154,13,"object"],[153,22,154,20,"ITERATOR_SYMBOL"],[153,37,154,13],[153,40,154,6],[154,0,155,5],[154,7,153,4],[155,0,156,3],[156,0,157,1],[156,3,29,19],[156,5,29,0],[158,0,163,0],[158,11,163,14,"toIterator"],[158,21,163,0],[158,23,163,26],[159,0,164,2,"KIND_KEY"],[159,22,163,26],[160,0,165,2,"KIND_VALUE"],[160,26,163,26],[161,0,166,2,"KIND_KEY_VAL"],[161,30,163,26],[162,0,167,2,"ITERATOR_SYMBOL"],[163,0,163,26],[163,3,163,0],[165,0,170,0,"module"],[165,9,170,7,"exports"],[165,16,170,0],[165,19,170,17,"toIterator"],[165,29,170,0]]},"type":"js/module"}]}