{"dependencies":[{"name":"fbjs/lib/invariant","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\n  function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  var invariant = _$$_REQUIRE(_dependencyMap[0], 'fbjs/lib/invariant');\n\n  var ViewabilityHelper = function () {\n    function ViewabilityHelper() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        viewAreaCoveragePercentThreshold: 0\n      };\n\n      _classCallCheck(this, ViewabilityHelper);\n\n      this._hasInteracted = false;\n      this._timers = new Set();\n      this._viewableIndices = [];\n      this._viewableItems = new Map();\n      this._config = config;\n    }\n\n    _createClass(ViewabilityHelper, [{\n      key: \"dispose\",\n      value: function dispose() {\n        this._timers.forEach(clearTimeout);\n      }\n    }, {\n      key: \"computeViewableItems\",\n      value: function computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange) {\n        var _this$_config = this._config,\n            itemVisiblePercentThreshold = _this$_config.itemVisiblePercentThreshold,\n            viewAreaCoveragePercentThreshold = _this$_config.viewAreaCoveragePercentThreshold;\n        var viewAreaMode = viewAreaCoveragePercentThreshold != null;\n        var viewablePercentThreshold = viewAreaMode ? viewAreaCoveragePercentThreshold : itemVisiblePercentThreshold;\n        invariant(viewablePercentThreshold != null && itemVisiblePercentThreshold != null !== (viewAreaCoveragePercentThreshold != null), 'Must set exactly one of itemVisiblePercentThreshold or viewAreaCoveragePercentThreshold');\n        var viewableIndices = [];\n\n        if (itemCount === 0) {\n          return viewableIndices;\n        }\n\n        var firstVisible = -1;\n\n        var _ref = renderRange || {\n          first: 0,\n          last: itemCount - 1\n        },\n            first = _ref.first,\n            last = _ref.last;\n\n        invariant(last < itemCount, 'Invalid render range ' + JSON.stringify({\n          renderRange: renderRange,\n          itemCount: itemCount\n        }));\n\n        for (var idx = first; idx <= last; idx++) {\n          var metrics = getFrameMetrics(idx);\n\n          if (!metrics) {\n            continue;\n          }\n\n          var top = metrics.offset - scrollOffset;\n          var bottom = top + metrics.length;\n\n          if (top < viewportHeight && bottom > 0) {\n            firstVisible = idx;\n\n            if (_isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, metrics.length)) {\n              viewableIndices.push(idx);\n            }\n          } else if (firstVisible >= 0) {\n            break;\n          }\n        }\n\n        return viewableIndices;\n      }\n    }, {\n      key: \"onUpdate\",\n      value: function onUpdate(itemCount, scrollOffset, viewportHeight, getFrameMetrics, createViewToken, onViewableItemsChanged, renderRange) {\n        var _this = this;\n\n        if (this._config.waitForInteraction && !this._hasInteracted || itemCount === 0 || !getFrameMetrics(0)) {\n          return;\n        }\n\n        var viewableIndices = [];\n\n        if (itemCount) {\n          viewableIndices = this.computeViewableItems(itemCount, scrollOffset, viewportHeight, getFrameMetrics, renderRange);\n        }\n\n        if (this._viewableIndices.length === viewableIndices.length && this._viewableIndices.every(function (v, ii) {\n          return v === viewableIndices[ii];\n        })) {\n          return;\n        }\n\n        this._viewableIndices = viewableIndices;\n\n        if (this._config.minimumViewTime) {\n          var handle = setTimeout(function () {\n            _this._timers.delete(handle);\n\n            _this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n          }, this._config.minimumViewTime);\n\n          this._timers.add(handle);\n        } else {\n          this._onUpdateSync(viewableIndices, onViewableItemsChanged, createViewToken);\n        }\n      }\n    }, {\n      key: \"resetViewableIndices\",\n      value: function resetViewableIndices() {\n        this._viewableIndices = [];\n      }\n    }, {\n      key: \"recordInteraction\",\n      value: function recordInteraction() {\n        this._hasInteracted = true;\n      }\n    }, {\n      key: \"_onUpdateSync\",\n      value: function _onUpdateSync(viewableIndicesToCheck, onViewableItemsChanged, createViewToken) {\n        var _this2 = this;\n\n        viewableIndicesToCheck = viewableIndicesToCheck.filter(function (ii) {\n          return _this2._viewableIndices.includes(ii);\n        });\n        var prevItems = this._viewableItems;\n        var nextItems = new Map(viewableIndicesToCheck.map(function (ii) {\n          var viewable = createViewToken(ii, true);\n          return [viewable.key, viewable];\n        }));\n        var changed = [];\n\n        for (var _iterator = nextItems, _isArray = Array.isArray(_iterator), _i2 = 0, _iterator = _isArray ? _iterator : _iterator[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n          var _ref4;\n\n          if (_isArray) {\n            if (_i2 >= _iterator.length) break;\n            _ref4 = _iterator[_i2++];\n          } else {\n            _i2 = _iterator.next();\n            if (_i2.done) break;\n            _ref4 = _i2.value;\n          }\n\n          var _ref8 = _ref4;\n\n          var _ref3 = _slicedToArray(_ref8, 2);\n\n          var _key3 = _ref3[0];\n          var _viewable2 = _ref3[1];\n\n          if (!prevItems.has(_key3)) {\n            changed.push(_viewable2);\n          }\n        }\n\n        for (var _iterator2 = prevItems, _isArray2 = Array.isArray(_iterator2), _i3 = 0, _iterator2 = _isArray2 ? _iterator2 : _iterator2[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();;) {\n          var _ref7;\n\n          if (_isArray2) {\n            if (_i3 >= _iterator2.length) break;\n            _ref7 = _iterator2[_i3++];\n          } else {\n            _i3 = _iterator2.next();\n            if (_i3.done) break;\n            _ref7 = _i3.value;\n          }\n\n          var _ref9 = _ref7;\n\n          var _ref6 = _slicedToArray(_ref9, 2);\n\n          var _key4 = _ref6[0];\n          var _viewable3 = _ref6[1];\n\n          if (!nextItems.has(_key4)) {\n            changed.push(_objectSpread({}, _viewable3, {\n              isViewable: false\n            }));\n          }\n        }\n\n        if (changed.length > 0) {\n          this._viewableItems = nextItems;\n          onViewableItemsChanged({\n            viewableItems: Array.from(nextItems.values()),\n            changed: changed,\n            viewabilityConfig: this._config\n          });\n        }\n      }\n    }]);\n\n    return ViewabilityHelper;\n  }();\n\n  function _isViewable(viewAreaMode, viewablePercentThreshold, top, bottom, viewportHeight, itemLength) {\n    if (_isEntirelyVisible(top, bottom, viewportHeight)) {\n      return true;\n    } else {\n      var pixels = _getPixelsVisible(top, bottom, viewportHeight);\n\n      var percent = 100 * (viewAreaMode ? pixels / viewportHeight : pixels / itemLength);\n      return percent >= viewablePercentThreshold;\n    }\n  }\n\n  function _getPixelsVisible(top, bottom, viewportHeight) {\n    var visibleHeight = Math.min(bottom, viewportHeight) - Math.max(top, 0);\n    return Math.max(0, visibleHeight);\n  }\n\n  function _isEntirelyVisible(top, bottom, viewportHeight) {\n    return top >= 0 && bottom <= viewportHeight && bottom > top;\n  }\n\n  module.exports = ViewabilityHelper;\n});","map":[[2,0,10,0],[22,0,12,0],[22,6,12,6,"invariant"],[22,18,12,18,"require"],[22,49,12,26],[22,69,12,18],[22,70,12,0],[24,6,71,6,"ViewabilityHelper"],[24,23],[25,0,81,2],[25,33,83,4],[26,0,83,4],[26,10,82,4,"config"],[26,16,83,4],[26,87,82,32],[27,0,82,33,"viewAreaCoveragePercentThreshold"],[27,42,82,67],[28,0,82,32],[28,7,83,4],[30,0,83,4],[32,0,83,4],[32,11,73,2,"_hasInteracted"],[32,25,83,4],[32,28,73,28],[32,33,83,4],[33,0,83,4],[33,11,77,2,"_timers"],[33,18,83,4],[33,21,77,25],[33,25,77,29,"Set"],[33,28,77,25],[33,30,83,4],[34,0,83,4],[34,11,78,2,"_viewableIndices"],[34,27,83,4],[34,30,78,36],[34,32,83,4],[35,0,83,4],[35,11,79,2,"_viewableItems"],[35,25,83,4],[35,28,79,43],[35,32,79,47,"Map"],[35,35,79,43],[35,37,83,4],[36,0,84,4],[36,11,84,9,"_config"],[36,18,84,4],[36,21,84,19,"config"],[36,27,84,4],[37,0,85,3],[41,32,90,12],[42,0,91,4],[42,13,91,9,"_timers"],[42,20,91,4],[42,21,91,17,"forEach"],[42,28,91,4],[42,29,91,25,"clearTimeout"],[42,41,91,4],[43,0,92,3],[46,43,98,4,"itemCount"],[46,52],[46,54,99,4,"scrollOffset"],[46,66],[46,68,100,4,"viewportHeight"],[46,82],[46,84,101,4,"getFrameMetrics"],[46,99],[46,101,102,4,"renderRange"],[46,112],[46,114,103,19],[47,0,103,19],[47,28,107,8],[47,33,107,13,"_config"],[47,40,103,19],[48,0,103,19],[48,12,105,6,"itemVisiblePercentThreshold"],[48,39,103,19],[48,56,105,6,"itemVisiblePercentThreshold"],[48,83,103,19],[49,0,103,19],[49,12,106,6,"viewAreaCoveragePercentThreshold"],[49,44,103,19],[49,61,106,6,"viewAreaCoveragePercentThreshold"],[49,93,103,19],[50,0,108,4],[50,12,108,10,"viewAreaMode"],[50,27,108,25,"viewAreaCoveragePercentThreshold"],[50,63,108,61],[50,67,108,4],[51,0,109,4],[51,12,109,10,"viewablePercentThreshold"],[51,39,109,37,"viewAreaMode"],[51,54,110,8,"viewAreaCoveragePercentThreshold"],[51,86,109,37],[51,89,111,8,"itemVisiblePercentThreshold"],[51,116,109,4],[52,0,112,4,"invariant"],[52,18,113,6,"viewablePercentThreshold"],[52,46,113,34],[52,50,113,6],[52,54,114,9,"itemVisiblePercentThreshold"],[52,85,114,40],[52,89,114,8],[52,95,115,11,"viewAreaCoveragePercentThreshold"],[52,131,115,47],[52,135,114,8],[52,136,112,4],[52,138,116,6],[52,227,112,4],[53,0,118,4],[53,12,118,10,"viewableIndices"],[53,30,118,28],[53,32,118,4],[55,0,119,4],[55,12,119,8,"itemCount"],[55,26,119,22],[55,27,119,4],[55,29,119,25],[56,0,120,6],[56,17,120,13,"viewableIndices"],[56,32,120,6],[57,0,121,5],[59,0,122,4],[59,12,122,8,"firstVisible"],[59,27,122,23],[59,28,122,24],[59,29,122,4],[61,0,103,19],[61,19,123,26,"renderRange"],[61,34,123,41],[62,0,123,42,"first"],[62,17,123,49],[62,18,123,41],[63,0,123,52,"last"],[63,16,123,58,"itemCount"],[63,28,123,70],[64,0,123,41],[64,9,103,19],[65,0,103,19],[65,12,123,11,"first"],[65,17,103,19],[65,25,123,11,"first"],[65,30,103,19],[66,0,103,19],[66,12,123,18,"last"],[66,16,103,19],[66,24,123,18,"last"],[66,28,103,19],[68,0,124,4,"invariant"],[68,18,125,6,"last"],[68,25,125,13,"itemCount"],[68,34,124,4],[68,36,126,6],[68,62,126,32,"JSON"],[68,67,126,37,"stringify"],[68,76,126,32],[68,77,126,47],[69,0,126,48,"renderRange"],[69,34,126,47],[70,0,126,61,"itemCount"],[71,0,126,47],[71,9,126,32],[71,10,124,4],[73,0,128,4],[73,13,128,9],[73,17,128,13,"idx"],[73,23,128,19,"first"],[73,28,128,4],[73,30,128,26,"idx"],[73,37,128,33,"last"],[73,41,128,4],[73,43,128,39,"idx"],[73,48,128,4],[73,50,128,46],[74,0,129,6],[74,14,129,12,"metrics"],[74,24,129,22,"getFrameMetrics"],[74,40,129,38,"idx"],[74,43,129,22],[74,44,129,6],[76,0,130,6],[76,14,130,10],[76,15,130,11,"metrics"],[76,22,130,6],[76,24,130,20],[77,0,131,8],[78,0,132,7],[80,0,133,6],[80,14,133,12,"top"],[80,20,133,18,"metrics"],[80,28,133,26,"offset"],[80,34,133,18],[80,37,133,35,"scrollOffset"],[80,49,133,6],[81,0,134,6],[81,14,134,12,"bottom"],[81,23,134,21,"top"],[81,29,134,27,"metrics"],[81,37,134,35,"length"],[81,43,134,6],[83,0,135,6],[83,14,135,10,"top"],[83,20,135,16,"viewportHeight"],[83,34,135,10],[83,38,135,34,"bottom"],[83,47,135,43],[83,48,135,6],[83,50,135,46],[84,0,136,8,"firstVisible"],[84,27,136,23,"idx"],[84,30,136,8],[86,0,137,8],[86,16,138,10,"_isViewable"],[86,28,139,12,"viewAreaMode"],[86,40,138,10],[86,42,140,12,"viewablePercentThreshold"],[86,66,138,10],[86,68,141,12,"top"],[86,71,138,10],[86,73,142,12,"bottom"],[86,79,138,10],[86,81,143,12,"viewportHeight"],[86,95,138,10],[86,97,144,12,"metrics"],[86,105,144,20,"length"],[86,111,138,10],[86,112,137,8],[86,114,146,10],[87,0,147,10,"viewableIndices"],[87,30,147,26,"push"],[87,34,147,10],[87,35,147,31,"idx"],[87,38,147,10],[88,0,148,9],[89,0,149,7],[89,11,135,6],[89,17,149,13],[89,21,149,17,"firstVisible"],[89,37,149,33],[89,38,149,13],[89,40,149,36],[90,0,150,8],[91,0,151,7],[92,0,152,5],[94,0,153,4],[94,15,153,11,"viewableIndices"],[94,30,153,4],[95,0,154,3],[98,31,161,4,"itemCount"],[98,40],[98,42,162,4,"scrollOffset"],[98,54],[98,56,163,4,"viewportHeight"],[98,70],[98,72,164,4,"getFrameMetrics"],[98,87],[98,89,165,4,"createViewToken"],[98,104],[98,106,166,4,"onViewableItemsChanged"],[98,128],[98,130,170,4,"renderRange"],[98,141],[98,143,171,10],[99,0,171,10],[101,0,172,4],[101,12,173,7],[101,17,173,12,"_config"],[101,24,173,7],[101,25,173,20,"waitForInteraction"],[101,43,173,7],[101,47,173,42],[101,48,173,43],[101,53,173,48,"_hasInteracted"],[101,67,173,6],[101,71,174,6,"itemCount"],[101,85,174,20],[101,86,173,6],[101,90,175,6],[101,91,175,7,"getFrameMetrics"],[101,107,175,23],[101,108,175,7],[101,109,172,4],[101,111,176,6],[102,0,177,6],[103,0,178,5],[105,0,179,4],[105,12,179,8,"viewableIndices"],[105,30,179,26],[105,32,179,4],[107,0,180,4],[107,12,180,8,"itemCount"],[107,21,180,4],[107,23,180,19],[108,0,181,6,"viewableIndices"],[108,28,181,24],[108,33,181,29,"computeViewableItems"],[108,53,181,24],[108,54,182,8,"itemCount"],[108,63,181,24],[108,65,183,8,"scrollOffset"],[108,77,181,24],[108,79,184,8,"viewportHeight"],[108,93,181,24],[108,95,185,8,"getFrameMetrics"],[108,110,181,24],[108,112,186,8,"renderRange"],[108,123,181,24],[108,124,181,6],[109,0,188,5],[111,0,189,4],[111,12,190,6],[111,17,190,11,"_viewableIndices"],[111,33,190,6],[111,34,190,28,"length"],[111,40,190,6],[111,45,190,39,"viewableIndices"],[111,61,190,55,"length"],[111,67,190,6],[111,71,191,6],[111,76,191,11,"_viewableIndices"],[111,92,191,6],[111,93,191,28,"every"],[111,98,191,6],[111,99,191,34],[111,109,191,35,"v"],[111,110,191,34],[111,112,191,38,"ii"],[111,114,191,34],[112,0,191,34],[112,17,191,45,"v"],[112,23,191,51,"viewableIndices"],[112,39,191,67,"ii"],[112,41,191,51],[112,42,191,34],[113,0,191,34],[113,9,191,6],[113,10,189,4],[113,12,192,6],[114,0,195,6],[115,0,196,5],[117,0,197,4],[117,13,197,9,"_viewableIndices"],[117,29,197,4],[117,32,197,28,"viewableIndices"],[117,47,197,4],[119,0,198,4],[119,12,198,8],[119,17,198,13,"_config"],[119,24,198,8],[119,25,198,21,"minimumViewTime"],[119,40,198,4],[119,42,198,38],[120,0,199,6],[120,14,199,12,"handle"],[120,23,199,21,"setTimeout"],[120,34,199,32],[120,46,199,38],[121,0,200,8],[121,18,200,13,"_timers"],[121,25,200,8],[121,26,200,21,"delete"],[121,32,200,8],[121,33,200,28,"handle"],[121,39,200,8],[123,0,201,8],[123,18,201,13,"_onUpdateSync"],[123,31,201,8],[123,32,202,10,"viewableIndices"],[123,47,201,8],[123,49,203,10,"onViewableItemsChanged"],[123,71,201,8],[123,73,204,10,"createViewToken"],[123,88,201,8],[124,0,206,7],[124,11,199,21],[124,13,206,9],[124,18,206,14,"_config"],[124,25,206,9],[124,26,206,22,"minimumViewTime"],[124,41,199,21],[124,42,199,6],[126,0,207,6],[126,15,207,11,"_timers"],[126,22,207,6],[126,23,207,19,"add"],[126,26,207,6],[126,27,207,23,"handle"],[126,33,207,6],[127,0,208,5],[127,9,198,4],[127,15,208,11],[128,0,209,6],[128,15,209,11,"_onUpdateSync"],[128,28,209,6],[128,29,210,8,"viewableIndices"],[128,44,209,6],[128,46,211,8,"onViewableItemsChanged"],[128,68,209,6],[128,70,212,8,"createViewToken"],[128,85,209,6],[129,0,214,5],[130,0,215,3],[133,45,220,25],[134,0,221,4],[134,13,221,9,"_viewableIndices"],[134,29,221,4],[134,32,221,28],[134,34,221,4],[135,0,222,3],[138,42,227,22],[139,0,228,4],[139,13,228,9,"_hasInteracted"],[139,27,228,4],[139,30,228,26],[139,34,228,4],[140,0,229,3],[143,36,232,4,"viewableIndicesToCheck"],[143,58],[143,60,233,4,"onViewableItemsChanged"],[143,82],[143,84,234,4,"createViewToken"],[143,99],[143,101,235,4],[144,0,235,4],[146,0,237,4,"viewableIndicesToCheck"],[146,33,237,29,"viewableIndicesToCheck"],[146,56,237,52,"filter"],[146,62,237,29],[146,63,237,59],[147,0,237,59],[147,17,238,6],[147,24,238,11,"_viewableIndices"],[147,40,238,6],[147,41,238,28,"includes"],[147,49,238,6],[147,50,238,37,"ii"],[147,52,238,6],[147,53,237,59],[148,0,237,59],[148,9,237,29],[148,10,237,4],[149,0,240,4],[149,12,240,10,"prevItems"],[149,24,240,22],[149,29,240,27,"_viewableItems"],[149,43,240,4],[150,0,241,4],[150,12,241,10,"nextItems"],[150,24,241,22],[150,28,241,26,"Map"],[150,31,241,22],[150,32,242,6,"viewableIndicesToCheck"],[150,55,242,29,"map"],[150,58,242,6],[150,59,242,33],[150,73,242,39],[151,0,243,8],[151,14,243,14,"viewable"],[151,25,243,25,"createViewToken"],[151,41,243,41,"ii"],[151,43,243,25],[151,45,243,45],[151,49,243,25],[151,50,243,8],[152,0,244,8],[152,17,244,15],[152,18,244,16,"viewable"],[152,27,244,25,"key"],[152,30,244,15],[152,32,244,30,"viewable"],[152,40,244,15],[152,41,244,8],[153,0,245,7],[153,9,242,6],[153,10,241,22],[153,11,241,4],[154,0,248,4],[154,12,248,10,"changed"],[154,22,248,20],[154,24,248,4],[156,0,249,4],[156,29,249,34,"nextItems"],[156,38,249,4],[156,199,249,45],[157,0,249,45],[159,0,249,45],[160,0,249,45],[161,0,249,45],[162,0,249,45],[163,0,249,45],[164,0,249,45],[165,0,249,45],[166,0,249,45],[168,0,249,45],[170,0,249,45],[172,0,249,45],[172,14,249,16,"key"],[172,19,249,45],[173,0,249,45],[173,14,249,21,"viewable"],[173,24,249,45],[175,0,250,6],[175,14,250,10],[175,15,250,11,"prevItems"],[175,25,250,21,"has"],[175,28,250,11],[175,29,250,25,"key"],[175,34,250,11],[175,35,250,6],[175,37,250,31],[176,0,251,8,"changed"],[176,20,251,16,"push"],[176,24,251,8],[176,25,251,21,"viewable"],[176,35,251,8],[177,0,252,7],[178,0,253,5],[180,0,254,4],[180,30,254,34,"prevItems"],[180,39,254,4],[180,206,254,45],[181,0,254,45],[183,0,254,45],[184,0,254,45],[185,0,254,45],[186,0,254,45],[187,0,254,45],[188,0,254,45],[189,0,254,45],[190,0,254,45],[192,0,254,45],[194,0,254,45],[196,0,254,45],[196,14,254,16,"key"],[196,19,254,45],[197,0,254,45],[197,14,254,21,"viewable"],[197,24,254,45],[199,0,255,6],[199,14,255,10],[199,15,255,11,"nextItems"],[199,25,255,21,"has"],[199,28,255,11],[199,29,255,25,"key"],[199,34,255,11],[199,35,255,6],[199,37,255,31],[200,0,256,8,"changed"],[200,20,256,16,"push"],[200,24,256,8],[200,43,256,25,"viewable"],[200,53,256,8],[201,0,256,35,"isViewable"],[201,26,256,47],[202,0,256,8],[203,0,257,7],[204,0,258,5],[206,0,259,4],[206,12,259,8,"changed"],[206,20,259,16,"length"],[206,26,259,8],[206,29,259,25],[206,30,259,4],[206,32,259,28],[207,0,260,6],[207,15,260,11,"_viewableItems"],[207,29,260,6],[207,32,260,28,"nextItems"],[207,41,260,6],[208,0,261,6,"onViewableItemsChanged"],[208,33,261,29],[209,0,262,8,"viewableItems"],[209,27,262,23,"Array"],[209,33,262,29,"from"],[209,37,262,23],[209,38,262,34,"nextItems"],[209,48,262,44,"values"],[209,54,262,34],[209,56,262,23],[209,57,261,29],[210,0,263,8,"changed"],[210,28,261,29],[211,0,264,8,"viewabilityConfig"],[211,31,264,27],[211,36,264,32,"_config"],[212,0,261,29],[212,11,261,6],[213,0,266,5],[214,0,267,3],[220,0,270,0],[220,11,270,9,"_isViewable"],[220,22,270,0],[220,23,271,2,"viewAreaMode"],[220,35,270,0],[220,37,272,2,"viewablePercentThreshold"],[220,61,270,0],[220,63,273,2,"top"],[220,66,270,0],[220,68,274,2,"bottom"],[220,74,270,0],[220,76,275,2,"viewportHeight"],[220,90,270,0],[220,92,276,2,"itemLength"],[220,102,270,0],[220,104,277,11],[221,0,278,2],[221,8,278,6,"_isEntirelyVisible"],[221,27,278,25,"top"],[221,30,278,6],[221,32,278,30,"bottom"],[221,38,278,6],[221,40,278,38,"viewportHeight"],[221,54,278,6],[221,55,278,2],[221,57,278,55],[222,0,279,4],[222,13,279,11],[222,17,279,4],[223,0,280,3],[223,5,278,2],[223,11,280,9],[224,0,281,4],[224,10,281,10,"pixels"],[224,19,281,19,"_getPixelsVisible"],[224,37,281,37,"top"],[224,40,281,19],[224,42,281,42,"bottom"],[224,48,281,19],[224,50,281,50,"viewportHeight"],[224,64,281,19],[224,65,281,4],[226,0,282,4],[226,10,282,10,"percent"],[226,20,283,6],[226,27,283,13,"viewAreaMode"],[226,42,283,28,"pixels"],[226,51,283,37,"viewportHeight"],[226,65,283,13],[226,68,283,54,"pixels"],[226,77,283,63,"itemLength"],[226,87,283,6],[226,88,282,4],[227,0,284,4],[227,13,284,11,"percent"],[227,24,284,22,"viewablePercentThreshold"],[227,48,284,4],[228,0,285,3],[229,0,286,1],[231,0,288,0],[231,11,288,9,"_getPixelsVisible"],[231,28,288,0],[231,29,289,2,"top"],[231,32,288,0],[231,34,290,2,"bottom"],[231,40,288,0],[231,42,291,2,"viewportHeight"],[231,56,288,0],[231,58,292,10],[232,0,293,2],[232,8,293,8,"visibleHeight"],[232,24,293,24,"Math"],[232,29,293,29,"min"],[232,32,293,24],[232,33,293,33,"bottom"],[232,39,293,24],[232,41,293,41,"viewportHeight"],[232,55,293,24],[232,59,293,59,"Math"],[232,64,293,64,"max"],[232,67,293,59],[232,68,293,68,"top"],[232,71,293,59],[232,73,293,73],[232,74,293,59],[232,75,293,2],[233,0,294,2],[233,11,294,9,"Math"],[233,16,294,14,"max"],[233,19,294,9],[233,20,294,18],[233,21,294,9],[233,23,294,21,"visibleHeight"],[233,36,294,9],[233,37,294,2],[234,0,295,1],[236,0,297,0],[236,11,297,9,"_isEntirelyVisible"],[236,29,297,0],[236,30,298,2,"top"],[236,33,297,0],[236,35,299,2,"bottom"],[236,41,297,0],[236,43,300,2,"viewportHeight"],[236,57,297,0],[236,59,301,11],[237,0,302,2],[237,11,302,9,"top"],[237,18,302,16],[237,19,302,9],[237,23,302,21,"bottom"],[237,33,302,31,"viewportHeight"],[237,47,302,9],[237,51,302,49,"bottom"],[237,60,302,58,"top"],[237,63,302,2],[238,0,303,1],[240,0,305,0,"module"],[240,9,305,7,"exports"],[240,16,305,0],[240,19,305,17,"ViewabilityHelper"],[240,36,305,0]]},"type":"js/module"}]}