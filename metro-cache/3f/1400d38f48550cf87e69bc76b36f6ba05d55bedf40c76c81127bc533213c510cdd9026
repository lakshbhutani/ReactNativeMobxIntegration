{"dependencies":[{"name":"react","isAsync":false},{"name":"./../../../react-transform-hmr/lib/index.js","isAsync":false},{"name":"react-native","isAsync":false},{"name":"react-native-tab-view","isAsync":false},{"name":"./TabBarIcon","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _reactNativeTabView = _$$_REQUIRE(_dependencyMap[3], \"react-native-tab-view\");\n\n  var _TabBarIcon = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./TabBarIcon\"));\n\n  var _class,\n      _temp2,\n      _jsxFileName = \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/react-navigation-deprecated-tab-navigator/src/views/TabBarTop.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\n  function _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\n  function _iterableToArray(iter) { if ((typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\") in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\n  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  var _components = {\n    TabBarTop: {\n      displayName: \"TabBarTop\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/react-navigation-deprecated-tab-navigator/src/views/TabBarTop.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var TabBarTop = _wrapComponent(\"TabBarTop\")((_temp2 = _class = function (_React$PureComponent) {\n    function TabBarTop() {\n      var _getPrototypeOf2;\n\n      var _temp, _this;\n\n      _classCallCheck(this, TabBarTop);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _possibleConstructorReturn(_this, (_temp = _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TabBarTop)).call.apply(_getPrototypeOf2, [this].concat(args))), _this._renderLabel = function (scene) {\n        var _this$props = _this.props,\n            position = _this$props.position,\n            tabBarPosition = _this$props.tabBarPosition,\n            navigation = _this$props.navigation,\n            activeTintColor = _this$props.activeTintColor,\n            inactiveTintColor = _this$props.inactiveTintColor,\n            showLabel = _this$props.showLabel,\n            upperCaseLabel = _this$props.upperCaseLabel,\n            labelStyle = _this$props.labelStyle,\n            allowFontScaling = _this$props.allowFontScaling;\n\n        if (showLabel === false) {\n          return null;\n        }\n\n        var index = scene.index;\n        var routes = navigation.state.routes;\n        var inputRange = [-1].concat(_toConsumableArray(routes.map(function (x, i) {\n          return i;\n        })));\n        var outputRange = inputRange.map(function (inputIndex) {\n          return inputIndex === index ? activeTintColor : inactiveTintColor;\n        });\n        var color = position.interpolate({\n          inputRange: inputRange,\n          outputRange: outputRange\n        });\n        var tintColor = scene.focused ? activeTintColor : inactiveTintColor;\n\n        var label = _this.props.getLabel(_objectSpread({}, scene, {\n          tintColor: tintColor\n        }));\n\n        if (typeof label === 'string') {\n          return _react.default.createElement(_reactNative.Animated.Text, {\n            style: [styles.label, {\n              color: color\n            }, labelStyle],\n            allowFontScaling: allowFontScaling,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47\n            }\n          }, upperCaseLabel ? label.toUpperCase() : label);\n        }\n\n        if (typeof label === 'function') {\n          return label(_objectSpread({}, scene, {\n            tintColor: tintColor\n          }));\n        }\n\n        return label;\n      }, _this._renderIcon = function (scene) {\n        var _this$props2 = _this.props,\n            position = _this$props2.position,\n            navigation = _this$props2.navigation,\n            activeTintColor = _this$props2.activeTintColor,\n            inactiveTintColor = _this$props2.inactiveTintColor,\n            renderIcon = _this$props2.renderIcon,\n            showIcon = _this$props2.showIcon,\n            iconStyle = _this$props2.iconStyle;\n\n        if (showIcon === false) {\n          return null;\n        }\n\n        return _react.default.createElement(_TabBarIcon.default, {\n          position: position,\n          navigation: navigation,\n          activeTintColor: activeTintColor,\n          inactiveTintColor: inactiveTintColor,\n          renderIcon: renderIcon,\n          scene: scene,\n          style: [styles.icon, iconStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          }\n        });\n      }, _this._handleOnPress = function (scene) {\n        var _this$props3 = _this.props,\n            getOnPress = _this$props3.getOnPress,\n            jumpToIndex = _this$props3.jumpToIndex,\n            navigation = _this$props3.navigation;\n        var previousScene = navigation.state.routes[navigation.state.index];\n        var onPress = getOnPress(previousScene, scene);\n\n        if (onPress) {\n          onPress({\n            previousScene: previousScene,\n            scene: scene,\n            jumpToIndex: jumpToIndex,\n            defaultHandler: jumpToIndex\n          });\n        } else {\n          jumpToIndex(scene.index);\n        }\n      }, _temp));\n    }\n\n    _createClass(TabBarTop, [{\n      key: \"render\",\n      value: function render() {\n        var props = this.props;\n        return _react.default.createElement(_reactNativeTabView.TabBar, _extends({}, props, {\n          onTabPress: this._handleOnPress,\n          jumpToIndex: function jumpToIndex() {},\n          renderIcon: this._renderIcon,\n          renderLabel: this._renderLabel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          }\n        }));\n      }\n    }]);\n\n    _inherits(TabBarTop, _React$PureComponent);\n\n    return TabBarTop;\n  }(_react.default.PureComponent), _class.defaultProps = {\n    activeTintColor: '#fff',\n    inactiveTintColor: '#fff',\n    showIcon: false,\n    showLabel: true,\n    upperCaseLabel: true,\n    allowFontScaling: true\n  }, _temp2));\n\n  var _default2 = TabBarTop;\n  exports.default = _default2;\n\n  var styles = _reactNative.StyleSheet.create({\n    icon: {\n      height: 24,\n      width: 24\n    },\n    label: {\n      textAlign: 'center',\n      fontSize: 13,\n      margin: 8,\n      backgroundColor: 'transparent'\n    }\n  });\n});","map":[[7,0,1,0],[11,0,2,0],[13,0,3,0],[15,0,4,0],[84,203,16,2,"_renderLabel"],[84,215],[84,218,16,17],[84,235,16,26],[85,0,16,26],[85,26,27,8],[85,32,27,13,"props"],[85,37,16,26],[86,0,16,26],[86,12,18,6,"position"],[86,20,16,26],[86,35,18,6,"position"],[86,43,16,26],[87,0,16,26],[87,12,19,6,"tabBarPosition"],[87,26,16,26],[87,41,19,6,"tabBarPosition"],[87,55,16,26],[88,0,16,26],[88,12,20,6,"navigation"],[88,22,16,26],[88,37,20,6,"navigation"],[88,47,16,26],[89,0,16,26],[89,12,21,6,"activeTintColor"],[89,27,16,26],[89,42,21,6,"activeTintColor"],[89,57,16,26],[90,0,16,26],[90,12,22,6,"inactiveTintColor"],[90,29,16,26],[90,44,22,6,"inactiveTintColor"],[90,61,16,26],[91,0,16,26],[91,12,23,6,"showLabel"],[91,21,16,26],[91,36,23,6,"showLabel"],[91,45,16,26],[92,0,16,26],[92,12,24,6,"upperCaseLabel"],[92,26,16,26],[92,41,24,6,"upperCaseLabel"],[92,55,16,26],[93,0,16,26],[93,12,25,6,"labelStyle"],[93,22,16,26],[93,37,25,6,"labelStyle"],[93,47,16,26],[94,0,16,26],[94,12,26,6,"allowFontScaling"],[94,28,16,26],[94,43,26,6,"allowFontScaling"],[94,59,16,26],[96,0,28,4],[96,12,28,8,"showLabel"],[96,26,28,22],[96,31,28,4],[96,33,28,29],[97,0,29,6],[97,17,29,13],[97,21,29,6],[98,0,30,5],[100,0,16,26],[100,12,31,12,"index"],[100,17,16,26],[100,20,31,22,"scene"],[100,25,16,26],[100,26,31,12,"index"],[100,31,16,26],[101,0,16,26],[101,12,32,12,"routes"],[101,18,16,26],[101,21,32,23,"navigation"],[101,32,32,34,"state"],[101,37,16,26],[101,38,32,12,"routes"],[101,44,16,26],[102,0,34,4],[102,12,34,10,"inputRange"],[102,26,34,24],[102,27,34,25],[102,28,34,10],[102,56,34,31,"routes"],[102,63,34,38,"map"],[102,66,34,31],[102,67,34,42],[102,77,34,43,"x"],[102,78,34,42],[102,80,34,46,"i"],[102,81,34,42],[103,0,34,42],[103,17,34,52,"i"],[103,18,34,42],[104,0,34,42],[104,9,34,31],[104,10,34,10],[104,12,34,4],[105,0,35,4],[105,12,35,10,"outputRange"],[105,26,35,24,"inputRange"],[105,37,35,35,"map"],[105,40,35,24],[105,41,36,6],[106,0,36,6],[106,17,36,21,"inputIndex"],[106,32,36,36,"index"],[106,37,36,21],[106,40,36,44,"activeTintColor"],[106,55,36,21],[106,58,36,62,"inactiveTintColor"],[106,75,36,6],[107,0,36,6],[107,9,35,24],[107,10,35,4],[108,0,38,4],[108,12,38,10,"color"],[108,20,38,18,"position"],[108,29,38,27,"interpolate"],[108,40,38,18],[108,41,38,39],[109,0,39,6,"inputRange"],[109,32,38,39],[110,0,40,6,"outputRange"],[110,23,40,19,"outputRange"],[111,0,38,39],[111,9,38,18],[111,10,38,4],[112,0,43,4],[112,12,43,10,"tintColor"],[112,24,43,22,"scene"],[112,30,43,28,"focused"],[112,37,43,22],[112,40,43,38,"activeTintColor"],[112,55,43,22],[112,58,43,56,"inactiveTintColor"],[112,75,43,4],[114,0,44,4],[114,12,44,10,"label"],[114,20,44,18],[114,26,44,23,"props"],[114,31,44,18],[114,32,44,29,"getLabel"],[114,40,44,18],[114,59,44,43,"scene"],[114,64,44,18],[115,0,44,50,"tintColor"],[116,0,44,18],[116,11,44,4],[118,0,45,4],[118,12,45,8],[118,19,45,15,"label"],[118,24,45,8],[118,29,45,25],[118,37,45,4],[118,39,45,35],[119,0,46,6],[119,17,47,8],[119,46,47,9],[119,67,47,8],[119,68,47,18],[119,72,47,8],[120,0,48,10],[120,19,48,17],[120,20,48,18,"styles"],[120,27,48,25,"label"],[120,32,48,17],[120,34,48,32],[121,0,48,34,"color"],[122,0,48,32],[122,13,48,17],[122,15,48,43,"labelStyle"],[122,25,48,17],[122,26,47,8],[123,0,49,10],[123,30,49,28,"allowFontScaling"],[123,46,47,8],[124,0,47,8],[125,0,47,8],[126,0,47,8],[127,0,47,8],[128,0,47,8],[128,13,50,11,"upperCaseLabel"],[128,30,50,28,"label"],[128,36,50,34,"toUpperCase"],[128,47,50,28],[128,49,50,11],[128,52,50,50,"label"],[128,57,47,8],[128,58,46,6],[129,0,53,5],[131,0,54,4],[131,12,54,8],[131,19,54,15,"label"],[131,24,54,8],[131,29,54,25],[131,39,54,4],[131,41,54,37],[132,0,55,6],[132,17,55,13,"label"],[132,41,55,24,"scene"],[132,46,55,13],[133,0,55,31,"tintColor"],[134,0,55,13],[134,13,55,6],[135,0,56,5],[137,0,58,4],[137,15,58,11,"label"],[137,20,58,4],[138,0,59,3],[138,7],[138,15,61,2,"_renderIcon"],[138,26],[138,29,61,16],[138,46,61,25],[139,0,61,25],[139,27,70,8],[139,33,70,13,"props"],[139,38,61,25],[140,0,61,25],[140,12,63,6,"position"],[140,20,61,25],[140,36,63,6,"position"],[140,44,61,25],[141,0,61,25],[141,12,64,6,"navigation"],[141,22,61,25],[141,38,64,6,"navigation"],[141,48,61,25],[142,0,61,25],[142,12,65,6,"activeTintColor"],[142,27,61,25],[142,43,65,6,"activeTintColor"],[142,58,61,25],[143,0,61,25],[143,12,66,6,"inactiveTintColor"],[143,29,61,25],[143,45,66,6,"inactiveTintColor"],[143,62,61,25],[144,0,61,25],[144,12,67,6,"renderIcon"],[144,22,61,25],[144,38,67,6,"renderIcon"],[144,48,61,25],[145,0,61,25],[145,12,68,6,"showIcon"],[145,20,61,25],[145,36,68,6,"showIcon"],[145,44,61,25],[146,0,61,25],[146,12,69,6,"iconStyle"],[146,21,61,25],[146,37,69,6,"iconStyle"],[146,46,61,25],[148,0,71,4],[148,12,71,8,"showIcon"],[148,25,71,21],[148,30,71,4],[148,32,71,28],[149,0,72,6],[149,17,72,13],[149,21,72,6],[150,0,73,5],[152,0,74,4],[152,15,75,6],[152,44,75,7],[152,63,75,6],[153,0,76,8],[153,20,76,18,"position"],[153,28,75,6],[154,0,77,8],[154,22,77,20,"navigation"],[154,32,75,6],[155,0,78,8],[155,27,78,25,"activeTintColor"],[155,42,75,6],[156,0,79,8],[156,29,79,27,"inactiveTintColor"],[156,46,75,6],[157,0,80,8],[157,22,80,20,"renderIcon"],[157,32,75,6],[158,0,81,8],[158,17,81,15,"scene"],[158,22,75,6],[159,0,82,8],[159,17,82,15],[159,18,82,16,"styles"],[159,25,82,23,"icon"],[159,29,82,15],[159,31,82,29,"iconStyle"],[159,40,82,15],[159,41,75,6],[160,0,75,6],[161,0,75,6],[162,0,75,6],[163,0,75,6],[164,0,75,6],[164,10,74,4],[165,0,85,3],[165,7],[165,15,87,2,"_handleOnPress"],[165,29],[165,32,87,19],[165,49,87,28],[166,0,87,28],[166,27,88,52],[166,33,88,57,"props"],[166,38,87,28],[167,0,87,28],[167,12,88,12,"getOnPress"],[167,22,87,28],[167,38,88,12,"getOnPress"],[167,48,87,28],[168,0,87,28],[168,12,88,24,"jumpToIndex"],[168,23,87,28],[168,39,88,24,"jumpToIndex"],[168,50,87,28],[169,0,87,28],[169,12,88,37,"navigation"],[169,22,87,28],[169,38,88,37,"navigation"],[169,48,87,28],[170,0,89,4],[170,12,89,10,"previousScene"],[170,28,89,26,"navigation"],[170,39,89,37,"state"],[170,44,89,26],[170,45,89,43,"routes"],[170,51,89,26],[170,52,89,50,"navigation"],[170,63,89,61,"state"],[170,68,89,50],[170,69,89,67,"index"],[170,74,89,26],[170,75,89,4],[171,0,90,4],[171,12,90,10,"onPress"],[171,22,90,20,"getOnPress"],[171,33,90,31,"previousScene"],[171,46,90,20],[171,48,90,46,"scene"],[171,53,90,20],[171,54,90,4],[173,0,92,4],[173,12,92,8,"onPress"],[173,19,92,4],[173,21,92,17],[174,0,96,6,"onPress"],[174,18,96,14],[175,0,97,8,"previousScene"],[175,40,96,14],[176,0,98,8,"scene"],[176,24,96,14],[177,0,99,8,"jumpToIndex"],[177,36,96,14],[178,0,100,8,"defaultHandler"],[178,28,100,24,"jumpToIndex"],[179,0,96,14],[179,11,96,6],[180,0,102,5],[180,9,92,4],[180,15,102,11],[181,0,103,6,"jumpToIndex"],[181,22,103,18,"scene"],[181,28,103,24,"index"],[181,33,103,6],[182,0,104,5],[183,0,105,3],[183,7],[188,31,107,11],[189,0,109,4],[189,12,109,10,"props"],[189,20,109,18],[189,25,109,23,"props"],[189,30,109,4],[190,0,111,4],[190,15,112,6],[190,44,112,7],[190,70,112,6],[190,85,113,12,"props"],[190,90,112,6],[191,0,114,8],[191,22,114,20],[191,27,114,25,"_handleOnPress"],[191,41,112,6],[192,0,115,8],[192,23,115,21],[192,46,115,27],[192,47,115,29],[192,48,112,6],[193,0,116,8],[193,22,116,20],[193,27,116,25,"_renderIcon"],[193,38,112,6],[194,0,117,8],[194,23,117,21],[194,28,117,26,"_renderLabel"],[194,40,112,6],[195,0,112,6],[196,0,112,6],[197,0,112,6],[198,0,112,6],[199,0,112,6],[199,11,111,4],[200,0,120,3],[206,4,6,39,"React"],[206,19,6,45,"PureComponent"],[206,32],[206,42,7,9,"defaultProps"],[206,54],[206,57,7,24],[207,0,8,4,"activeTintColor"],[207,21,8,21],[207,27,7,24],[208,0,9,4,"inactiveTintColor"],[208,23,9,23],[208,29,7,24],[209,0,10,4,"showIcon"],[209,14,10,14],[209,19,7,24],[210,0,11,4,"showLabel"],[210,15,11,15],[210,19,7,24],[211,0,12,4,"upperCaseLabel"],[211,20,12,20],[211,24,7,24],[212,0,13,4,"allowFontScaling"],[212,22,13,22],[213,0,7,24],[213,3],[218,0,123,0],[218,6,123,6,"styles"],[218,15,123,15,"StyleSheet"],[218,39,123,26,"create"],[218,45,123,15],[218,46,123,33],[219,0,124,2,"icon"],[219,10,124,8],[220,0,125,4,"height"],[220,14,125,12],[220,16,124,8],[221,0,126,4,"width"],[221,13,126,11],[222,0,124,8],[222,5,123,33],[223,0,128,2,"label"],[223,11,128,9],[224,0,129,4,"textAlign"],[224,17,129,15],[224,25,128,9],[225,0,130,4,"fontSize"],[225,16,130,14],[225,18,128,9],[226,0,131,4,"margin"],[226,14,131,12],[226,15,128,9],[227,0,132,4,"backgroundColor"],[227,23,132,21],[228,0,128,9],[229,0,123,33],[229,3,123,15],[229,4,123,0]]},"type":"js/module"}]}