{"dependencies":[{"name":"./ApiUrls","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _ApiUrls = _$$_REQUIRE(_dependencyMap[0], \"./ApiUrls\");\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  var NetworkOps = function () {\n    function NetworkOps() {\n      _classCallCheck(this, NetworkOps);\n\n      this.fetchResource = function (path) {\n        var userOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var defaultOptions = {};\n        var defaultHeaders = {};\n\n        var options = _objectSpread({}, defaultOptions, userOptions, {\n          headers: _objectSpread({}, defaultHeaders, userOptions.headers)\n        });\n\n        console.log(options);\n        var url = path;\n        var response = null;\n        return fetch(url, options).then(function (responseObject) {\n          response = responseObject;\n\n          if (response.status === 401) {}\n\n          if (response.status < 200 || response.status >= 300) {\n            return response.text();\n          }\n\n          return response.json();\n        }).then(function (parsedResponse) {\n          console.log(parsedResponse);\n\n          if (response.status < 200 || response.status >= 300) {\n            throw parsedResponse;\n          }\n\n          return parsedResponse;\n        }).catch(function (error) {\n          if (response) {\n            throw new ApiError(\"Request failed with status \" + response.status + \".\", error, response.status);\n          } else {\n            throw new ApiError(error.toString(), null, 'REQUEST_FAILED');\n          }\n        });\n      };\n    }\n\n    _createClass(NetworkOps, [{\n      key: \"signIn\",\n      value: function signIn(username, password) {\n        return fetchResource('signin', {\n          method: 'POST',\n          body: {\n            username: username,\n            password: password\n          }\n        });\n      }\n    }, {\n      key: \"uploadAvatar\",\n      value: function uploadAvatar(userId, file) {\n        return fetchResource(\"users/\" + userId + \"/avatar/\", {\n          method: 'PUT',\n          body: file,\n          headers: {\n            'Content-Type': file.type\n          }\n        });\n      }\n    }]);\n\n    return NetworkOps;\n  }();\n\n  exports.default = NetworkOps;\n});","map":[[7,0,1,0],[19,6,23,21,"NetworkOps"],[19,16],[23,11,26,2,"fetchResource"],[23,24],[23,27,26,18],[23,37,26,19,"path"],[23,41,26,18],[23,43,26,46],[24,0,26,46],[24,12,26,25,"userOptions"],[24,23,26,46],[24,94,26,39],[24,96,26,46],[25,0,28,2],[25,12,28,8,"defaultOptions"],[25,29,28,25],[25,31,28,2],[26,0,30,2],[26,12,30,8,"defaultHeaders"],[26,29,30,25],[26,31,30,2],[28,0,32,2],[28,12,32,8,"options"],[28,40,34,7,"defaultOptions"],[28,54,32,8],[28,56,35,7,"userOptions"],[28,67,32,8],[29,0,37,4,"headers"],[29,37,38,9,"defaultHeaders"],[29,51,37,4],[29,53,39,9,"userOptions"],[29,65,39,21,"headers"],[29,72,37,4],[30,0,32,8],[30,10,32,2],[32,0,42,2,"console"],[32,16,42,10,"log"],[32,19,42,2],[32,20,42,14,"options"],[32,27,42,2],[33,0,44,2],[33,12,44,8,"url"],[33,18,44,14,"path"],[33,22,44,2],[34,0,47,2],[34,12,47,6,"response"],[34,23,47,17],[34,27,47,2],[35,0,49,2],[35,15,49,9,"fetch"],[35,21,49,15,"url"],[35,24,49,9],[35,26,49,20,"options"],[35,33,49,9],[35,35,50,5,"then"],[35,39,49,9],[35,40,50,10],[35,66,50,28],[36,0,52,6,"response"],[36,21,52,17,"responseObject"],[36,35,52,6],[38,0,55,6],[38,14,55,10,"response"],[38,23,55,19,"status"],[38,29,55,10],[38,34,55,30],[38,37,55,6],[38,39,55,35],[38,40,58,7],[40,0,61,6],[40,14,61,10,"response"],[40,23,61,19,"status"],[40,29,61,10],[40,32,61,28],[40,35,61,10],[40,39,61,35,"response"],[40,48,61,44,"status"],[40,54,61,35],[40,58,61,54],[40,61,61,6],[40,63,61,59],[41,0,63,8],[41,19,63,15,"response"],[41,28,63,24,"text"],[41,32,63,15],[41,34,63,8],[42,0,64,7],[44,0,67,6],[44,17,67,13,"response"],[44,26,67,22,"json"],[44,30,67,13],[44,32,67,6],[45,0,68,5],[45,9,49,9],[45,11,71,5,"then"],[45,15,49,9],[45,16,71,10],[45,42,71,28],[46,0,73,6,"console"],[46,18,73,14,"log"],[46,21,73,6],[46,22,73,18,"parsedResponse"],[46,36,73,6],[48,0,74,6],[48,14,74,10,"response"],[48,23,74,19,"status"],[48,29,74,10],[48,32,74,28],[48,35,74,10],[48,39,74,35,"response"],[48,48,74,44,"status"],[48,54,74,35],[48,58,74,54],[48,61,74,6],[48,63,74,59],[49,0,76,8],[49,18,76,14,"parsedResponse"],[49,32,76,8],[50,0,77,7],[52,0,80,6],[52,17,80,13,"parsedResponse"],[52,31,80,6],[53,0,81,5],[53,9,49,9],[53,11,82,5,"catch"],[53,16,49,9],[53,17,82,11],[53,34,82,20],[54,0,85,6],[54,14,85,10,"response"],[54,22,85,6],[54,24,85,20],[55,0,86,8],[55,18,86,14],[55,22,86,18,"ApiError"],[55,30,86,14],[55,63,86,58,"response"],[55,72,86,67,"status"],[55,78,86,14],[55,86,86,79,"error"],[55,91,86,14],[55,93,86,86,"response"],[55,102,86,95,"status"],[55,108,86,14],[55,109,86,8],[56,0,87,7],[56,11,85,6],[56,17,87,13],[57,0,88,8],[57,18,88,14],[57,22,88,18,"ApiError"],[57,30,88,14],[57,31,88,27,"error"],[57,37,88,33,"toString"],[57,45,88,27],[57,47,88,14],[57,49,88,45],[57,53,88,14],[57,55,88,51],[57,71,88,14],[57,72,88,8],[58,0,89,7],[59,0,90,5],[59,9,49,9],[59,10,49,2],[60,0,91,1],[60,7],[65,29,95,8,"username"],[65,37],[65,39,95,18,"password"],[65,47],[65,49,95,28],[66,0,96,2],[66,15,96,9,"fetchResource"],[66,29,96,23],[66,37,96,9],[66,39,96,33],[67,0,97,4,"method"],[67,18,97,12],[67,24,96,33],[68,0,98,4,"body"],[68,16,98,10],[69,0,99,6,"username"],[69,30,98,10],[70,0,100,6,"password"],[71,0,98,10],[72,0,96,33],[72,9,96,9],[72,10,96,2],[73,0,103,1],[76,35,106,14,"userId"],[76,41],[76,43,106,22,"file"],[76,47],[76,49,106,28],[77,0,107,2],[77,15,107,9,"fetchResource"],[77,40,107,33,"userId"],[77,46,107,9],[77,61,107,52],[78,0,108,4,"method"],[78,18,108,12],[78,23,107,52],[79,0,109,4,"body"],[79,16,109,10,"file"],[79,20,107,52],[80,0,110,4,"headers"],[80,19,110,13],[81,0,111,6],[81,28,111,22,"file"],[81,33,111,27,"type"],[82,0,110,13],[83,0,107,52],[83,9,107,9],[83,10,107,2],[84,0,114,1]]},"type":"js/module"}]}