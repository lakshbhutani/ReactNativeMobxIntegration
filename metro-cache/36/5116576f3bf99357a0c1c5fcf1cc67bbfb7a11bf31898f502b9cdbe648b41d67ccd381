{"dependencies":[{"name":"react","isAsync":false},{"name":"./../../../../react-transform-hmr/lib/index.js","isAsync":false},{"name":"ColorPropType","isAsync":false},{"name":"React","isAsync":false},{"name":"prop-types","isAsync":false},{"name":"StyleSheet","isAsync":false},{"name":"StyleSheetPropType","isAsync":false},{"name":"ViewPropTypes","isAsync":false},{"name":"ViewStylePropTypes","isAsync":false},{"name":"processColor","isAsync":false},{"name":"requireNativeComponent","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _default = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"react\")).default;\n\n  var _reactTransformHmrLibIndexJs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../../../react-transform-hmr/lib/index.js\")).default;\n\n  var _jsxFileName = \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/react-native/Libraries/Components/Picker/PickerAndroid.android.js\";\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var _components = {\n    PickerAndroid: {\n      displayName: \"PickerAndroid\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = _reactTransformHmrLibIndexJs({\n    filename: \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/react-native/Libraries/Components/Picker/PickerAndroid.android.js\",\n    components: _components,\n    locals: [module],\n    imports: [_default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  var ColorPropType = _$$_REQUIRE(_dependencyMap[2], 'ColorPropType');\n\n  var React = _$$_REQUIRE(_dependencyMap[3], 'React');\n\n  var ReactPropTypes = _$$_REQUIRE(_dependencyMap[4], 'prop-types');\n\n  var StyleSheet = _$$_REQUIRE(_dependencyMap[5], 'StyleSheet');\n\n  var StyleSheetPropType = _$$_REQUIRE(_dependencyMap[6], 'StyleSheetPropType');\n\n  var ViewPropTypes = _$$_REQUIRE(_dependencyMap[7], 'ViewPropTypes');\n\n  var ViewStylePropTypes = _$$_REQUIRE(_dependencyMap[8], 'ViewStylePropTypes');\n\n  var processColor = _$$_REQUIRE(_dependencyMap[9], 'processColor');\n\n  var requireNativeComponent = _$$_REQUIRE(_dependencyMap[10], 'requireNativeComponent');\n\n  var DropdownPicker = requireNativeComponent('AndroidDropdownPicker');\n  var DialogPicker = requireNativeComponent('AndroidDialogPicker');\n  var REF_PICKER = 'picker';\n  var MODE_DROPDOWN = 'dropdown';\n  var pickerStyleType = StyleSheetPropType(_objectSpread({}, ViewStylePropTypes, {\n    color: ColorPropType\n  }));\n\n  var PickerAndroid = function (_React$Component) {\n    function PickerAndroid(_props, context) {\n      var _this;\n\n      _classCallCheck(this, PickerAndroid);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(PickerAndroid).call(this, _props, context));\n\n      _this._stateFromProps = function (props) {\n        var selectedIndex = 0;\n        var items = React.Children.map(props.children, function (child, index) {\n          if (child.props.value === props.selectedValue) {\n            selectedIndex = index;\n          }\n\n          var childProps = {\n            value: child.props.value,\n            label: child.props.label\n          };\n\n          if (child.props.color) {\n            childProps.color = processColor(child.props.color);\n          }\n\n          return childProps;\n        });\n        return {\n          selectedIndex: selectedIndex,\n          items: items\n        };\n      };\n\n      _this._onChange = function (event) {\n        if (_this.props.onValueChange) {\n          var position = event.nativeEvent.position;\n\n          if (position >= 0) {\n            var children = React.Children.toArray(_this.props.children);\n            var value = children[position].props.value;\n\n            _this.props.onValueChange(value, position);\n          } else {\n            _this.props.onValueChange(null, position);\n          }\n        }\n\n        _this._lastNativePosition = event.nativeEvent.position;\n\n        _this.forceUpdate();\n      };\n\n      var state = _this._stateFromProps(_props);\n\n      _this.state = _objectSpread({}, state, {\n        initialSelectedIndex: state.selectedIndex\n      });\n      return _this;\n    }\n\n    _createClass(PickerAndroid, [{\n      key: \"UNSAFE_componentWillReceiveProps\",\n      value: function UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState(this._stateFromProps(nextProps));\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var Picker = this.props.mode === MODE_DROPDOWN ? DropdownPicker : DialogPicker;\n        var nativeProps = {\n          enabled: this.props.enabled,\n          items: this.state.items,\n          mode: this.props.mode,\n          onSelect: this._onChange,\n          prompt: this.props.prompt,\n          selected: this.state.initialSelectedIndex,\n          testID: this.props.testID,\n          style: [styles.pickerAndroid, this.props.style],\n          accessibilityLabel: this.props.accessibilityLabel\n        };\n        return React.createElement(Picker, _extends({\n          ref: REF_PICKER\n        }, nativeProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          }\n        }));\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this._lastNativePosition = this.state.initialSelectedIndex;\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate() {\n        if (this.refs[REF_PICKER] && this.state.selectedIndex !== this._lastNativePosition) {\n          this.refs[REF_PICKER].setNativeProps({\n            selected: this.state.selectedIndex\n          });\n          this._lastNativePosition = this.state.selectedIndex;\n        }\n      }\n    }]);\n\n    _inherits(PickerAndroid, _React$Component);\n\n    return PickerAndroid;\n  }(React.Component);\n\n  PickerAndroid.propTypes = _objectSpread({}, ViewPropTypes, {\n    style: pickerStyleType,\n    selectedValue: ReactPropTypes.any,\n    enabled: ReactPropTypes.bool,\n    mode: ReactPropTypes.oneOf(['dialog', 'dropdown']),\n    onValueChange: ReactPropTypes.func,\n    prompt: ReactPropTypes.string,\n    testID: ReactPropTypes.string\n  });\n  PickerAndroid = _wrapComponent(\"PickerAndroid\")(PickerAndroid);\n  var styles = StyleSheet.create({\n    pickerAndroid: {\n      height: 50\n    }\n  });\n  module.exports = PickerAndroid;\n});","map":[[2,0,11,0],[53,0,13,0],[53,6,13,6,"ColorPropType"],[53,22,13,22,"require"],[53,53,13,30],[53,68,13,22],[53,69,13,0],[55,0,14,0],[55,6,14,6,"React"],[55,14,14,14,"require"],[55,45,14,22],[55,52,14,14],[55,53,14,0],[57,0,15,0],[57,6,15,6,"ReactPropTypes"],[57,23,15,23,"require"],[57,54,15,31],[57,66,15,23],[57,67,15,0],[59,0,16,0],[59,6,16,6,"StyleSheet"],[59,19,16,19,"require"],[59,50,16,27],[59,62,16,19],[59,63,16,0],[61,0,17,0],[61,6,17,6,"StyleSheetPropType"],[61,27,17,27,"require"],[61,58,17,35],[61,78,17,27],[61,79,17,0],[63,0,18,0],[63,6,18,6,"ViewPropTypes"],[63,22,18,22,"require"],[63,53,18,30],[63,68,18,22],[63,69,18,0],[65,0,19,0],[65,6,19,6,"ViewStylePropTypes"],[65,27,19,27,"require"],[65,58,19,35],[65,78,19,27],[65,79,19,0],[67,0,21,0],[67,6,21,6,"processColor"],[67,21,21,21,"require"],[67,52,21,29],[67,66,21,21],[67,67,21,0],[69,0,22,0],[69,6,22,6,"requireNativeComponent"],[69,31,22,31,"require"],[69,63,22,39],[69,87,22,31],[69,88,22,0],[71,0,24,0],[71,6,24,6,"DropdownPicker"],[71,23,24,23,"requireNativeComponent"],[71,46,24,46],[71,69,24,23],[71,70,24,0],[72,0,25,0],[72,6,25,6,"DialogPicker"],[72,21,25,21,"requireNativeComponent"],[72,44,25,44],[72,65,25,21],[72,66,25,0],[73,0,27,0],[73,6,27,6,"REF_PICKER"],[73,19,27,19],[73,27,27,0],[74,0,28,0],[74,6,28,6,"MODE_DROPDOWN"],[74,22,28,22],[74,32,28,0],[75,0,30,0],[75,6,30,6,"pickerStyleType"],[75,24,30,24,"StyleSheetPropType"],[75,61,31,5,"ViewStylePropTypes"],[75,79,30,24],[76,0,32,2,"color"],[76,11,32,9,"ColorPropType"],[77,0,30,24],[77,5,30,0],[79,6,40,6,"PickerAndroid"],[79,19],[80,0,63,2],[80,27,63,14,"props"],[80,33,63,2],[80,35,63,21,"context"],[80,42,63,2],[80,44,63,30],[81,0,63,30],[83,0,63,30],[85,0,64,4],[85,89,64,10,"props"],[85,95,64,4],[85,97,64,17,"context"],[85,104,64,4],[87,0,63,30],[87,12,78,2,"_stateFromProps"],[87,27,63,30],[87,30,78,20],[87,47,78,29],[88,0,79,4],[88,12,79,8,"selectedIndex"],[88,28,79,24],[88,29,79,4],[89,0,80,4],[89,12,80,10,"items"],[89,20,80,18,"React"],[89,26,80,24,"Children"],[89,34,80,18],[89,35,80,33,"map"],[89,38,80,18],[89,39,80,37,"props"],[89,45,80,43,"children"],[89,53,80,18],[89,55,80,53],[89,65,80,54,"child"],[89,70,80,53],[89,72,80,61,"index"],[89,77,80,53],[89,79,80,71],[90,0,81,6],[90,14,81,10,"child"],[90,20,81,16,"props"],[90,25,81,10],[90,26,81,22,"value"],[90,31,81,10],[90,36,81,32,"props"],[90,42,81,38,"selectedValue"],[90,55,81,6],[90,57,81,53],[91,0,82,8,"selectedIndex"],[91,28,82,24,"index"],[91,33,82,8],[92,0,83,7],[94,0,84,6],[94,14,84,12,"childProps"],[94,27,84,25],[95,0,85,8,"value"],[95,19,85,15,"child"],[95,25,85,21,"props"],[95,30,85,15],[95,31,85,27,"value"],[95,36,84,25],[96,0,86,8,"label"],[96,19,86,15,"child"],[96,25,86,21,"props"],[96,30,86,15],[96,31,86,27,"label"],[97,0,84,25],[97,11,84,6],[99,0,88,6],[99,14,88,10,"child"],[99,20,88,16,"props"],[99,25,88,10],[99,26,88,22,"color"],[99,31,88,6],[99,33,88,29],[100,0,89,8,"childProps"],[100,23,89,19,"color"],[100,28,89,8],[100,31,89,27,"processColor"],[100,44,89,40,"child"],[100,50,89,46,"props"],[100,55,89,40],[100,56,89,52,"color"],[100,61,89,27],[100,62,89,8],[101,0,90,7],[103,0,91,6],[103,17,91,13,"childProps"],[103,27,91,6],[104,0,92,5],[104,9,80,18],[104,10,80,4],[105,0,93,4],[105,15,93,11],[106,0,93,12,"selectedIndex"],[106,38,93,11],[107,0,93,27,"items"],[108,0,93,11],[108,9,93,4],[109,0,94,3],[109,7,63,30],[111,0,63,30],[111,12,115,2,"_onChange"],[111,21,63,30],[111,24,115,14],[111,34,115,15,"event"],[111,39,115,14],[111,41,115,32],[112,0,116,4],[112,12,116,8],[112,18,116,13,"props"],[112,23,116,8],[112,24,116,19,"onValueChange"],[112,37,116,4],[112,39,116,34],[113,0,117,6],[113,14,117,12,"position"],[113,25,117,23,"event"],[113,31,117,29,"nativeEvent"],[113,42,117,23],[113,43,117,41,"position"],[113,51,117,6],[115,0,118,6],[115,14,118,10,"position"],[115,26,118,22],[115,27,118,6],[115,29,118,25],[116,0,119,8],[116,16,119,14,"children"],[116,27,119,25,"React"],[116,33,119,31,"Children"],[116,41,119,25],[116,42,119,40,"toArray"],[116,49,119,25],[116,50,119,48],[116,56,119,53,"props"],[116,61,119,48],[116,62,119,59,"children"],[116,70,119,25],[116,71,119,8],[117,0,120,8],[117,16,120,14,"value"],[117,24,120,22,"children"],[117,33,120,31,"position"],[117,41,120,22],[117,43,120,41,"props"],[117,48,120,22],[117,49,120,47,"value"],[117,54,120,8],[119,0,121,8],[119,18,121,13,"props"],[119,23,121,8],[119,24,121,19,"onValueChange"],[119,37,121,8],[119,38,121,33,"value"],[119,43,121,8],[119,45,121,40,"position"],[119,53,121,8],[120,0,122,7],[120,11,118,6],[120,17,122,13],[121,0,123,8],[121,18,123,13,"props"],[121,23,123,8],[121,24,123,19,"onValueChange"],[121,37,123,8],[121,38,123,33],[121,42,123,8],[121,44,123,39,"position"],[121,52,123,8],[122,0,124,7],[123,0,125,5],[125,0,126,4],[125,14,126,9,"_lastNativePosition"],[125,33,126,4],[125,36,126,31,"event"],[125,42,126,37,"nativeEvent"],[125,53,126,31],[125,54,126,49,"position"],[125,62,126,4],[127,0,127,4],[127,14,127,9,"forceUpdate"],[127,25,127,4],[128,0,128,3],[128,7,63,30],[130,0,65,4],[130,10,65,10,"state"],[130,18,65,18],[130,24,65,23,"_stateFromProps"],[130,39,65,18],[130,40,65,39,"props"],[130,46,65,18],[130,47,65,4],[132,0,67,4],[132,12,67,9,"state"],[132,17,67,4],[132,38,68,9,"state"],[132,43,67,4],[133,0,69,6,"initialSelectedIndex"],[133,30,69,28,"state"],[133,36,69,34,"selectedIndex"],[134,0,67,4],[135,0,63,30],[136,0,71,3],[140,55,73,35,"nextProps"],[140,64],[140,66,73,46],[141,0,74,4],[141,13,74,9,"setState"],[141,21,74,4],[141,22,74,18],[141,27,74,23,"_stateFromProps"],[141,42,74,18],[141,43,74,39,"nextProps"],[141,52,74,18],[141,53,74,4],[142,0,75,3],[145,31,96,11],[146,0,97,4],[146,12,97,10,"Picker"],[146,21,98,6],[146,26,98,11,"props"],[146,31,98,6],[146,32,98,17,"mode"],[146,36,98,6],[146,41,98,26,"MODE_DROPDOWN"],[146,54,98,6],[146,57,98,42,"DropdownPicker"],[146,71,98,6],[146,74,98,59,"DialogPicker"],[146,86,97,4],[147,0,100,4],[147,12,100,10,"nativeProps"],[147,26,100,24],[148,0,101,6,"enabled"],[148,19,101,15],[148,24,101,20,"props"],[148,29,101,15],[148,30,101,26,"enabled"],[148,37,100,24],[149,0,102,6,"items"],[149,17,102,13],[149,22,102,18,"state"],[149,27,102,13],[149,28,102,24,"items"],[149,33,100,24],[150,0,103,6,"mode"],[150,16,103,12],[150,21,103,17,"props"],[150,26,103,12],[150,27,103,23,"mode"],[150,31,100,24],[151,0,104,6,"onSelect"],[151,20,104,16],[151,25,104,21,"_onChange"],[151,34,100,24],[152,0,105,6,"prompt"],[152,18,105,14],[152,23,105,19,"props"],[152,28,105,14],[152,29,105,25,"prompt"],[152,35,100,24],[153,0,106,6,"selected"],[153,20,106,16],[153,25,106,21,"state"],[153,30,106,16],[153,31,106,27,"initialSelectedIndex"],[153,51,100,24],[154,0,107,6,"testID"],[154,18,107,14],[154,23,107,19,"props"],[154,28,107,14],[154,29,107,25,"testID"],[154,35,100,24],[155,0,108,6,"style"],[155,17,108,13],[155,18,108,14,"styles"],[155,25,108,21,"pickerAndroid"],[155,38,108,13],[155,40,108,36],[155,45,108,41,"props"],[155,50,108,36],[155,51,108,47,"style"],[155,56,108,13],[155,57,100,24],[156,0,109,6,"accessibilityLabel"],[156,30,109,26],[156,35,109,31,"props"],[156,40,109,26],[156,41,109,37,"accessibilityLabel"],[157,0,100,24],[157,9,100,4],[158,0,112,4],[158,15,112,11],[158,35,112,12],[158,41,112,11],[159,0,112,19],[159,15,112,24,"REF_PICKER"],[160,0,112,11],[160,11,112,40,"nativeProps"],[160,22,112,11],[161,0,112,11],[162,0,112,11],[163,0,112,11],[164,0,112,11],[165,0,112,11],[165,11,112,4],[166,0,113,3],[169,42,130,22],[170,0,131,4],[170,13,131,9,"_lastNativePosition"],[170,32,131,4],[170,35,131,31],[170,40,131,36,"state"],[170,45,131,31],[170,46,131,42,"initialSelectedIndex"],[170,66,131,4],[171,0,132,3],[174,43,134,23],[175,0,141,4],[175,12,142,6],[175,17,142,11,"refs"],[175,21,142,6],[175,22,142,16,"REF_PICKER"],[175,32,142,6],[175,37,143,6],[175,42,143,11,"state"],[175,47,143,6],[175,48,143,17,"selectedIndex"],[175,61,143,6],[175,66,143,35],[175,71,143,40,"_lastNativePosition"],[175,90,141,4],[175,92,144,6],[176,0,145,6],[176,15,145,11,"refs"],[176,19,145,6],[176,20,145,16,"REF_PICKER"],[176,30,145,6],[176,32,145,28,"setNativeProps"],[176,46,145,6],[176,47,145,43],[177,0,146,8,"selected"],[177,22,146,18],[177,27,146,23,"state"],[177,32,146,18],[177,33,146,29,"selectedIndex"],[178,0,145,43],[178,11,145,6],[179,0,148,6],[179,15,148,11,"_lastNativePosition"],[179,34,148,6],[179,37,148,33],[179,42,148,38,"state"],[179,47,148,33],[179,48,148,44,"selectedIndex"],[179,61,148,6],[180,0,149,5],[181,0,150,3],[187,4,40,28,"React"],[187,10,40,34,"Component"],[187,19],[189,0,40,6,"PickerAndroid"],[189,15],[189,16,52,9,"propTypes"],[189,25],[189,46,53,7,"ViewPropTypes"],[189,59],[190,0,54,4,"style"],[190,11,54,11,"pickerStyleType"],[190,26],[191,0,55,4,"selectedValue"],[191,19,55,19,"ReactPropTypes"],[191,34,55,34,"any"],[191,37],[192,0,56,4,"enabled"],[192,13,56,13,"ReactPropTypes"],[192,28,56,28,"bool"],[192,32],[193,0,57,4,"mode"],[193,10,57,10,"ReactPropTypes"],[193,25,57,25,"oneOf"],[193,30,57,10],[193,31,57,31],[193,32,57,32],[193,40,57,31],[193,42,57,42],[193,52,57,31],[193,53,57,10],[193,54],[194,0,58,4,"onValueChange"],[194,19,58,19,"ReactPropTypes"],[194,34,58,34,"func"],[194,38],[195,0,59,4,"prompt"],[195,12,59,12,"ReactPropTypes"],[195,27,59,27,"string"],[195,33],[196,0,60,4,"testID"],[196,12,60,12,"ReactPropTypes"],[196,27,60,27,"string"],[199,0,153,0],[199,6,153,6,"styles"],[199,15,153,15,"StyleSheet"],[199,26,153,26,"create"],[199,32,153,15],[199,33,153,33],[200,0,154,2,"pickerAndroid"],[200,19,154,17],[201,0,160,4,"height"],[201,14,160,12],[202,0,154,17],[203,0,153,33],[203,3,153,15],[203,4,153,0],[204,0,164,0,"module"],[204,9,164,7,"exports"],[204,16,164,0],[204,19,164,17,"PickerAndroid"],[204,32,164,0]]},"type":"js/module"}]}