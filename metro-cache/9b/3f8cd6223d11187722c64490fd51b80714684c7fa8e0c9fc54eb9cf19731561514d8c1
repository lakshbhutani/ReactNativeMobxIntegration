{"dependencies":[{"name":"react","isAsync":false},{"name":"./../../react-transform-hmr/lib/index.js","isAsync":false},{"name":"react-native","isAsync":false},{"name":"react-lifecycles-compat","isAsync":false},{"name":"./NavigationActions","isAsync":false},{"name":"./getNavigation","isAsync":false},{"name":"./utils/invariant","isAsync":false},{"name":"./utils/docsUrl","isAsync":false},{"name":"./routers/pathUtils","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports._TESTING_ONLY_reset_container_count = _TESTING_ONLY_reset_container_count;\n  exports.default = createNavigationContainer;\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"./../../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _reactLifecyclesCompat = _$$_REQUIRE(_dependencyMap[3], \"react-lifecycles-compat\");\n\n  var _NavigationActions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./NavigationActions\"));\n\n  var _getNavigation = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./getNavigation\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./utils/invariant\"));\n\n  var _docsUrl = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./utils/docsUrl\"));\n\n  var _pathUtils = _$$_REQUIRE(_dependencyMap[8], \"./routers/pathUtils\");\n\n  var _jsxFileName = \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/react-navigation/src/createNavigationContainer.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\n  var _components = {\n    NavigationContainer: {\n      displayName: \"NavigationContainer\",\n      isInFunction: true\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/react-navigation/src/createNavigationContainer.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  function isStateful(props) {\n    return !props.navigation;\n  }\n\n  function validateProps(props) {\n    if (isStateful(props)) {\n      return;\n    }\n\n    var navigation = props.navigation,\n        screenProps = props.screenProps,\n        containerProps = _objectWithoutProperties(props, [\"navigation\", \"screenProps\"]);\n\n    var keys = Object.keys(containerProps);\n\n    if (keys.length !== 0) {\n      throw new Error('This navigator has both navigation and container props, so it is ' + (\"unclear if it should own its own state. Remove props: \\\"\" + keys.join(', ') + \"\\\" \") + 'if the navigator should get its state from the navigation prop. If the ' + 'navigator should maintain its own state, do not pass a navigation prop.');\n    }\n  }\n\n  var _statefulContainerCount = 0;\n\n  function _TESTING_ONLY_reset_container_count() {\n    _statefulContainerCount = 0;\n  }\n\n  var _reactNavigationIsHydratingState = false;\n\n  function createNavigationContainer(Component) {\n    var NavigationContainer = function (_React$Component) {\n      _createClass(NavigationContainer, null, [{\n        key: \"getDerivedStateFromProps\",\n        value: function getDerivedStateFromProps(nextProps, prevState) {\n          validateProps(nextProps);\n          return null;\n        }\n      }]);\n\n      function NavigationContainer(props) {\n        var _this;\n\n        _classCallCheck(this, NavigationContainer);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(NavigationContainer).call(this, props));\n        _this.subs = null;\n        _this._actionEventSubscribers = new Set();\n\n        _this._handleOpenURL = function (_ref) {\n          var url = _ref.url;\n          var _this$props = _this.props,\n              enableURLHandling = _this$props.enableURLHandling,\n              uriPrefix = _this$props.uriPrefix;\n\n          if (enableURLHandling === false) {\n            return;\n          }\n\n          var parsedUrl = (0, _pathUtils.urlToPathAndParams)(url, uriPrefix);\n\n          if (parsedUrl) {\n            var path = parsedUrl.path,\n                params = parsedUrl.params;\n            var action = Component.router.getActionForPathAndParams(path, params);\n\n            if (action) {\n              _this.dispatch(action);\n            }\n          }\n        };\n\n        _this._persistNavigationState = function _callee(nav) {\n          var persistenceKey;\n          return regeneratorRuntime.async(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  persistenceKey = _this.props.persistenceKey;\n\n                  if (persistenceKey) {\n                    _context.next = 3;\n                    break;\n                  }\n\n                  return _context.abrupt(\"return\");\n\n                case 3:\n                  _context.next = 5;\n                  return regeneratorRuntime.awrap(_reactNative.AsyncStorage.setItem(persistenceKey, JSON.stringify(nav)));\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, this);\n        };\n\n        _this.dispatch = function (action) {\n          if (_this.props.navigation) {\n            return _this.props.navigation.dispatch(action);\n          }\n\n          _this._navState = _this._navState || _this.state.nav;\n          var lastNavState = _this._navState;\n          (0, _invariant.default)(lastNavState, 'should be set in constructor if stateful');\n          var reducedState = Component.router.getStateForAction(action, lastNavState);\n          var navState = reducedState === null ? lastNavState : reducedState;\n\n          var dispatchActionEvents = function dispatchActionEvents() {\n            _this._actionEventSubscribers.forEach(function (subscriber) {\n              return subscriber({\n                type: 'action',\n                action: action,\n                state: navState,\n                lastState: lastNavState\n              });\n            });\n          };\n\n          if (reducedState === null) {\n            dispatchActionEvents();\n            return true;\n          }\n\n          if (navState !== lastNavState) {\n            _this._navState = navState;\n\n            _this.setState({\n              nav: navState\n            }, function () {\n              _this._onNavigationStateChange(lastNavState, navState, action);\n\n              dispatchActionEvents();\n\n              _this._persistNavigationState(navState);\n            });\n\n            return true;\n          }\n\n          dispatchActionEvents();\n          return false;\n        };\n\n        _this._getScreenProps = function () {\n          return _this.props.screenProps;\n        };\n\n        validateProps(props);\n        _this._initialAction = _NavigationActions.default.init();\n\n        if (_this._isStateful()) {\n          _this.subs = _reactNative.BackHandler.addEventListener('hardwareBackPress', function () {\n            if (!_this._isMounted) {\n              _this.subs && _this.subs.remove();\n            } else {\n              return _this.dispatch(_NavigationActions.default.back());\n            }\n          });\n        }\n\n        _this.state = {\n          nav: _this._isStateful() && !props.persistenceKey ? Component.router.getStateForAction(_this._initialAction) : null\n        };\n        return _this;\n      }\n\n      _createClass(NavigationContainer, [{\n        key: \"_renderLoading\",\n        value: function _renderLoading() {\n          return this.props.renderLoadingExperimental ? this.props.renderLoadingExperimental() : null;\n        }\n      }, {\n        key: \"_isStateful\",\n        value: function _isStateful() {\n          return isStateful(this.props);\n        }\n      }, {\n        key: \"_validateProps\",\n        value: function _validateProps(props) {\n          if (this._isStateful()) {\n            return;\n          }\n\n          var navigation = props.navigation,\n              screenProps = props.screenProps,\n              containerProps = _objectWithoutProperties(props, [\"navigation\", \"screenProps\"]);\n\n          var keys = Object.keys(containerProps);\n\n          if (keys.length !== 0) {\n            throw new Error('This navigator has both navigation and container props, so it is ' + (\"unclear if it should own its own state. Remove props: \\\"\" + keys.join(', ') + \"\\\" \") + 'if the navigator should get its state from the navigation prop. If the ' + 'navigator should maintain its own state, do not pass a navigation prop.');\n          }\n        }\n      }, {\n        key: \"_onNavigationStateChange\",\n        value: function _onNavigationStateChange(prevNav, nav, action) {\n          if (typeof this.props.onNavigationStateChange === 'undefined' && this._isStateful() && !!process.env.REACT_NAV_LOGGING) {\n            if (console.group) {\n              console.group('Navigation Dispatch: ');\n              console.log('Action: ', action);\n              console.log('New State: ', nav);\n              console.log('Last State: ', prevNav);\n              console.groupEnd();\n            } else {\n              console.log('Navigation Dispatch: ', {\n                action: action,\n                newState: nav,\n                lastState: prevNav\n              });\n            }\n\n            return;\n          }\n\n          if (typeof this.props.onNavigationStateChange === 'function') {\n            this.props.onNavigationStateChange(prevNav, nav, action);\n          }\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          if (this._navState === this.state.nav) {\n            this._navState = null;\n          }\n        }\n      }, {\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n\n          var _this$props2, persistenceKey, uriPrefix, enableURLHandling, parsedUrl, startupStateJSON, _url, action, startupState, _parsedUrl, path, params, urlAction, dispatchActions;\n\n          return regeneratorRuntime.async(function componentDidMount$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  this._isMounted = true;\n\n                  if (this._isStateful()) {\n                    _context2.next = 3;\n                    break;\n                  }\n\n                  return _context2.abrupt(\"return\");\n\n                case 3:\n                  if (__DEV__ && !this.props.detached) {\n                    if (_statefulContainerCount > 0) {\n                      if (_reactNative.Platform.OS === 'ios') {\n                        console.warn(\"You should only render one navigator explicitly in your app, and other navigators should by rendered by including them in that navigator. Full details at: \" + (0, _docsUrl.default)('common-mistakes.html#explicitly-rendering-more-than-one-navigator'));\n                      }\n                    }\n                  }\n\n                  _statefulContainerCount++;\n\n                  _reactNative.Linking.addEventListener('url', this._handleOpenURL);\n\n                  _this$props2 = this.props, persistenceKey = _this$props2.persistenceKey, uriPrefix = _this$props2.uriPrefix, enableURLHandling = _this$props2.enableURLHandling;\n                  parsedUrl = null;\n                  startupStateJSON = null;\n\n                  if (!(enableURLHandling !== false)) {\n                    _context2.next = 20;\n                    break;\n                  }\n\n                  _context2.t0 = persistenceKey;\n\n                  if (!_context2.t0) {\n                    _context2.next = 15;\n                    break;\n                  }\n\n                  _context2.next = 14;\n                  return regeneratorRuntime.awrap(_reactNative.AsyncStorage.getItem(persistenceKey));\n\n                case 14:\n                  _context2.t0 = _context2.sent;\n\n                case 15:\n                  startupStateJSON = _context2.t0;\n                  _context2.next = 18;\n                  return regeneratorRuntime.awrap(_reactNative.Linking.getInitialURL());\n\n                case 18:\n                  _url = _context2.sent;\n                  parsedUrl = _url && (0, _pathUtils.urlToPathAndParams)(_url, uriPrefix);\n\n                case 20:\n                  action = this._initialAction;\n                  startupState = this.state.nav;\n\n                  if (!startupState) {\n                    !!process.env.REACT_NAV_LOGGING && console.log('Init new Navigation State');\n                    startupState = Component.router.getStateForAction(action);\n                  }\n\n                  if (startupStateJSON) {\n                    try {\n                      startupState = JSON.parse(startupStateJSON);\n                      _reactNavigationIsHydratingState = true;\n                    } catch (e) {}\n                  }\n\n                  if (parsedUrl) {\n                    _parsedUrl = parsedUrl, path = _parsedUrl.path, params = _parsedUrl.params;\n                    urlAction = Component.router.getActionForPathAndParams(path, params);\n\n                    if (urlAction) {\n                      !!process.env.REACT_NAV_LOGGING && console.log('Applying Navigation Action for Initial URL:', url);\n                      action = urlAction;\n                      startupState = Component.router.getStateForAction(urlAction, startupState);\n                    }\n                  }\n\n                  dispatchActions = function dispatchActions() {\n                    return _this2._actionEventSubscribers.forEach(function (subscriber) {\n                      return subscriber({\n                        type: 'action',\n                        action: action,\n                        state: _this2.state.nav,\n                        lastState: null\n                      });\n                    });\n                  };\n\n                  if (!(startupState === this.state.nav)) {\n                    _context2.next = 29;\n                    break;\n                  }\n\n                  dispatchActions();\n                  return _context2.abrupt(\"return\");\n\n                case 29:\n                  this.setState({\n                    nav: startupState\n                  }, function () {\n                    _reactNavigationIsHydratingState = false;\n                    dispatchActions();\n                  });\n\n                case 30:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, null, this);\n        }\n      }, {\n        key: \"componentDidCatch\",\n        value: function componentDidCatch(e, errorInfo) {\n          if (_reactNavigationIsHydratingState) {\n            _reactNavigationIsHydratingState = false;\n            console.warn('Uncaught exception while starting app from persisted navigation state! Trying to render again with a fresh navigation state..');\n            this.dispatch(_NavigationActions.default.init());\n          } else {\n            throw e;\n          }\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          this._isMounted = false;\n\n          _reactNative.Linking.removeEventListener('url', this._handleOpenURL);\n\n          this.subs && this.subs.remove();\n\n          if (this._isStateful()) {\n            _statefulContainerCount--;\n          }\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this3 = this;\n\n          var navigation = this.props.navigation;\n\n          if (this._isStateful()) {\n            var navState = this.state.nav;\n\n            if (!navState) {\n              return this._renderLoading();\n            }\n\n            if (!this._navigation || this._navigation.state !== navState) {\n              this._navigation = (0, _getNavigation.default)(Component.router, navState, this.dispatch, this._actionEventSubscribers, this._getScreenProps, function () {\n                return _this3._navigation;\n              });\n            }\n\n            navigation = this._navigation;\n          }\n\n          (0, _invariant.default)(navigation, 'failed to get navigation');\n          return _react.default.createElement(Component, _extends({}, this.props, {\n            navigation: navigation,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 376\n            }\n          }));\n        }\n      }]);\n\n      _inherits(NavigationContainer, _React$Component);\n\n      return NavigationContainer;\n    }(_react.default.Component);\n\n    NavigationContainer.router = Component.router;\n    NavigationContainer.navigationOptions = null;\n    NavigationContainer = _wrapComponent(\"NavigationContainer\")(NavigationContainer);\n    return (0, _reactLifecyclesCompat.polyfill)(NavigationContainer);\n  }\n});","map":[[8,0,1,0],[12,0,2,0],[14,0,3,0],[16,0,5,0],[18,0,6,0],[20,0,7,0],[22,0,8,0],[24,0,9,0],[70,0,11,0],[70,11,11,9,"isStateful"],[70,21,11,0],[70,22,11,20,"props"],[70,27,11,0],[70,29,11,27],[71,0,12,2],[71,11,12,9],[71,12,12,10,"props"],[71,18,12,16,"navigation"],[71,28,12,2],[72,0,13,1],[74,0,15,0],[74,11,15,9,"validateProps"],[74,24,15,0],[74,25,15,23,"props"],[74,30,15,0],[74,32,15,30],[75,0,16,2],[75,8,16,6,"isStateful"],[75,19,16,17,"props"],[75,24,16,6],[75,25,16,2],[75,27,16,25],[76,0,17,4],[77,0,18,3],[79,0,15,30],[79,8,20,10,"navigation"],[79,18,15,30],[79,21,20,57,"props"],[79,26,15,30],[79,27,20,10,"navigation"],[79,37,15,30],[80,0,15,30],[80,8,20,22,"screenProps"],[80,19,15,30],[80,22,20,57,"props"],[80,27,15,30],[80,28,20,22,"screenProps"],[80,39,15,30],[81,0,15,30],[81,8,20,38,"containerProps"],[81,22,15,30],[81,50,20,57,"props"],[81,55,15,30],[83,0,22,2],[83,8,22,8,"keys"],[83,15,22,15,"Object"],[83,22,22,22,"keys"],[83,26,22,15],[83,27,22,27,"containerProps"],[83,41,22,15],[83,42,22,2],[85,0,24,2],[85,8,24,6,"keys"],[85,13,24,11,"length"],[85,19,24,6],[85,24,24,22],[85,25,24,2],[85,27,24,25],[86,0,25,4],[86,12,25,10],[86,16,25,14,"Error"],[86,21,25,10],[86,22,26,6],[86,154,27,66,"keys"],[86,159,27,71,"join"],[86,163,27,66],[86,164,28,10],[86,168,27,66],[86,169,26,6],[86,181,30,8],[86,254,26,6],[86,257,31,8],[86,330,25,10],[86,331,25,4],[87,0,33,3],[88,0,34,1],[90,0,40,0],[90,6,40,4,"_statefulContainerCount"],[90,32,40,30],[90,33,40,0],[92,0,41,7],[92,11,41,16,"_TESTING_ONLY_reset_container_count"],[92,46,41,7],[92,49,41,54],[93,0,42,2,"_statefulContainerCount"],[93,30,42,28],[93,31,42,2],[94,0,43,1],[96,0,47,0],[96,6,47,4,"_reactNavigationIsHydratingState"],[96,41,47,39],[96,46,47,0],[98,0,59,15],[98,11,59,24,"createNavigationContainer"],[98,36,59,15],[98,37,59,50,"Component"],[98,46,59,15],[98,48,59,61],[99,0,59,61],[99,8,60,8,"NavigationContainer"],[99,27,59,61],[100,0,59,61],[101,0,59,61],[102,0,59,61],[102,49,66,36,"nextProps"],[102,58,59,61],[102,60,66,47,"prevState"],[102,69,59,61],[102,71,66,58],[103,0,67,6,"validateProps"],[103,24,67,20,"nextProps"],[103,33,67,6],[104,0,68,6],[104,17,68,13],[104,21,68,6],[105,0,69,5],[106,0,59,61],[108,0,73,4],[108,35,73,16,"props"],[108,40,73,4],[108,42,73,23],[109,0,73,23],[111,0,73,23],[113,0,74,6],[113,97,74,12,"props"],[113,102,74,6],[114,0,73,23],[114,14,61,4,"subs"],[114,18,73,23],[114,21,61,11],[114,25,73,23],[115,0,73,23],[115,14,71,4,"_actionEventSubscribers"],[115,37,73,23],[115,40,71,30],[115,44,71,34,"Set"],[115,47,71,30],[115,49,73,23],[117,0,73,23],[117,14,132,4,"_handleOpenURL"],[117,28,73,23],[117,31,132,21],[117,47,132,34],[118,0,132,34],[118,14,132,24,"url"],[118,17,132,34],[118,25,132,24,"url"],[118,28,132,34],[119,0,132,34],[119,28,133,47],[119,34,133,52,"props"],[119,39,132,34],[120,0,132,34],[120,14,133,14,"enableURLHandling"],[120,31,132,34],[120,46,133,14,"enableURLHandling"],[120,63,132,34],[121,0,132,34],[121,14,133,33,"uriPrefix"],[121,23,132,34],[121,38,133,33,"uriPrefix"],[121,47,132,34],[123,0,134,6],[123,14,134,10,"enableURLHandling"],[123,36,134,32],[123,41,134,6],[123,43,134,39],[124,0,135,8],[125,0,136,7],[127,0,137,6],[127,14,137,12,"parsedUrl"],[127,26,137,24],[127,61,137,43,"url"],[127,64,137,24],[127,66,137,48,"uriPrefix"],[127,75,137,24],[127,76,137,6],[129,0,138,6],[129,14,138,10,"parsedUrl"],[129,23,138,6],[129,25,138,21],[130,0,138,21],[130,16,139,16,"path"],[130,20,138,21],[130,23,139,33,"parsedUrl"],[130,32,138,21],[130,33,139,16,"path"],[130,37,138,21],[131,0,138,21],[131,16,139,22,"params"],[131,22,138,21],[131,25,139,33,"parsedUrl"],[131,34,138,21],[131,35,139,22,"params"],[131,41,138,21],[132,0,140,8],[132,16,140,14,"action"],[132,25,140,23,"Component"],[132,35,140,33,"router"],[132,41,140,23],[132,42,140,40,"getActionForPathAndParams"],[132,67,140,23],[132,68,140,66,"path"],[132,72,140,23],[132,74,140,72,"params"],[132,80,140,23],[132,81,140,8],[134,0,141,8],[134,16,141,12,"action"],[134,22,141,8],[134,24,141,20],[135,0,142,10],[135,20,142,15,"dispatch"],[135,28,142,10],[135,29,142,24,"action"],[135,35,142,10],[136,0,143,9],[137,0,144,7],[138,0,145,5],[138,9,73,23],[140,0,73,23],[140,14,286,4,"_persistNavigationState"],[140,37,73,23],[140,40,286,30],[140,57,286,36,"nav"],[140,60,286,30],[141,0,286,30],[142,0,286,30],[143,0,286,30],[144,0,286,30],[145,0,286,30],[146,0,287,14,"persistenceKey"],[146,32,286,30],[146,35,287,33],[146,41,287,38,"props"],[146,46,286,30],[146,47,287,14,"persistenceKey"],[146,61,286,30],[148,0,286,30],[148,22,288,11,"persistenceKey"],[148,36,286,30],[149,0,286,30],[150,0,286,30],[151,0,286,30],[153,0,286,30],[155,0,286,30],[156,0,286,30],[157,0,286,30],[157,50,291,12,"AsyncStorage"],[157,76,291,25,"setItem"],[157,83,291,12],[157,84,291,33,"persistenceKey"],[157,98,291,12],[157,100,291,49,"JSON"],[157,105,291,54,"stringify"],[157,114,291,49],[157,115,291,64,"nav"],[157,118,291,49],[157,119,291,12],[157,120,286,30],[159,0,286,30],[160,0,286,30],[161,0,286,30],[162,0,286,30],[163,0,286,30],[164,0,286,30],[165,0,286,30],[165,9,73,23],[167,0,73,23],[167,14,306,4,"dispatch"],[167,22,73,23],[167,25,306,15],[167,43,306,25],[168,0,307,6],[168,14,307,10],[168,20,307,15,"props"],[168,25,307,10],[168,26,307,21,"navigation"],[168,36,307,6],[168,38,307,33],[169,0,308,8],[169,19,308,15],[169,25,308,20,"props"],[169,30,308,15],[169,31,308,26,"navigation"],[169,41,308,15],[169,42,308,37,"dispatch"],[169,50,308,15],[169,51,308,46,"action"],[169,57,308,15],[169,58,308,8],[170,0,309,7],[172,0,312,6],[172,16,312,11,"_navState"],[172,25,312,6],[172,28,312,23],[172,34,312,28,"_navState"],[172,43,312,23],[172,47,312,41],[172,53,312,46,"state"],[172,58,312,41],[172,59,312,52,"nav"],[172,62,312,6],[173,0,313,6],[173,14,313,12,"lastNavState"],[173,29,313,27],[173,35,313,32,"_navState"],[173,44,313,6],[174,0,314,6],[174,34,314,16,"lastNavState"],[174,46,314,6],[174,48,314,30],[174,90,314,6],[175,0,315,6],[175,14,315,12,"reducedState"],[175,29,315,27,"Component"],[175,39,315,37,"router"],[175,45,315,27],[175,46,315,44,"getStateForAction"],[175,63,315,27],[175,64,316,8,"action"],[175,70,315,27],[175,72,317,8,"lastNavState"],[175,84,315,27],[175,85,315,6],[176,0,319,6],[176,14,319,12,"navState"],[176,25,319,23,"reducedState"],[176,42,319,40],[176,46,319,23],[176,49,319,47,"lastNavState"],[176,61,319,23],[176,64,319,62,"reducedState"],[176,76,319,6],[178,0,321,6],[178,14,321,12,"dispatchActionEvents"],[178,37,321,35],[178,46,321,12,"dispatchActionEvents"],[178,66,321,35],[178,69,321,41],[179,0,322,8],[179,18,322,13,"_actionEventSubscribers"],[179,41,322,8],[179,42,322,37,"forEach"],[179,49,322,8],[179,50,322,45],[180,0,322,45],[180,21,323,10,"subscriber"],[180,32,323,21],[181,0,324,12,"type"],[181,22,324,18],[181,30,323,21],[182,0,325,12,"action"],[182,30,323,21],[183,0,326,12,"state"],[183,23,326,19,"navState"],[183,31,323,21],[184,0,327,12,"lastState"],[184,27,327,23,"lastNavState"],[185,0,323,21],[185,15,323,10],[185,16,322,45],[186,0,322,45],[186,13,322,8],[187,0,330,7],[187,11,321,6],[189,0,332,6],[189,14,332,10,"reducedState"],[189,31,332,27],[189,35,332,6],[189,37,332,33],[190,0,335,8,"dispatchActionEvents"],[191,0,336,8],[191,19,336,15],[191,23,336,8],[192,0,337,7],[194,0,339,6],[194,14,339,10,"navState"],[194,27,339,23,"lastNavState"],[194,39,339,6],[194,41,339,37],[195,0,341,8],[195,18,341,13,"_navState"],[195,27,341,8],[195,30,341,25,"navState"],[195,38,341,8],[197,0,342,8],[197,18,342,13,"setState"],[197,26,342,8],[197,27,342,22],[198,0,342,24,"nav"],[198,19,342,29,"navState"],[199,0,342,22],[199,13,342,8],[199,15,342,41],[199,27,342,47],[200,0,343,10],[200,20,343,15,"_onNavigationStateChange"],[200,44,343,10],[200,45,343,40,"lastNavState"],[200,57,343,10],[200,59,343,54,"navState"],[200,67,343,10],[200,69,343,64,"action"],[200,75,343,10],[202,0,344,10,"dispatchActionEvents"],[204,0,345,10],[204,20,345,15,"_persistNavigationState"],[204,43,345,10],[204,44,345,39,"navState"],[204,52,345,10],[205,0,346,9],[205,13,342,8],[207,0,347,8],[207,19,347,15],[207,23,347,8],[208,0,348,7],[210,0,350,6,"dispatchActionEvents"],[211,0,351,6],[211,17,351,13],[211,22,351,6],[212,0,352,5],[212,9,73,23],[214,0,73,23],[214,14,354,4,"_getScreenProps"],[214,29,73,23],[214,32,354,22],[215,0,354,22],[215,17,354,28],[215,23,354,33,"props"],[215,28,354,28],[215,29,354,39,"screenProps"],[215,40,354,22],[216,0,354,22],[216,9,73,23],[218,0,76,6,"validateProps"],[218,22,76,20,"props"],[218,27,76,6],[219,0,78,6],[219,14,78,11,"_initialAction"],[219,28,78,6],[219,31,78,28,"NavigationActions"],[219,58,78,46,"init"],[219,62,78,28],[219,64,78,6],[221,0,80,6],[221,12,80,10],[221,18,80,15,"_isStateful"],[221,29,80,10],[221,31,80,6],[221,33,80,30],[222,0,81,8],[222,16,81,13,"subs"],[222,20,81,8],[222,23,81,20,"BackHandler"],[222,48,81,32,"addEventListener"],[222,64,81,20],[222,65,81,49],[222,84,81,20],[222,86,81,70],[222,98,81,76],[223,0,82,10],[223,16,82,14],[223,17,82,15],[223,23,82,20,"_isMounted"],[223,33,82,10],[223,35,82,32],[224,0,83,12],[224,20,83,17,"subs"],[224,24,83,12],[224,28,83,25],[224,34,83,30,"subs"],[224,38,83,25],[224,39,83,35,"remove"],[224,45,83,25],[224,47,83,12],[225,0,84,11],[225,13,82,10],[225,19,84,17],[226,0,88,12],[226,21,88,19],[226,27,88,24,"dispatch"],[226,35,88,19],[226,36,88,33,"NavigationActions"],[226,63,88,51,"back"],[226,67,88,33],[226,69,88,19],[226,70,88,12],[227,0,89,11],[228,0,90,9],[228,11,81,20],[228,12,81,8],[229,0,91,7],[231,0,93,6],[231,14,93,11,"state"],[231,19,93,6],[231,22,93,19],[232,0,94,8,"nav"],[232,15,95,10],[232,21,95,15,"_isStateful"],[232,32,95,10],[232,38,95,32],[232,39,95,33,"props"],[232,45,95,39,"persistenceKey"],[232,59,95,10],[232,62,96,14,"Component"],[232,72,96,24,"router"],[232,78,96,14],[232,79,96,31,"getStateForAction"],[232,96,96,14],[232,97,96,49],[232,103,96,54,"_initialAction"],[232,117,96,14],[232,118,95,10],[232,121,97,14],[233,0,93,19],[233,9,93,6],[234,0,73,23],[235,0,99,5],[237,0,59,61],[238,0,59,61],[239,0,59,61],[239,41,101,21],[240,0,102,6],[240,17,102,13],[240,22,102,18,"props"],[240,27,102,13],[240,28,102,24,"renderLoadingExperimental"],[240,53,102,13],[240,56,103,10],[240,61,103,15,"props"],[240,66,103,10],[240,67,103,21,"renderLoadingExperimental"],[240,92,103,10],[240,94,102,13],[240,97,104,10],[240,101,102,6],[241,0,105,5],[242,0,59,61],[243,0,59,61],[244,0,59,61],[244,38,107,18],[245,0,108,6],[245,17,108,13,"isStateful"],[245,28,108,24],[245,33,108,29,"props"],[245,38,108,13],[245,39,108,6],[246,0,109,5],[247,0,59,61],[248,0,59,61],[249,0,59,61],[249,39,111,19,"props"],[249,44,59,61],[249,46,111,26],[250,0,112,6],[250,14,112,10],[250,19,112,15,"_isStateful"],[250,30,112,10],[250,32,112,6],[250,34,112,30],[251,0,113,8],[252,0,114,7],[254,0,111,26],[254,14,116,14,"navigation"],[254,24,111,26],[254,27,116,61,"props"],[254,32,111,26],[254,33,116,14,"navigation"],[254,43,111,26],[255,0,111,26],[255,14,116,26,"screenProps"],[255,25,111,26],[255,28,116,61,"props"],[255,33,111,26],[255,34,116,26,"screenProps"],[255,45,111,26],[256,0,111,26],[256,14,116,42,"containerProps"],[256,28,111,26],[256,56,116,61,"props"],[256,61,111,26],[258,0,118,6],[258,14,118,12,"keys"],[258,21,118,19,"Object"],[258,28,118,26,"keys"],[258,32,118,19],[258,33,118,31,"containerProps"],[258,47,118,19],[258,48,118,6],[260,0,120,6],[260,14,120,10,"keys"],[260,19,120,15,"length"],[260,25,120,10],[260,30,120,26],[260,31,120,6],[260,33,120,29],[261,0,121,8],[261,18,121,14],[261,22,121,18,"Error"],[261,27,121,14],[261,28,122,10],[261,160,123,70,"keys"],[261,165,123,75,"join"],[261,169,123,70],[261,170,124,14],[261,174,123,70],[261,175,122,10],[261,187,126,12],[261,260,122,10],[261,263,127,12],[261,336,121,14],[261,337,121,8],[262,0,129,7],[263,0,130,5],[264,0,59,61],[265,0,59,61],[266,0,59,61],[266,49,147,29,"prevNav"],[266,56,59,61],[266,58,147,38,"nav"],[266,61,59,61],[266,63,147,43,"action"],[266,69,59,61],[266,71,147,51],[267,0,148,6],[267,14,149,8],[267,21,149,15],[267,26,149,20,"props"],[267,31,149,15],[267,32,149,26,"onNavigationStateChange"],[267,55,149,8],[267,60,149,54],[267,71,149,8],[267,75,150,8],[267,80,150,13,"_isStateful"],[267,91,150,8],[267,93,149,8],[267,97,151,8],[267,98,151,9],[267,99,151,10,"process"],[267,107,151,18,"env"],[267,110,151,10],[267,111,151,22,"REACT_NAV_LOGGING"],[267,128,148,6],[267,130,152,8],[268,0,154,8],[268,16,154,12,"console"],[268,24,154,20,"group"],[268,29,154,8],[268,31,154,27],[269,0,155,10,"console"],[269,22,155,18,"group"],[269,27,155,10],[269,28,155,24],[269,51,155,10],[270,0,156,10,"console"],[270,22,156,18,"log"],[270,25,156,10],[270,26,156,22],[270,36,156,10],[270,38,156,34,"action"],[270,44,156,10],[271,0,157,10,"console"],[271,22,157,18,"log"],[271,25,157,10],[271,26,157,22],[271,39,157,10],[271,41,157,37,"nav"],[271,44,157,10],[272,0,158,10,"console"],[272,22,158,18,"log"],[272,25,158,10],[272,26,158,22],[272,40,158,10],[272,42,158,38,"prevNav"],[272,49,158,10],[273,0,159,10,"console"],[273,22,159,18,"groupEnd"],[273,30,159,10],[274,0,160,9],[274,13,154,8],[274,19,160,15],[275,0,161,10,"console"],[275,22,161,18,"log"],[275,25,161,10],[275,26,161,22],[275,49,161,10],[275,51,161,47],[276,0,162,12,"action"],[276,30,161,47],[277,0,163,12,"newState"],[277,26,163,22,"nav"],[277,29,161,47],[278,0,164,12,"lastState"],[278,27,164,23,"prevNav"],[279,0,161,47],[279,15,161,10],[280,0,166,9],[282,0,168,8],[283,0,169,7],[285,0,171,6],[285,14,171,10],[285,21,171,17],[285,26,171,22,"props"],[285,31,171,17],[285,32,171,28,"onNavigationStateChange"],[285,55,171,10],[285,60,171,56],[285,70,171,6],[285,72,171,68],[286,0,172,8],[286,17,172,13,"props"],[286,22,172,8],[286,23,172,19,"onNavigationStateChange"],[286,46,172,8],[286,47,172,43,"prevNav"],[286,54,172,8],[286,56,172,52,"nav"],[286,59,172,8],[286,61,172,57,"action"],[286,67,172,8],[287,0,173,7],[288,0,174,5],[289,0,59,61],[290,0,59,61],[291,0,59,61],[291,45,176,25],[292,0,178,6],[292,14,178,10],[292,19,178,15,"_navState"],[292,28,178,10],[292,33,178,29],[292,38,178,34,"state"],[292,43,178,29],[292,44,178,40,"nav"],[292,47,178,6],[292,49,178,45],[293,0,179,8],[293,17,179,13,"_navState"],[293,26,179,8],[293,29,179,25],[293,33,179,8],[294,0,180,7],[295,0,181,5],[296,0,59,61],[297,0,59,61],[298,0,59,61],[299,0,59,61],[301,0,59,61],[303,0,59,61],[304,0,59,61],[305,0,59,61],[306,0,59,61],[307,0,184,6],[307,23,184,11,"_isMounted"],[307,33,184,6],[307,36,184,24],[307,40,184,6],[309,0,59,61],[309,22,185,11],[309,27,185,16,"_isStateful"],[309,38,185,11],[309,40,59,61],[310,0,59,61],[311,0,59,61],[312,0,59,61],[314,0,59,61],[316,0,59,61],[317,0,189,6],[317,22,189,10,"__DEV__"],[317,33,189,21],[317,34,189,22],[317,39,189,27,"props"],[317,44,189,22],[317,45,189,33,"detached"],[317,53,189,6],[317,55,189,43],[318,0,190,8],[318,24,190,12,"_statefulContainerCount"],[318,50,190,38],[318,51,190,8],[318,53,190,41],[319,0,193,10],[319,26,193,14,"Platform"],[319,48,193,23,"OS"],[319,50,193,14],[319,55,193,30],[319,60,193,10],[319,62,193,37],[320,0,194,12,"console"],[320,32,194,20,"warn"],[320,36,194,12],[320,197,195,172],[320,219,196,16],[320,286,195,172],[320,287,194,12],[321,0,199,11],[322,0,200,9],[323,0,201,7],[325,0,202,6,"_statefulContainerCount"],[327,0,203,6,"Linking"],[327,39,203,14,"addEventListener"],[327,55,203,6],[327,56,203,31],[327,61,203,6],[327,63,203,38],[327,68,203,43,"_handleOpenURL"],[327,82,203,6],[329,0,59,61],[329,33,206,63],[329,38,206,68,"props"],[329,43,59,61],[329,45,206,14,"persistenceKey"],[329,59,59,61],[329,75,206,14,"persistenceKey"],[329,89,59,61],[329,91,206,30,"uriPrefix"],[329,100,59,61],[329,116,206,30,"uriPrefix"],[329,125,59,61],[329,127,206,41,"enableURLHandling"],[329,144,59,61],[329,160,206,41,"enableURLHandling"],[329,177,59,61],[330,0,207,10,"parsedUrl"],[330,27,59,61],[330,30,207,22],[330,34,59,61],[331,0,208,10,"startupStateJSON"],[331,34,59,61],[331,37,208,29],[331,41,59,61],[333,0,59,61],[333,24,209,10,"enableURLHandling"],[333,46,209,32],[333,51,59,61],[334,0,59,61],[335,0,59,61],[336,0,59,61],[338,0,59,61],[338,33,211,10,"persistenceKey"],[338,47,59,61],[340,0,59,61],[341,0,59,61],[342,0,59,61],[343,0,59,61],[345,0,59,61],[346,0,59,61],[346,50,211,35,"AsyncStorage"],[346,76,211,48,"getItem"],[346,83,211,35],[346,84,211,56,"persistenceKey"],[346,98,211,35],[346,99,59,61],[348,0,59,61],[349,0,59,61],[351,0,59,61],[352,0,210,8,"startupStateJSON"],[352,34,59,61],[353,0,59,61],[354,0,59,61],[354,50,212,26,"Linking"],[354,71,212,34,"getInitialURL"],[354,84,212,26],[354,86,59,61],[356,0,59,61],[357,0,212,14,"url"],[357,22,59,61],[358,0,213,8,"parsedUrl"],[358,30,213,20,"url"],[358,38,213,27],[358,73,213,46,"url"],[358,77,213,27],[358,79,213,51,"uriPrefix"],[358,88,213,27],[358,89,213,8],[360,0,59,61],[361,0,219,10,"action"],[361,24,59,61],[361,27,219,19],[361,32,219,24,"_initialAction"],[361,46,59,61],[362,0,220,10,"startupState"],[362,30,59,61],[362,33,220,25],[362,38,220,30,"state"],[362,43,220,25],[362,44,220,36,"nav"],[362,47,59,61],[364,0,221,6],[364,22,221,10],[364,23,221,11,"startupState"],[364,35,221,6],[364,37,221,25],[365,0,222,8],[365,21,222,9],[365,22,222,10,"process"],[365,30,222,18,"env"],[365,33,222,10],[365,34,222,22,"REACT_NAV_LOGGING"],[365,51,222,8],[365,55,223,10,"console"],[365,63,223,18,"log"],[365,66,223,10],[365,67,223,22],[365,94,223,10],[365,95,222,8],[366,0,224,8,"startupState"],[366,35,224,23,"Component"],[366,45,224,33,"router"],[366,51,224,23],[366,52,224,40,"getStateForAction"],[366,69,224,23],[366,70,224,58,"action"],[366,76,224,23],[366,77,224,8],[367,0,225,7],[369,0,228,6],[369,22,228,10,"startupStateJSON"],[369,38,228,6],[369,40,228,28],[370,0,229,8],[370,24,229,12],[371,0,230,10,"startupState"],[371,37,230,25,"JSON"],[371,42,230,30,"parse"],[371,47,230,25],[371,48,230,36,"startupStateJSON"],[371,64,230,25],[371,65,230,10],[372,0,231,10,"_reactNavigationIsHydratingState"],[372,57,231,45],[372,61,231,10],[373,0,232,9],[373,21,229,8],[373,22,232,10],[373,29,232,17,"e"],[373,30,232,10],[373,32,232,20],[373,33,232,22],[374,0,233,7],[376,0,236,6],[376,22,236,10,"parsedUrl"],[376,31,236,6],[376,33,236,21],[377,0,236,21],[377,33,237,33,"parsedUrl"],[377,42,236,21],[377,44,237,16,"path"],[377,48,236,21],[377,62,237,16,"path"],[377,66,236,21],[377,68,237,22,"params"],[377,74,236,21],[377,88,237,22,"params"],[377,94,236,21],[378,0,238,14,"urlAction"],[378,29,236,21],[378,32,238,26,"Component"],[378,42,238,36,"router"],[378,48,238,26],[378,49,238,43,"getActionForPathAndParams"],[378,74,238,26],[378,75,239,10,"path"],[378,79,238,26],[378,81,240,10,"params"],[378,87,238,26],[378,88,236,21],[380,0,242,8],[380,24,242,12,"urlAction"],[380,33,242,8],[380,35,242,23],[381,0,243,10],[381,23,243,11],[381,24,243,12,"process"],[381,32,243,20,"env"],[381,35,243,12],[381,36,243,24,"REACT_NAV_LOGGING"],[381,53,243,10],[381,57,244,12,"console"],[381,65,244,20,"log"],[381,68,244,12],[381,69,244,24],[381,114,244,12],[381,116,244,71,"url"],[381,119,244,12],[381,120,243,10],[382,0,245,10,"action"],[382,31,245,19,"urlAction"],[382,40,245,10],[383,0,246,10,"startupState"],[383,37,246,25,"Component"],[383,47,246,35,"router"],[383,53,246,25],[383,54,246,42,"getStateForAction"],[383,71,246,25],[383,72,247,12,"urlAction"],[383,81,246,25],[383,83,248,12,"startupState"],[383,95,246,25],[383,96,246,10],[384,0,250,9],[385,0,251,7],[387,0,253,12,"dispatchActions"],[387,33,59,61],[387,36,253,30],[387,45,253,12,"dispatchActions"],[387,60,253,30],[388,0,253,30],[388,27,254,8],[388,34,254,13,"_actionEventSubscribers"],[388,57,254,8],[388,58,254,37,"forEach"],[388,65,254,8],[388,66,254,45],[389,0,254,45],[389,29,255,10,"subscriber"],[389,40,255,21],[390,0,256,12,"type"],[390,30,256,18],[390,38,255,21],[391,0,257,12,"action"],[391,38,255,21],[392,0,258,12,"state"],[392,31,258,19],[392,38,258,24,"state"],[392,43,258,19],[392,44,258,30,"nav"],[392,47,255,21],[393,0,259,12,"lastState"],[393,35,259,23],[394,0,255,21],[394,23,255,10],[394,24,254,45],[395,0,254,45],[395,21,254,8],[395,22,253,30],[396,0,253,30],[396,19,59,61],[398,0,59,61],[398,24,263,10,"startupState"],[398,41,263,27],[398,46,263,32,"state"],[398,51,263,27],[398,52,263,38,"nav"],[398,55,59,61],[399,0,59,61],[400,0,59,61],[401,0,59,61],[403,0,264,8,"dispatchActions"],[404,0,59,61],[406,0,59,61],[407,0,268,6],[407,23,268,11,"setState"],[407,31,268,6],[407,32,268,20],[408,0,268,22,"nav"],[408,25,268,27,"startupState"],[409,0,268,20],[409,19,268,6],[409,21,268,43],[409,33,268,49],[410,0,269,8,"_reactNavigationIsHydratingState"],[410,55,269,43],[410,60,269,8],[411,0,270,8,"dispatchActions"],[412,0,271,7],[412,19,268,6],[414,0,59,61],[415,0,59,61],[416,0,59,61],[417,0,59,61],[418,0,59,61],[419,0,59,61],[420,0,59,61],[421,0,59,61],[422,0,59,61],[423,0,59,61],[423,42,274,22,"e"],[423,43,59,61],[423,45,274,25,"errorInfo"],[423,54,59,61],[423,56,274,36],[424,0,275,6],[424,14,275,10,"_reactNavigationIsHydratingState"],[424,46,275,6],[424,48,275,44],[425,0,276,8,"_reactNavigationIsHydratingState"],[425,47,276,43],[425,52,276,8],[426,0,277,8,"console"],[426,20,277,16,"warn"],[426,24,277,8],[426,25,278,10],[426,152,277,8],[427,0,280,8],[427,17,280,13,"dispatch"],[427,25,280,8],[427,26,280,22,"NavigationActions"],[427,53,280,40,"init"],[427,57,280,22],[427,59,280,8],[428,0,281,7],[428,11,275,6],[428,17,281,13],[429,0,282,8],[429,18,282,14,"e"],[429,19,282,8],[430,0,283,7],[431,0,284,5],[432,0,59,61],[433,0,59,61],[434,0,59,61],[434,47,294,27],[435,0,295,6],[435,15,295,11,"_isMounted"],[435,25,295,6],[435,28,295,24],[435,33,295,6],[437,0,296,6,"Linking"],[437,31,296,14,"removeEventListener"],[437,50,296,6],[437,51,296,34],[437,56,296,6],[437,58,296,41],[437,63,296,46,"_handleOpenURL"],[437,77,296,6],[439,0,297,6],[439,15,297,11,"subs"],[439,19,297,6],[439,23,297,19],[439,28,297,24,"subs"],[439,32,297,19],[439,33,297,29,"remove"],[439,39,297,19],[439,41,297,6],[441,0,299,6],[441,14,299,10],[441,19,299,15,"_isStateful"],[441,30,299,10],[441,32,299,6],[441,34,299,30],[442,0,300,8,"_statefulContainerCount"],[443,0,301,7],[444,0,302,5],[445,0,59,61],[446,0,59,61],[447,0,59,61],[447,33,356,13],[448,0,356,13],[450,0,357,6],[450,14,357,10,"navigation"],[450,27,357,23],[450,32,357,28,"props"],[450,37,357,23],[450,38,357,34,"navigation"],[450,48,357,6],[452,0,358,6],[452,14,358,10],[452,19,358,15,"_isStateful"],[452,30,358,10],[452,32,358,6],[452,34,358,30],[453,0,359,8],[453,16,359,14,"navState"],[453,27,359,25],[453,32,359,30,"state"],[453,37,359,25],[453,38,359,36,"nav"],[453,41,359,8],[455,0,360,8],[455,16,360,12],[455,17,360,13,"navState"],[455,25,360,8],[455,27,360,23],[456,0,361,10],[456,21,361,17],[456,26,361,22,"_renderLoading"],[456,40,361,17],[456,42,361,10],[457,0,362,9],[459,0,363,8],[459,16,363,12],[459,17,363,13],[459,22,363,18,"_navigation"],[459,33,363,12],[459,37,363,33],[459,42,363,38,"_navigation"],[459,53,363,33],[459,54,363,50,"state"],[459,59,363,33],[459,64,363,60,"navState"],[459,72,363,8],[459,74,363,70],[460,0,364,10],[460,19,364,15,"_navigation"],[460,30,364,10],[460,33,364,29],[460,61,365,12,"Component"],[460,71,365,22,"router"],[460,77,364,29],[460,79,366,12,"navState"],[460,87,364,29],[460,89,367,12],[460,94,367,17,"dispatch"],[460,102,364,29],[460,104,368,12],[460,109,368,17,"_actionEventSubscribers"],[460,132,364,29],[460,134,369,12],[460,139,369,17,"_getScreenProps"],[460,154,364,29],[460,156,370,12],[461,0,370,12],[461,23,370,18],[461,30,370,23,"_navigation"],[461,41,370,12],[462,0,370,12],[462,15,364,29],[462,16,364,10],[463,0,372,9],[465,0,373,8,"navigation"],[465,25,373,21],[465,30,373,26,"_navigation"],[465,41,373,8],[466,0,374,7],[468,0,375,6],[468,34,375,16,"navigation"],[468,44,375,6],[468,46,375,28],[468,72,375,6],[469,0,376,6],[469,17,376,13],[469,46,376,14],[469,55,376,13],[469,70,376,28],[469,75,376,33,"props"],[469,80,376,13],[470,0,376,40],[470,24,376,52,"navigation"],[470,34,376,13],[471,0,376,13],[472,0,376,13],[473,0,376,13],[474,0,376,13],[475,0,376,13],[475,13,376,6],[476,0,377,5],[477,0,59,61],[479,0,59,61],[481,0,59,61],[482,0,59,61],[482,6,60,36,"React"],[482,21,60,42,"Component"],[482,30,59,61],[484,0,60,8,"NavigationContainer"],[484,23,59,61],[484,24,63,11,"router"],[484,30,59,61],[484,33,63,20,"Component"],[484,43,63,30,"router"],[484,49,59,61],[485,0,60,8,"NavigationContainer"],[485,23,59,61],[485,24,64,11,"navigationOptions"],[485,41,59,61],[485,44,64,31],[485,48,59,61],[486,0,59,61],[487,0,380,2],[487,11,380,9],[487,48,380,18,"NavigationContainer"],[487,67,380,9],[487,68,380,2],[488,0,381,1]]},"type":"js/module"}]}