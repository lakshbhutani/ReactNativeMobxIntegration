{"dependencies":[{"name":"BatchedBridge","isAsync":false},{"name":"fbjs/lib/invariant","isAsync":false},{"name":"defineLazyObjectProperty","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\n  function _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\n  function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\n  function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n  var BatchedBridge = _$$_REQUIRE(_dependencyMap[0], 'BatchedBridge');\n\n  var invariant = _$$_REQUIRE(_dependencyMap[1], 'fbjs/lib/invariant');\n\n  function genModule(config, moduleID) {\n    if (!config) {\n      return null;\n    }\n\n    var _config = _slicedToArray(config, 5),\n        moduleName = _config[0],\n        constants = _config[1],\n        methods = _config[2],\n        promiseMethods = _config[3],\n        syncMethods = _config[4];\n\n    invariant(!moduleName.startsWith('RCT') && !moduleName.startsWith('RK'), \"Module name prefixes should've been stripped by the native side \" + \"but wasn't for \" + moduleName);\n\n    if (!constants && !methods) {\n      return {\n        name: moduleName\n      };\n    }\n\n    var module = {};\n    methods && methods.forEach(function (methodName, methodID) {\n      var isPromise = promiseMethods && arrayContains(promiseMethods, methodID);\n      var isSync = syncMethods && arrayContains(syncMethods, methodID);\n      invariant(!isPromise || !isSync, 'Cannot have a method that is both async and a sync hook');\n      var methodType = isPromise ? 'promise' : isSync ? 'sync' : 'async';\n      module[methodName] = genMethod(moduleID, methodID, methodType);\n    });\n\n    _extends(module, constants);\n\n    if (__DEV__) {\n      BatchedBridge.createDebugLookup(moduleID, moduleName, methods);\n    }\n\n    return {\n      name: moduleName,\n      module: module\n    };\n  }\n\n  global.__fbGenNativeModule = genModule;\n\n  function loadModule(name, moduleID) {\n    invariant(global.nativeRequireModuleConfig, \"Can't lazily create module without nativeRequireModuleConfig\");\n    var config = global.nativeRequireModuleConfig(name);\n    var info = genModule(config, moduleID);\n    return info && info.module;\n  }\n\n  function genMethod(moduleID, methodID, type) {\n    var fn = null;\n\n    if (type === 'promise') {\n      fn = function fn() {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return new Promise(function (resolve, reject) {\n          BatchedBridge.enqueueNativeCall(moduleID, methodID, args, function (data) {\n            return resolve(data);\n          }, function (errorData) {\n            return reject(createErrorFromErrorData(errorData));\n          });\n        });\n      };\n    } else if (type === 'sync') {\n      fn = function fn() {\n        if (__DEV__) {\n          invariant(global.nativeCallSyncHook, 'Calling synchronous methods on native ' + 'modules is not supported in Chrome.\\n\\n Consider providing alternative ' + 'methods to expose this method in debug mode, e.g. by exposing constants ' + 'ahead-of-time.');\n        }\n\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        return global.nativeCallSyncHook(moduleID, methodID, args);\n      };\n    } else {\n      fn = function fn() {\n        for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          args[_key3] = arguments[_key3];\n        }\n\n        var lastArg = args.length > 0 ? args[args.length - 1] : null;\n        var secondLastArg = args.length > 1 ? args[args.length - 2] : null;\n        var hasSuccessCallback = typeof lastArg === 'function';\n        var hasErrorCallback = typeof secondLastArg === 'function';\n        hasErrorCallback && invariant(hasSuccessCallback, 'Cannot have a non-function arg after a function arg.');\n        var onSuccess = hasSuccessCallback ? lastArg : null;\n        var onFail = hasErrorCallback ? secondLastArg : null;\n        var callbackCount = hasSuccessCallback + hasErrorCallback;\n        args = args.slice(0, args.length - callbackCount);\n        BatchedBridge.enqueueNativeCall(moduleID, methodID, args, onFail, onSuccess);\n      };\n    }\n\n    fn.type = type;\n    return fn;\n  }\n\n  function arrayContains(array, value) {\n    return array.indexOf(value) !== -1;\n  }\n\n  function createErrorFromErrorData(errorData) {\n    var _ref = errorData || {},\n        message = _ref.message,\n        extraErrorInfo = _objectWithoutProperties(_ref, [\"message\"]);\n\n    var error = new Error(message);\n    error.framesToPop = 1;\n    return _extends(error, extraErrorInfo);\n  }\n\n  var NativeModules = {};\n\n  if (global.nativeModuleProxy) {\n    NativeModules = global.nativeModuleProxy;\n  } else if (!global.nativeExtensions) {\n    var bridgeConfig = global.__fbBatchedBridgeConfig;\n    invariant(bridgeConfig, '__fbBatchedBridgeConfig is not set, cannot invoke native modules');\n\n    var defineLazyObjectProperty = _$$_REQUIRE(_dependencyMap[2], 'defineLazyObjectProperty');\n\n    (bridgeConfig.remoteModuleConfig || []).forEach(function (config, moduleID) {\n      var info = genModule(config, moduleID);\n\n      if (!info) {\n        return;\n      }\n\n      if (info.module) {\n        NativeModules[info.name] = info.module;\n      } else {\n          defineLazyObjectProperty(NativeModules, info.name, {\n            get: function get() {\n              return loadModule(info.name, moduleID);\n            }\n          });\n        }\n    });\n  }\n\n  module.exports = NativeModules;\n});","map":[[2,0,11,0],[16,0,13,0],[16,6,13,6,"BatchedBridge"],[16,22,13,22,"require"],[16,53,13,30],[16,68,13,22],[16,69,13,0],[18,0,15,0],[18,6,15,6,"invariant"],[18,18,15,18,"require"],[18,49,15,26],[18,69,15,18],[18,70,15,0],[20,0,29,0],[20,11,29,9,"genModule"],[20,20,29,0],[20,21,30,2,"config"],[20,27,29,0],[20,29,31,2,"moduleID"],[20,37,29,0],[20,39,32,36],[21,0,33,2],[21,8,33,6],[21,9,33,7,"config"],[21,15,33,2],[21,17,33,15],[22,0,34,4],[22,13,34,11],[22,17,34,4],[23,0,35,3],[25,0,32,36],[25,33,37,72,"config"],[25,39,32,36],[26,0,32,36],[26,8,37,9,"moduleName"],[26,18,32,36],[27,0,32,36],[27,8,37,21,"constants"],[27,17,32,36],[28,0,32,36],[28,8,37,32,"methods"],[28,15,32,36],[29,0,32,36],[29,8,37,41,"promiseMethods"],[29,22,32,36],[30,0,32,36],[30,8,37,57,"syncMethods"],[30,19,32,36],[32,0,38,2,"invariant"],[32,14,39,4],[32,15,39,5,"moduleName"],[32,26,39,16,"startsWith"],[32,36,39,5],[32,37,39,27],[32,42,39,5],[32,43,39,4],[32,47,39,37],[32,48,39,38,"moduleName"],[32,59,39,49,"startsWith"],[32,69,39,38],[32,70,39,60],[32,74,39,38],[32,75,38,2],[32,77,40,4],[32,146,41,6],[32,163,40,4],[32,166,42,6,"moduleName"],[32,176,38,2],[34,0,45,2],[34,8,45,6],[34,9,45,7,"constants"],[34,18,45,6],[34,22,45,20],[34,23,45,21,"methods"],[34,30,45,2],[34,32,45,30],[35,0,47,4],[35,13,47,11],[36,0,47,12,"name"],[36,14,47,18,"moduleName"],[37,0,47,11],[37,7,47,4],[38,0,48,3],[40,0,50,2],[40,8,50,8,"module"],[40,17,50,17],[40,19,50,2],[41,0,51,2,"methods"],[41,15,52,4,"methods"],[41,23,52,12,"forEach"],[41,30,52,4],[41,31,52,20],[41,41,52,21,"methodName"],[41,51,52,20],[41,53,52,33,"methodID"],[41,61,52,20],[41,63,52,46],[42,0,53,6],[42,10,53,12,"isPromise"],[42,22,54,8,"promiseMethods"],[42,40,54,26,"arrayContains"],[42,54,54,40,"promiseMethods"],[42,68,54,26],[42,70,54,56,"methodID"],[42,78,54,26],[42,79,53,6],[43,0,55,6],[43,10,55,12,"isSync"],[43,19,55,21,"syncMethods"],[43,34,55,36,"arrayContains"],[43,48,55,50,"syncMethods"],[43,59,55,36],[43,61,55,63,"methodID"],[43,69,55,36],[43,70,55,6],[44,0,56,6,"invariant"],[44,16,57,8],[44,17,57,9,"isPromise"],[44,26,57,8],[44,30,57,22],[44,31,57,23,"isSync"],[44,37,56,6],[44,39,58,8],[44,96,56,6],[45,0,60,6],[45,10,60,12,"methodType"],[45,23,60,25,"isPromise"],[45,35,60,37],[45,44,60,25],[45,47,60,49,"isSync"],[45,56,60,58],[45,62,60,49],[45,65,60,67],[45,72,60,6],[46,0,61,6,"module"],[46,13,61,13,"methodName"],[46,23,61,6],[46,27,61,27,"genMethod"],[46,37,61,37,"moduleID"],[46,45,61,27],[46,47,61,47,"methodID"],[46,55,61,27],[46,57,61,57,"methodType"],[46,67,61,27],[46,68,61,6],[47,0,62,5],[47,5,52,4],[47,6,51,2],[49,0,63,2],[49,13,63,16,"module"],[49,19,63,2],[49,21,63,24,"constants"],[49,30,63,2],[51,0,65,2],[51,8,65,6,"__DEV__"],[51,15,65,2],[51,17,65,15],[52,0,66,4,"BatchedBridge"],[52,20,66,18,"createDebugLookup"],[52,37,66,4],[52,38,66,36,"moduleID"],[52,46,66,4],[52,48,66,46,"moduleName"],[52,58,66,4],[52,60,66,58,"methods"],[52,67,66,4],[53,0,67,3],[55,0,69,2],[55,11,69,9],[56,0,69,10,"name"],[56,12,69,16,"moduleName"],[56,22,69,9],[57,0,69,28,"module"],[58,0,69,9],[58,5,69,2],[59,0,70,1],[61,0,73,0,"global"],[61,9,73,7,"__fbGenNativeModule"],[61,28,73,0],[61,31,73,29,"genModule"],[61,40,73,0],[63,0,75,0],[63,11,75,9,"loadModule"],[63,21,75,0],[63,22,75,20,"name"],[63,26,75,0],[63,28,75,34,"moduleID"],[63,36,75,0],[63,38,75,61],[64,0,76,2,"invariant"],[64,14,77,4,"global"],[64,21,77,11,"nativeRequireModuleConfig"],[64,46,76,2],[64,48,78,4],[64,110,76,2],[65,0,80,2],[65,8,80,8,"config"],[65,17,80,17,"global"],[65,24,80,24,"nativeRequireModuleConfig"],[65,49,80,17],[65,50,80,50,"name"],[65,54,80,17],[65,55,80,2],[66,0,81,2],[66,8,81,8,"info"],[66,15,81,15,"genModule"],[66,25,81,25,"config"],[66,31,81,15],[66,33,81,33,"moduleID"],[66,41,81,15],[66,42,81,2],[67,0,82,2],[67,11,82,9,"info"],[67,19,82,17,"info"],[67,24,82,22,"module"],[67,30,82,2],[68,0,83,1],[70,0,85,0],[70,11,85,9,"genMethod"],[70,20,85,0],[70,21,85,19,"moduleID"],[70,29,85,0],[70,31,85,37,"methodID"],[70,39,85,0],[70,41,85,55,"type"],[70,45,85,0],[70,47,85,73],[71,0,86,2],[71,8,86,6,"fn"],[71,13,86,11],[71,17,86,2],[73,0,87,2],[73,8,87,6,"type"],[73,17,87,15],[73,26,87,2],[73,28,87,26],[74,0,88,4,"fn"],[74,11,88,9],[74,25,88,39],[75,0,88,39],[75,42,88,21,"args"],[75,46,88,39],[76,0,88,21,"args"],[76,14,88,39],[77,0,88,39],[79,0,89,6],[79,15,89,13],[79,19,89,17,"Promise"],[79,26,89,13],[79,27,89,25],[79,37,89,26,"resolve"],[79,44,89,25],[79,46,89,35,"reject"],[79,52,89,25],[79,54,89,46],[80,0,90,8,"BatchedBridge"],[80,24,90,22,"enqueueNativeCall"],[80,41,90,8],[80,42,91,10,"moduleID"],[80,50,90,8],[80,52,92,10,"methodID"],[80,60,90,8],[80,62,93,10,"args"],[80,66,90,8],[80,68,94,10],[81,0,94,10],[81,19,94,18,"resolve"],[81,27,94,26,"data"],[81,31,94,18],[81,32,94,10],[82,0,94,10],[82,11,90,8],[82,13,95,10],[83,0,95,10],[83,19,95,23,"reject"],[83,26,95,30,"createErrorFromErrorData"],[83,51,95,55,"errorData"],[83,60,95,30],[83,61,95,23],[83,62,95,10],[84,0,95,10],[84,11,90,8],[85,0,97,7],[85,9,89,13],[85,10,89,6],[86,0,98,5],[86,7,88,4],[87,0,99,3],[87,5,87,2],[87,11,99,9],[87,15,99,13,"type"],[87,24,99,22],[87,30,99,9],[87,32,99,30],[88,0,100,4,"fn"],[88,11,100,9],[88,25,100,39],[89,0,101,6],[89,12,101,10,"__DEV__"],[89,19,101,6],[89,21,101,19],[90,0,102,8,"invariant"],[90,20,103,10,"global"],[90,27,103,17,"nativeCallSyncHook"],[90,45,102,8],[90,47,104,10],[90,90,105,12],[90,163,104,10],[90,166,106,12],[90,240,104,10],[90,243,107,12],[90,259,102,8],[91,0,109,7],[93,0,100,39],[93,43,100,21,"args"],[93,47,100,39],[94,0,100,21,"args"],[94,14,100,39],[95,0,100,39],[97,0,110,6],[97,15,110,13,"global"],[97,22,110,20,"nativeCallSyncHook"],[97,40,110,13],[97,41,110,39,"moduleID"],[97,49,110,13],[97,51,110,49,"methodID"],[97,59,110,13],[97,61,110,59,"args"],[97,65,110,13],[97,66,110,6],[98,0,111,5],[98,7,100,4],[99,0,112,3],[99,5,99,9],[99,11,112,9],[100,0,113,4,"fn"],[100,11,113,9],[100,25,113,39],[101,0,113,39],[101,43,113,21,"args"],[101,47,113,39],[102,0,113,21,"args"],[102,14,113,39],[103,0,113,39],[105,0,114,6],[105,12,114,12,"lastArg"],[105,22,114,22,"args"],[105,27,114,27,"length"],[105,33,114,22],[105,36,114,36],[105,37,114,22],[105,40,114,40,"args"],[105,45,114,45,"args"],[105,50,114,50,"length"],[105,56,114,45],[105,59,114,59],[105,60,114,40],[105,61,114,22],[105,64,114,64],[105,68,114,6],[106,0,115,6],[106,12,115,12,"secondLastArg"],[106,28,115,28,"args"],[106,33,115,33,"length"],[106,39,115,28],[106,42,115,42],[106,43,115,28],[106,46,115,46,"args"],[106,51,115,51,"args"],[106,56,115,56,"length"],[106,62,115,51],[106,65,115,65],[106,66,115,46],[106,67,115,28],[106,70,115,70],[106,74,115,6],[107,0,116,6],[107,12,116,12,"hasSuccessCallback"],[107,33,116,33],[107,40,116,40,"lastArg"],[107,47,116,33],[107,52,116,52],[107,62,116,6],[108,0,117,6],[108,12,117,12,"hasErrorCallback"],[108,31,117,31],[108,38,117,38,"secondLastArg"],[108,51,117,31],[108,56,117,56],[108,66,117,6],[109,0,118,6,"hasErrorCallback"],[109,28,119,8,"invariant"],[109,38,120,10,"hasSuccessCallback"],[109,56,119,8],[109,58,121,10],[109,112,119,8],[109,113,118,6],[110,0,123,6],[110,12,123,12,"onSuccess"],[110,24,123,24,"hasSuccessCallback"],[110,45,123,45,"lastArg"],[110,52,123,24],[110,55,123,55],[110,59,123,6],[111,0,124,6],[111,12,124,12,"onFail"],[111,21,124,21,"hasErrorCallback"],[111,40,124,40,"secondLastArg"],[111,53,124,21],[111,56,124,56],[111,60,124,6],[112,0,125,6],[112,12,125,12,"callbackCount"],[112,28,125,28,"hasSuccessCallback"],[112,49,125,49,"hasErrorCallback"],[112,65,125,6],[113,0,126,6,"args"],[113,15,126,13,"args"],[113,20,126,18,"slice"],[113,25,126,13],[113,26,126,24],[113,27,126,13],[113,29,126,27,"args"],[113,34,126,32,"length"],[113,40,126,27],[113,43,126,41,"callbackCount"],[113,56,126,13],[113,57,126,6],[114,0,127,6,"BatchedBridge"],[114,22,127,20,"enqueueNativeCall"],[114,39,127,6],[114,40,128,8,"moduleID"],[114,48,127,6],[114,50,129,8,"methodID"],[114,58,127,6],[114,60,130,8,"args"],[114,64,127,6],[114,66,131,8,"onFail"],[114,72,127,6],[114,74,132,8,"onSuccess"],[114,83,127,6],[115,0,134,5],[115,7,113,4],[116,0,135,3],[118,0,136,2,"fn"],[118,7,136,5,"type"],[118,11,136,2],[118,14,136,12,"type"],[118,18,136,2],[119,0,137,2],[119,11,137,9,"fn"],[119,13,137,2],[120,0,138,1],[122,0,140,0],[122,11,140,9,"arrayContains"],[122,24,140,0],[122,25,140,26,"array"],[122,30,140,0],[122,32,140,43,"value"],[122,37,140,0],[122,39,140,62],[123,0,141,2],[123,11,141,9,"array"],[123,17,141,15,"indexOf"],[123,24,141,9],[123,25,141,23,"value"],[123,30,141,9],[123,36,141,34],[123,37,141,35],[123,38,141,2],[124,0,142,1],[126,0,144,0],[126,11,144,9,"createErrorFromErrorData"],[126,35,144,0],[126,36,144,34,"errorData"],[126,45,144,0],[126,47,144,79],[127,0,144,79],[127,15,145,39,"errorData"],[127,28,145,52],[127,30,144,79],[128,0,144,79],[128,8,145,9,"message"],[128,15,144,79],[128,23,145,9,"message"],[128,30,144,79],[129,0,144,79],[129,8,145,21,"extraErrorInfo"],[129,22,144,79],[131,0,146,2],[131,8,146,8,"error"],[131,16,146,31],[131,20,146,35,"Error"],[131,25,146,31],[131,26,146,41,"message"],[131,33,146,31],[131,34,146,2],[132,0,147,2,"error"],[132,10,147,8,"framesToPop"],[132,21,147,2],[132,24,147,22],[132,25,147,2],[133,0,148,2],[133,11,148,9],[133,20,148,23,"error"],[133,25,148,9],[133,27,148,30,"extraErrorInfo"],[133,41,148,9],[133,42,148,2],[134,0,149,1],[136,0,151,0],[136,6,151,4,"NativeModules"],[136,22,151,52],[136,24,151,0],[138,0,152,0],[138,6,152,4,"global"],[138,13,152,11,"nativeModuleProxy"],[138,30,152,0],[138,32,152,30],[139,0,153,2,"NativeModules"],[139,20,153,18,"global"],[139,27,153,25,"nativeModuleProxy"],[139,44,153,2],[140,0,154,1],[140,3,152,0],[140,9,154,7],[140,13,154,11],[140,14,154,12,"global"],[140,21,154,19,"nativeExtensions"],[140,37,154,7],[140,39,154,37],[141,0,155,2],[141,8,155,8,"bridgeConfig"],[141,23,155,23,"global"],[141,30,155,30,"__fbBatchedBridgeConfig"],[141,53,155,2],[142,0,156,2,"invariant"],[142,14,157,4,"bridgeConfig"],[142,26,156,2],[142,28,158,4],[142,94,156,2],[144,0,161,2],[144,8,161,8,"defineLazyObjectProperty"],[144,35,161,35,"require"],[144,66,161,43],[144,92,161,35],[144,93,161,2],[146,0,162,2],[146,5,162,3,"bridgeConfig"],[146,18,162,16,"remoteModuleConfig"],[146,36,162,3],[146,40,162,38],[146,42,162,2],[146,44,162,42,"forEach"],[146,51,162,2],[146,52,163,4],[146,62,163,5,"config"],[146,68,163,4],[146,70,163,27,"moduleID"],[146,78,163,4],[146,80,163,48],[147,0,166,6],[147,10,166,12,"info"],[147,17,166,19,"genModule"],[147,27,166,29,"config"],[147,33,166,19],[147,35,166,37,"moduleID"],[147,43,166,19],[147,44,166,6],[149,0,167,6],[149,10,167,10],[149,11,167,11,"info"],[149,15,167,6],[149,17,167,17],[150,0,168,8],[151,0,169,7],[153,0,171,6],[153,10,171,10,"info"],[153,15,171,15,"module"],[153,21,171,6],[153,23,171,23],[154,0,172,8,"NativeModules"],[154,22,172,22,"info"],[154,27,172,27,"name"],[154,31,172,8],[154,35,172,35,"info"],[154,40,172,40,"module"],[154,46,172,8],[155,0,173,7],[155,7,171,6],[155,13,175,11],[156,0,176,8,"defineLazyObjectProperty"],[156,35,176,33,"NativeModules"],[156,48,176,8],[156,50,176,48,"info"],[156,55,176,53,"name"],[156,59,176,8],[156,61,176,59],[157,0,177,10,"get"],[157,17,177,15],[158,0,177,15],[158,21,177,21,"loadModule"],[158,32,177,32,"info"],[158,37,177,37,"name"],[158,41,177,21],[158,43,177,43,"moduleID"],[158,51,177,21],[158,52,177,15],[159,0,177,15],[160,0,176,59],[160,11,176,8],[161,0,179,7],[162,0,180,5],[162,5,162,2],[163,0,182,1],[165,0,184,0,"module"],[165,9,184,7,"exports"],[165,16,184,0],[165,19,184,17,"NativeModules"],[165,32,184,0]]},"type":"js/module"}]}