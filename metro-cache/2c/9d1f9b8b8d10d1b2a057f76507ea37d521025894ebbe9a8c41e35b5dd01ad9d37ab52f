{"dependencies":[{"name":"./AnimatedValue","isAsync":false},{"name":"./AnimatedNode","isAsync":false},{"name":"../NativeAnimatedHelper","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } _setPrototypeOf(subClass.prototype, superClass && superClass.prototype); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\n  function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.getPrototypeOf || function _getPrototypeOf(o) { return o.__proto__; }; return _getPrototypeOf(o); }\n\n  var AnimatedValue = _$$_REQUIRE(_dependencyMap[0], './AnimatedValue');\n\n  var AnimatedNode = _$$_REQUIRE(_dependencyMap[1], './AnimatedNode');\n\n  var _require = _$$_REQUIRE(_dependencyMap[2], '../NativeAnimatedHelper'),\n      generateNewAnimationId = _require.generateNewAnimationId,\n      shouldUseNativeDriver = _require.shouldUseNativeDriver;\n\n  var AnimatedTracking = function (_AnimatedNode) {\n    function AnimatedTracking(value, parent, animationClass, animationConfig, callback) {\n      var _this;\n\n      _classCallCheck(this, AnimatedTracking);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(AnimatedTracking).call(this));\n      _this._value = value;\n      _this._parent = parent;\n      _this._animationClass = animationClass;\n      _this._animationConfig = animationConfig;\n      _this._useNativeDriver = shouldUseNativeDriver(animationConfig);\n      _this._callback = callback;\n\n      _this.__attach();\n\n      return _this;\n    }\n\n    _createClass(AnimatedTracking, [{\n      key: \"__makeNative\",\n      value: function __makeNative() {\n        this.__isNative = true;\n\n        this._parent.__makeNative();\n\n        _get(_getPrototypeOf(AnimatedTracking.prototype), \"__makeNative\", this).call(this);\n\n        this._value.__makeNative();\n      }\n    }, {\n      key: \"__getValue\",\n      value: function __getValue() {\n        return this._parent.__getValue();\n      }\n    }, {\n      key: \"__attach\",\n      value: function __attach() {\n        this._parent.__addChild(this);\n\n        if (this._useNativeDriver) {\n          this.__makeNative();\n        }\n      }\n    }, {\n      key: \"__detach\",\n      value: function __detach() {\n        this._parent.__removeChild(this);\n\n        _get(_getPrototypeOf(AnimatedTracking.prototype), \"__detach\", this).call(this);\n      }\n    }, {\n      key: \"update\",\n      value: function update() {\n        this._value.animate(new this._animationClass(_objectSpread({}, this._animationConfig, {\n          toValue: this._animationConfig.toValue.__getValue()\n        })), this._callback);\n      }\n    }, {\n      key: \"__getNativeConfig\",\n      value: function __getNativeConfig() {\n        var animation = new this._animationClass(_objectSpread({}, this._animationConfig, {\n          toValue: undefined\n        }));\n\n        var animationConfig = animation.__getNativeAnimationConfig();\n\n        return {\n          type: 'tracking',\n          animationId: generateNewAnimationId(),\n          animationConfig: animationConfig,\n          toValue: this._parent.__getNativeTag(),\n          value: this._value.__getNativeTag()\n        };\n      }\n    }]);\n\n    _inherits(AnimatedTracking, _AnimatedNode);\n\n    return AnimatedTracking;\n  }(AnimatedNode);\n\n  module.exports = AnimatedTracking;\n});","map":[[2,0,10,0],[28,0,12,0],[28,6,12,6,"AnimatedValue"],[28,22,12,22,"require"],[28,53,12,30],[28,70,12,22],[28,71,12,0],[30,0,13,0],[30,6,13,6,"AnimatedNode"],[30,21,13,21,"require"],[30,52,13,29],[30,68,13,21],[30,69,13,0],[32,17,17,4,"require"],[32,48,17,12],[32,73,17,4],[32,74],[33,6,15,2,"generateNewAnimationId"],[33,28],[33,40,15,2,"generateNewAnimationId"],[33,62],[34,6,16,2,"shouldUseNativeDriver"],[34,27],[34,39,16,2,"shouldUseNativeDriver"],[34,60],[36,6,21,6,"AnimatedTracking"],[36,22],[37,0,29,2],[37,30,30,4,"value"],[37,35,29,2],[37,37,31,4,"parent"],[37,43,29,2],[37,45,32,4,"animationClass"],[37,59,29,2],[37,61,33,4,"animationConfig"],[37,76,29,2],[37,78,34,4,"callback"],[37,86,29,2],[37,88,35,4],[38,0,35,4],[40,0,35,4],[42,0,36,4],[43,0,37,4],[43,12,37,9,"_value"],[43,18,37,4],[43,21,37,18,"value"],[43,26,37,4],[44,0,38,4],[44,12,38,9,"_parent"],[44,19,38,4],[44,22,38,19,"parent"],[44,28,38,4],[45,0,39,4],[45,12,39,9,"_animationClass"],[45,27,39,4],[45,30,39,27,"animationClass"],[45,44,39,4],[46,0,40,4],[46,12,40,9,"_animationConfig"],[46,28,40,4],[46,31,40,28,"animationConfig"],[46,46,40,4],[47,0,41,4],[47,12,41,9,"_useNativeDriver"],[47,28,41,4],[47,31,41,28,"shouldUseNativeDriver"],[47,53,41,50,"animationConfig"],[47,68,41,28],[47,69,41,4],[48,0,42,4],[48,12,42,9,"_callback"],[48,21,42,4],[48,24,42,21,"callback"],[48,32,42,4],[50,0,43,4],[50,12,43,9,"__attach"],[50,20,43,4],[52,0,35,4],[53,0,44,3],[57,37,46,17],[58,0,47,4],[58,13,47,9,"__isNative"],[58,23,47,4],[58,26,47,22],[58,30,47,4],[60,0,48,4],[60,13,48,9,"_parent"],[60,20,48,4],[60,21,48,17,"__makeNative"],[60,33,48,4],[62,0,49,4],[64,0,50,4],[64,13,50,9,"_value"],[64,19,50,4],[64,20,50,16,"__makeNative"],[64,32,50,4],[65,0,51,3],[68,35,53,23],[69,0,54,4],[69,15,54,11],[69,20,54,16,"_parent"],[69,27,54,11],[69,28,54,24,"__getValue"],[69,38,54,11],[69,40,54,4],[70,0,55,3],[73,33,57,19],[74,0,58,4],[74,13,58,9,"_parent"],[74,20,58,4],[74,21,58,17,"__addChild"],[74,31,58,4],[74,32,58,28],[74,36,58,4],[76,0,59,4],[76,12,59,8],[76,17,59,13,"_useNativeDriver"],[76,33,59,4],[76,35,59,31],[77,0,65,6],[77,15,65,11,"__makeNative"],[77,27,65,6],[78,0,66,5],[79,0,67,3],[82,33,69,19],[83,0,70,4],[83,13,70,9,"_parent"],[83,20,70,4],[83,21,70,17,"__removeChild"],[83,34,70,4],[83,35,70,31],[83,39,70,4],[85,0,71,4],[86,0,72,3],[89,31,74,17],[90,0,75,4],[90,13,75,9,"_value"],[90,19,75,4],[90,20,75,16,"animate"],[90,27,75,4],[90,28,76,6],[90,32,76,10],[90,37,76,15,"_animationClass"],[90,52,76,6],[90,71,77,11],[90,76,77,16,"_animationConfig"],[90,92,76,6],[91,0,78,8,"toValue"],[91,19,78,18],[91,24,78,23,"_animationConfig"],[91,40,78,18],[91,41,78,40,"toValue"],[91,48,78,17],[91,49,78,54,"__getValue"],[91,59,78,17],[92,0,76,6],[92,11,75,4],[92,13,80,6],[92,18,80,11,"_callback"],[92,27,75,4],[93,0,82,3],[96,42,84,27],[97,0,85,4],[97,12,85,10,"animation"],[97,24,85,22],[97,28,85,26],[97,33,85,31,"_animationClass"],[97,48,85,22],[97,67,86,9],[97,72,86,14,"_animationConfig"],[97,88,85,22],[98,0,88,6,"toValue"],[98,19,88,15,"undefined"],[99,0,85,22],[99,11,85,4],[101,0,90,4],[101,12,90,10,"animationConfig"],[101,30,90,28,"animation"],[101,40,90,38,"__getNativeAnimationConfig"],[101,66,90,28],[101,68,90,4],[103,0,91,4],[103,15,91,11],[104,0,92,6,"type"],[104,16,92,12],[104,26,91,11],[105,0,93,6,"animationId"],[105,23,93,19,"generateNewAnimationId"],[105,47,91,11],[106,0,94,6,"animationConfig"],[106,42,91,11],[107,0,95,6,"toValue"],[107,19,95,15],[107,24,95,20,"_parent"],[107,31,95,15],[107,32,95,28,"__getNativeTag"],[107,46,95,15],[107,48,91,11],[108,0,96,6,"value"],[108,17,96,13],[108,22,96,18,"_value"],[108,28,96,13],[108,29,96,25,"__getNativeTag"],[108,43,96,13],[109,0,91,11],[109,9,91,4],[110,0,98,3],[116,4,21,31,"AnimatedNode"],[116,16],[118,0,101,0,"module"],[118,9,101,7,"exports"],[118,16,101,0],[118,19,101,17,"AnimatedTracking"],[118,35,101,0]]},"type":"js/module"}]}