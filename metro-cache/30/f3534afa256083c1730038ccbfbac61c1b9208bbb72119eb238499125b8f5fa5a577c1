{"dependencies":[{"name":"BlobManager","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  var Blob = function () {\n    function Blob() {\n      var parts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var options = arguments.length > 1 ? arguments[1] : undefined;\n\n      _classCallCheck(this, Blob);\n\n      var BlobManager = _$$_REQUIRE(_dependencyMap[0], 'BlobManager');\n\n      this.data = BlobManager.createFromParts(parts, options).data;\n    }\n\n    _createClass(Blob, [{\n      key: \"slice\",\n      value: function slice(start, end) {\n        var BlobManager = _$$_REQUIRE(_dependencyMap[0], 'BlobManager');\n\n        var _this$data = this.data,\n            offset = _this$data.offset,\n            size = _this$data.size;\n\n        if (typeof start === 'number') {\n          if (start > size) {\n            start = size;\n          }\n\n          offset += start;\n          size -= start;\n\n          if (typeof end === 'number') {\n            if (end < 0) {\n              end = this.size + end;\n            }\n\n            size = end - start;\n          }\n        }\n\n        return BlobManager.createFromOptions({\n          blobId: this.data.blobId,\n          offset: offset,\n          size: size\n        });\n      }\n    }, {\n      key: \"close\",\n      value: function close() {\n        var BlobManager = _$$_REQUIRE(_dependencyMap[0], 'BlobManager');\n\n        BlobManager.release(this.data.blobId);\n        this.data = null;\n      }\n    }, {\n      key: \"data\",\n      set: function set(data) {\n        this._data = data;\n      },\n      get: function get() {\n        if (!this._data) {\n          throw new Error('Blob has been closed and is no longer available');\n        }\n\n        return this._data;\n      }\n    }, {\n      key: \"size\",\n      get: function get() {\n        return this.data.size;\n      }\n    }, {\n      key: \"type\",\n      get: function get() {\n        return this.data.type || '';\n      }\n    }]);\n\n    return Blob;\n  }();\n\n  module.exports = Blob;\n});","map":[[2,0,11,0],[10,6,52,6,"Blob"],[10,10],[11,0,60,2],[11,20,60,71],[12,0,60,71],[12,10,60,14,"parts"],[12,15,60,71],[12,86,60,44],[12,88,60,71],[13,0,60,71],[13,10,60,48,"options"],[13,17,60,71],[15,0,60,71],[17,0,61,4],[17,10,61,10,"BlobManager"],[17,24,61,24,"require"],[17,55,61,32],[17,68,61,24],[17,69,61,4],[19,0,62,4],[19,11,62,9,"data"],[19,15,62,4],[19,18,62,16,"BlobManager"],[19,30,62,28,"createFromParts"],[19,45,62,16],[19,46,62,44,"parts"],[19,51,62,16],[19,53,62,51,"options"],[19,60,62,16],[19,62,62,60,"data"],[19,66,62,4],[20,0,63,3],[24,28,82,8,"start"],[24,33],[24,35,82,24,"end"],[24,38],[24,40,82,44],[25,0,83,4],[25,12,83,10,"BlobManager"],[25,26,83,24,"require"],[25,57,83,32],[25,70,83,24],[25,71,83,4],[27,0,82,44],[27,25,84,25],[27,30,84,30,"data"],[27,34,82,44],[28,0,82,44],[28,12,84,9,"offset"],[28,18,82,44],[28,32,84,9,"offset"],[28,38,82,44],[29,0,82,44],[29,12,84,17,"size"],[29,16,82,44],[29,30,84,17,"size"],[29,34,82,44],[31,0,86,4],[31,12,86,8],[31,19,86,15,"start"],[31,24,86,8],[31,29,86,25],[31,37,86,4],[31,39,86,35],[32,0,87,6],[32,14,87,10,"start"],[32,22,87,18,"size"],[32,26,87,6],[32,28,87,24],[33,0,88,8,"start"],[33,20,88,16,"size"],[33,24,88,8],[34,0,89,7],[36,0,90,6,"offset"],[36,20,90,16,"start"],[36,25,90,6],[37,0,91,6,"size"],[37,18,91,14,"start"],[37,23,91,6],[39,0,93,6],[39,14,93,10],[39,21,93,17,"end"],[39,24,93,10],[39,29,93,25],[39,37,93,6],[39,39,93,35],[40,0,94,8],[40,16,94,12,"end"],[40,22,94,18],[40,23,94,8],[40,25,94,21],[41,0,95,10,"end"],[41,20,95,16],[41,25,95,21,"size"],[41,29,95,16],[41,32,95,28,"end"],[41,35,95,10],[42,0,96,9],[44,0,97,8,"size"],[44,19,97,15,"end"],[44,25,97,21,"start"],[44,30,97,8],[45,0,98,7],[46,0,99,5],[48,0,100,4],[48,15,100,11,"BlobManager"],[48,27,100,23,"createFromOptions"],[48,44,100,11],[48,45,100,41],[49,0,101,6,"blobId"],[49,18,101,14],[49,23,101,19,"data"],[49,27,101,14],[49,28,101,24,"blobId"],[49,34,100,41],[50,0,102,6,"offset"],[50,24,100,41],[51,0,103,6,"size"],[52,0,100,41],[52,9,100,11],[52,10,100,4],[53,0,105,3],[56,30,119,10],[57,0,120,4],[57,12,120,10,"BlobManager"],[57,26,120,24,"require"],[57,57,120,32],[57,70,120,24],[57,71,120,4],[59,0,121,4,"BlobManager"],[59,20,121,16,"release"],[59,27,121,4],[59,28,121,24],[59,33,121,29,"data"],[59,37,121,24],[59,38,121,34,"blobId"],[59,44,121,4],[60,0,122,4],[60,13,122,9,"data"],[60,17,122,4],[60,20,122,16],[60,24,122,4],[61,0,123,3],[64,24,70,11,"data"],[64,28],[64,30,70,28],[65,0,71,4],[65,13,71,9,"_data"],[65,18,71,4],[65,21,71,17,"data"],[65,25,71,4],[66,0,72,3],[66,7],[67,26,74,23],[68,0,75,4],[68,12,75,8],[68,13,75,9],[68,18,75,14,"_data"],[68,23,75,4],[68,25,75,21],[69,0,76,6],[69,16,76,12],[69,20,76,16,"Error"],[69,25,76,12],[69,26,76,22],[69,75,76,12],[69,76,76,6],[70,0,77,5],[72,0,79,4],[72,15,79,11],[72,20,79,16,"_data"],[72,25,79,4],[73,0,80,3],[76,26,128,21],[77,0,129,4],[77,15,129,11],[77,20,129,16,"data"],[77,24,129,11],[77,25,129,21,"size"],[77,29,129,4],[78,0,130,3],[81,26,136,21],[82,0,137,4],[82,15,137,11],[82,20,137,16,"data"],[82,24,137,11],[82,25,137,21,"type"],[82,29,137,11],[82,33,137,29],[82,35,137,4],[83,0,138,3],[89,0,141,0,"module"],[89,9,141,7,"exports"],[89,16,141,0],[89,19,141,17,"Blob"],[89,23,141,0]]},"type":"js/module"}]}