{"dependencies":[{"name":"EmitterSubscription","isAsync":false},{"name":"EventSubscriptionVendor","isAsync":false},{"name":"fbjs/lib/emptyFunction","isAsync":false},{"name":"fbjs/lib/invariant","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  var EmitterSubscription = _$$_REQUIRE(_dependencyMap[0], 'EmitterSubscription');\n\n  var EventSubscriptionVendor = _$$_REQUIRE(_dependencyMap[1], 'EventSubscriptionVendor');\n\n  var emptyFunction = _$$_REQUIRE(_dependencyMap[2], 'fbjs/lib/emptyFunction');\n\n  var invariant = _$$_REQUIRE(_dependencyMap[3], 'fbjs/lib/invariant');\n\n  var EventEmitter = function () {\n    function EventEmitter(subscriber) {\n      _classCallCheck(this, EventEmitter);\n\n      this._subscriber = subscriber || new EventSubscriptionVendor();\n    }\n\n    _createClass(EventEmitter, [{\n      key: \"addListener\",\n      value: function addListener(eventType, listener, context) {\n        return this._subscriber.addSubscription(eventType, new EmitterSubscription(this, this._subscriber, listener, context));\n      }\n    }, {\n      key: \"once\",\n      value: function once(eventType, listener, context) {\n        var _this = this;\n\n        return this.addListener(eventType, function () {\n          _this.removeCurrentListener();\n\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          listener.apply(context, args);\n        });\n      }\n    }, {\n      key: \"removeAllListeners\",\n      value: function removeAllListeners(eventType) {\n        this._subscriber.removeAllSubscriptions(eventType);\n      }\n    }, {\n      key: \"removeCurrentListener\",\n      value: function removeCurrentListener() {\n        invariant(!!this._currentSubscription, 'Not in an emitting cycle; there is no current subscription');\n        this.removeSubscription(this._currentSubscription);\n      }\n    }, {\n      key: \"removeSubscription\",\n      value: function removeSubscription(subscription) {\n        invariant(subscription.emitter === this, 'Subscription does not belong to this emitter.');\n\n        this._subscriber.removeSubscription(subscription);\n      }\n    }, {\n      key: \"listeners\",\n      value: function listeners(eventType) {\n        var subscriptions = this._subscriber.getSubscriptionsForType(eventType);\n\n        return subscriptions ? subscriptions.filter(emptyFunction.thatReturnsTrue).map(function (subscription) {\n          return subscription.listener;\n        }) : [];\n      }\n    }, {\n      key: \"emit\",\n      value: function emit(eventType) {\n        var subscriptions = this._subscriber.getSubscriptionsForType(eventType);\n\n        if (subscriptions) {\n          for (var i = 0, l = subscriptions.length; i < l; i++) {\n            var subscription = subscriptions[i];\n\n            if (subscription) {\n              this._currentSubscription = subscription;\n              subscription.listener.apply(subscription.context, Array.prototype.slice.call(arguments, 1));\n            }\n          }\n\n          this._currentSubscription = null;\n        }\n      }\n    }, {\n      key: \"removeListener\",\n      value: function removeListener(eventType, listener) {\n        var subscriptions = this._subscriber.getSubscriptionsForType(eventType);\n\n        if (subscriptions) {\n          for (var i = 0, l = subscriptions.length; i < l; i++) {\n            var subscription = subscriptions[i];\n\n            if (subscription && subscription.listener === listener) {\n              subscription.remove();\n            }\n          }\n        }\n      }\n    }]);\n\n    return EventEmitter;\n  }();\n\n  module.exports = EventEmitter;\n});","map":[[2,0,12,0],[10,0,14,0],[10,6,14,6,"EmitterSubscription"],[10,28,14,28,"require"],[10,59,14,36],[10,80,14,28],[10,81,14,0],[12,0,15,0],[12,6,15,6,"EventSubscriptionVendor"],[12,32,15,32,"require"],[12,63,15,40],[12,88,15,32],[12,89,15,0],[14,0,17,0],[14,6,17,6,"emptyFunction"],[14,22,17,22,"require"],[14,53,17,30],[14,77,17,22],[14,78,17,0],[16,0,18,0],[16,6,18,6,"invariant"],[16,18,18,18,"require"],[16,49,18,26],[16,69,18,18],[16,70,18,0],[18,6,33,6,"EventEmitter"],[18,18],[19,0,43,2],[19,26,43,14,"subscriber"],[19,36,43,2],[19,38,43,52],[20,0,43,52],[22,0,44,4],[22,11,44,9,"_subscriber"],[22,22,44,4],[22,25,44,23,"subscriber"],[22,39,44,37],[22,43,44,41,"EventSubscriptionVendor"],[22,66,44,37],[22,68,44,4],[23,0,45,3],[27,34,62,4,"eventType"],[27,43],[27,45,63,4,"listener"],[27,53],[27,55,64,4,"context"],[27,62],[27,64,65,25],[28,0,66,4],[28,15,66,12],[28,20,66,17,"_subscriber"],[28,31,66,12],[28,32,66,29,"addSubscription"],[28,47,66,12],[28,48,67,6,"eventType"],[28,57,66,12],[28,59,68,6],[28,63,68,10,"EmitterSubscription"],[28,82,68,6],[28,83,68,30],[28,87,68,6],[28,89,68,36],[28,94,68,41,"_subscriber"],[28,105,68,6],[28,107,68,54,"listener"],[28,115,68,6],[28,117,68,64,"context"],[28,124,68,6],[28,125,66,12],[28,126,66,4],[29,0,70,3],[32,27,83,4,"eventType"],[32,36],[32,38,84,4,"listener"],[32,46],[32,48,85,4,"context"],[32,55],[32,57,86,25],[33,0,86,25],[35,0,87,4],[35,15,87,11],[35,20,87,16,"addListener"],[35,31,87,11],[35,32,87,28,"eventType"],[35,41,87,11],[35,43,87,39],[35,55,87,52],[36,0,88,6],[36,16,88,11,"removeCurrentListener"],[36,37,88,6],[38,0,87,52],[38,44,87,43,"args"],[38,48,87,52],[39,0,87,43,"args"],[39,16,87,52],[40,0,87,52],[42,0,89,6,"listener"],[42,19,89,15,"apply"],[42,24,89,6],[42,25,89,21,"context"],[42,32,89,6],[42,34,89,30,"args"],[42,38,89,6],[43,0,90,5],[43,9,87,11],[43,10,87,4],[44,0,91,3],[47,41,100,21,"eventType"],[47,50],[47,52,100,41],[48,0,101,4],[48,13,101,9,"_subscriber"],[48,24,101,4],[48,25,101,21,"removeAllSubscriptions"],[48,47,101,4],[48,48,101,44,"eventType"],[48,57,101,4],[49,0,102,3],[52,46,125,26],[53,0,126,4,"invariant"],[53,18,127,6],[53,19,127,7],[53,20,127,8],[53,25,127,13,"_currentSubscription"],[53,45,126,4],[53,47,128,6],[53,107,126,4],[54,0,130,4],[54,13,130,9,"removeSubscription"],[54,31,130,4],[54,32,130,28],[54,37,130,33,"_currentSubscription"],[54,57,130,4],[55,0,131,3],[58,41,137,21,"subscription"],[58,53],[58,55,137,56],[59,0,138,4,"invariant"],[59,18,139,6,"subscription"],[59,31,139,19,"emitter"],[59,38,139,6],[59,43,139,31],[59,47,138,4],[59,49,140,6],[59,96,138,4],[61,0,142,4],[61,13,142,9,"_subscriber"],[61,24,142,4],[61,25,142,21,"removeSubscription"],[61,43,142,4],[61,44,142,40,"subscription"],[61,56,142,4],[62,0,143,3],[65,32,152,12,"eventType"],[65,41],[65,43,152,54],[66,0,153,4],[66,12,153,10,"subscriptions"],[66,28,155,9],[66,33,155,14,"_subscriber"],[66,44,155,9],[66,45,155,26,"getSubscriptionsForType"],[66,68,155,9],[66,69,155,50,"eventType"],[66,78,155,9],[66,79,153,4],[68,0,156,4],[68,15,156,11,"subscriptions"],[68,31,157,8,"subscriptions"],[68,45,158,11,"filter"],[68,51,157,8],[68,52,158,18,"emptyFunction"],[68,66,158,32,"thatReturnsTrue"],[68,81,157,8],[68,83,159,11,"map"],[68,86,157,8],[68,87,159,15],[68,97,159,24,"subscription"],[68,109,159,15],[68,111,159,38],[69,0,160,12],[69,17,160,19,"subscription"],[69,30,160,32,"listener"],[69,38,160,12],[70,0,161,11],[70,9,157,8],[70,10,156,11],[70,13,162,8],[70,15,156,4],[71,0,163,3],[74,27,179,7,"eventType"],[74,36],[74,38,179,26],[75,0,180,4],[75,12,180,10,"subscriptions"],[75,28,182,9],[75,33,182,14,"_subscriber"],[75,44,182,9],[75,45,182,26,"getSubscriptionsForType"],[75,68,182,9],[75,69,182,50,"eventType"],[75,78,182,9],[75,79,180,4],[77,0,183,4],[77,12,183,8,"subscriptions"],[77,25,183,4],[77,27,183,23],[78,0,184,6],[78,15,184,11],[78,19,184,15,"i"],[78,23,184,19],[78,24,184,11],[78,26,184,22,"l"],[78,30,184,26,"subscriptions"],[78,44,184,40,"length"],[78,50,184,6],[78,52,184,48,"i"],[78,56,184,52,"l"],[78,57,184,6],[78,59,184,55,"i"],[78,62,184,6],[78,64,184,60],[79,0,185,8],[79,16,185,14,"subscription"],[79,31,185,29,"subscriptions"],[79,45,185,43,"i"],[79,46,185,29],[79,47,185,8],[81,0,188,8],[81,16,188,12,"subscription"],[81,28,188,8],[81,30,188,26],[82,0,189,10],[82,19,189,15,"_currentSubscription"],[82,39,189,10],[82,42,189,38,"subscription"],[82,54,189,10],[83,0,190,10,"subscription"],[83,27,190,23,"listener"],[83,35,190,10],[83,36,190,32,"apply"],[83,41,190,10],[83,42,191,12,"subscription"],[83,55,191,25,"context"],[83,62,190,10],[83,64,192,12,"Array"],[83,70,192,18,"prototype"],[83,79,192,12],[83,80,192,28,"slice"],[83,85,192,12],[83,86,192,34,"call"],[83,90,192,12],[83,91,192,39,"arguments"],[83,100,192,12],[83,102,192,50],[83,103,192,12],[83,104,190,10],[84,0,194,9],[85,0,195,7],[87,0,196,6],[87,15,196,11,"_currentSubscription"],[87,35,196,6],[87,38,196,34],[87,42,196,6],[88,0,197,5],[89,0,198,3],[92,37,213,17,"eventType"],[92,46],[92,48,213,36,"listener"],[92,56],[92,58,213,46],[93,0,214,4],[93,12,214,10,"subscriptions"],[93,28,216,9],[93,33,216,14,"_subscriber"],[93,44,216,9],[93,45,216,26,"getSubscriptionsForType"],[93,68,216,9],[93,69,216,50,"eventType"],[93,78,216,9],[93,79,214,4],[95,0,217,4],[95,12,217,8,"subscriptions"],[95,25,217,4],[95,27,217,23],[96,0,218,6],[96,15,218,11],[96,19,218,15,"i"],[96,23,218,19],[96,24,218,11],[96,26,218,22,"l"],[96,30,218,26,"subscriptions"],[96,44,218,40,"length"],[96,50,218,6],[96,52,218,48,"i"],[96,56,218,52,"l"],[96,57,218,6],[96,59,218,55,"i"],[96,62,218,6],[96,64,218,60],[97,0,219,8],[97,16,219,14,"subscription"],[97,31,219,29,"subscriptions"],[97,45,219,43,"i"],[97,46,219,29],[97,47,219,8],[99,0,223,8],[99,16,223,12,"subscription"],[99,32,223,28,"subscription"],[99,45,223,41,"listener"],[99,53,223,28],[99,58,223,54,"listener"],[99,66,223,8],[99,68,223,64],[100,0,224,10,"subscription"],[100,27,224,23,"remove"],[100,33,224,10],[101,0,225,9],[102,0,226,7],[103,0,227,5],[104,0,228,3],[110,0,231,0,"module"],[110,9,231,7,"exports"],[110,16,231,0],[110,19,231,17,"EventEmitter"],[110,31,231,0]]},"type":"js/module"}]}