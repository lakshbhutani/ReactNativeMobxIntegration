{"dependencies":[{"name":"getDevServer","isAsync":false},{"name":"NativeModules","isAsync":false},{"name":"fetch","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  var getDevServer = _$$_REQUIRE(_dependencyMap[0], 'getDevServer');\n\n  var _require = _$$_REQUIRE(_dependencyMap[1], 'NativeModules'),\n      SourceCode = _require.SourceCode;\n\n  var fetch;\n\n  function isSourcedFromDisk(sourcePath) {\n    return !/^http/.test(sourcePath) && /[\\\\/]/.test(sourcePath);\n  }\n\n  function symbolicateStackTrace(stack) {\n    var devServer, stackCopy, foundInternalSource, response, json;\n    return regeneratorRuntime.async(function symbolicateStackTrace$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!fetch) {\n              fetch = global.fetch || _$$_REQUIRE(_dependencyMap[2], 'fetch').fetch;\n            }\n\n            devServer = getDevServer();\n\n            if (devServer.bundleLoadedFromServer) {\n              _context.next = 4;\n              break;\n            }\n\n            throw new Error('Bundle was not loaded from the packager');\n\n          case 4:\n            stackCopy = stack;\n\n            if (SourceCode.scriptURL) {\n              foundInternalSource = false;\n              stackCopy = stack.map(function (frame) {\n                if (!foundInternalSource && isSourcedFromDisk(frame.file)) {\n                  return _objectSpread({}, frame, {\n                    file: SourceCode.scriptURL\n                  });\n                }\n\n                foundInternalSource = true;\n                return frame;\n              });\n            }\n\n            _context.next = 8;\n            return regeneratorRuntime.awrap(fetch(devServer.url + 'symbolicate', {\n              method: 'POST',\n              body: JSON.stringify({\n                stack: stackCopy\n              })\n            }));\n\n          case 8:\n            response = _context.sent;\n            _context.next = 11;\n            return regeneratorRuntime.awrap(response.json());\n\n          case 11:\n            json = _context.sent;\n            return _context.abrupt(\"return\", json.stack);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, this);\n  }\n\n  module.exports = symbolicateStackTrace;\n});","map":[[2,0,11,0],[8,0,13,0],[8,6,13,6,"getDevServer"],[8,21,13,21,"require"],[8,52,13,29],[8,66,13,21],[8,67,13,0],[10,17,15,21,"require"],[10,48,15,29],[10,63,15,21],[10,64],[11,6,15,7,"SourceCode"],[11,16],[11,28,15,7,"SourceCode"],[11,38],[13,0,18,0],[13,6,18,4,"fetch"],[13,11,18,0],[15,0,22,0],[15,11,22,9,"isSourcedFromDisk"],[15,28,22,0],[15,29,22,27,"sourcePath"],[15,39,22,0],[15,41,22,56],[16,0,23,2],[16,11,23,9],[16,12,23,10],[16,20,23,18,"test"],[16,24,23,10],[16,25,23,23,"sourcePath"],[16,35,23,10],[16,36,23,9],[16,40,23,38],[16,48,23,46,"test"],[16,52,23,38],[16,53,23,51,"sourcePath"],[16,63,23,38],[16,64,23,2],[17,0,24,1],[19,0,26,0],[19,11,26,15,"symbolicateStackTrace"],[19,32,26,0],[19,33,27,2,"stack"],[19,38,26,0],[20,0,26,0],[21,0,26,0],[22,0,26,0],[23,0,26,0],[24,0,26,0],[25,0,40,2],[25,16,40,6],[25,17,40,7,"fetch"],[25,22,40,2],[25,24,40,14],[26,0,41,4,"fetch"],[26,22,41,12,"global"],[26,29,41,19,"fetch"],[26,34,41,12],[26,38,41,28,"require"],[26,69,41,36],[26,76,41,28],[26,78,41,45,"fetch"],[26,83,41,4],[27,0,42,3],[29,0,44,8,"devServer"],[29,21,26,0],[29,24,44,20,"getDevServer"],[29,38,26,0],[31,0,26,0],[31,16,45,7,"devServer"],[31,26,45,17,"bundleLoadedFromServer"],[31,48,26,0],[32,0,26,0],[33,0,26,0],[34,0,26,0],[36,0,26,0],[36,18,46,10],[36,22,46,14,"Error"],[36,27,46,10],[36,28,46,20],[36,69,46,10],[36,70,26,0],[38,0,26,0],[39,0,49,6,"stackCopy"],[39,21,26,0],[39,24,49,18,"stack"],[39,29,26,0],[41,0,51,2],[41,16,51,6,"SourceCode"],[41,27,51,17,"scriptURL"],[41,36,51,2],[41,38,51,28],[42,0,52,8,"foundInternalSource"],[42,33,51,28],[42,36,52,39],[42,41,51,28],[43,0,53,4,"stackCopy"],[43,26,53,16,"stack"],[43,32,53,22,"map"],[43,35,53,16],[43,36,53,26],[43,46,53,27,"frame"],[43,51,53,26],[43,53,53,49],[44,0,58,6],[44,20,58,10],[44,21,58,11,"foundInternalSource"],[44,40,58,10],[44,44,58,34,"isSourcedFromDisk"],[44,62,58,52,"frame"],[44,68,58,58,"file"],[44,72,58,34],[44,73,58,6],[44,75,58,65],[45,0,60,8],[45,43,60,19,"frame"],[45,48,60,8],[46,0,60,26,"file"],[46,26,60,32,"SourceCode"],[46,37,60,43,"scriptURL"],[47,0,60,8],[48,0,61,7],[50,0,63,6,"foundInternalSource"],[50,38,63,28],[50,42,63,6],[51,0,64,6],[51,23,64,13,"frame"],[51,28,64,6],[52,0,65,5],[52,15,53,16],[52,16,53,4],[53,0,66,3],[55,0,26,0],[56,0,26,0],[56,44,68,25,"fetch"],[56,50,68,31,"devServer"],[56,60,68,41,"url"],[56,63,68,31],[56,66,68,47],[56,79,68,25],[56,81,68,62],[57,0,69,4,"method"],[57,22,69,12],[57,28,68,62],[58,0,70,4,"body"],[58,20,70,10,"JSON"],[58,25,70,15,"stringify"],[58,34,70,10],[58,35,70,25],[59,0,70,26,"stack"],[59,23,70,33,"stackCopy"],[60,0,70,25],[60,15,70,10],[61,0,68,62],[61,13,68,25],[61,14,26,0],[63,0,26,0],[64,0,68,8,"response"],[64,20,26,0],[65,0,26,0],[66,0,26,0],[66,44,72,21,"response"],[66,53,72,30,"json"],[66,57,72,21],[66,59,26,0],[68,0,26,0],[69,0,72,8,"json"],[69,16,26,0],[70,0,26,0],[70,45,73,9,"json"],[70,50,73,14,"stack"],[70,55,26,0],[72,0,26,0],[73,0,26,0],[74,0,26,0],[75,0,26,0],[76,0,26,0],[77,0,26,0],[78,0,26,0],[80,0,76,0,"module"],[80,9,76,7,"exports"],[80,16,76,0],[80,19,76,17,"symbolicateStackTrace"],[80,40,76,0]]},"type":"js/module"}]}