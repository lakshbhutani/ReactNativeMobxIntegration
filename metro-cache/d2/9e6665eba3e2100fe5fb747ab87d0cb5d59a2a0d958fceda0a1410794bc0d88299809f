{"dependencies":[{"name":"react","isAsync":false},{"name":"react-native","isAsync":false},{"name":"react-navigation","isAsync":false},{"name":"../routers/DrawerRouter","isAsync":false},{"name":"../views/DrawerView","isAsync":false},{"name":"../views/DrawerNavigatorItems","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[0], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[1], \"react-native\");\n\n  var _reactNavigation = _$$_REQUIRE(_dependencyMap[2], \"react-navigation\");\n\n  var _DrawerRouter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"../routers/DrawerRouter\"));\n\n  var _DrawerView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../views/DrawerView\"));\n\n  var _DrawerNavigatorItems = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"../views/DrawerNavigatorItems\"));\n\n  var _jsxFileName = \"/home/laksh/reactNativeNavigation/navigationTask/node_modules/react-navigation-drawer/dist/navigators/createDrawerNavigator.js\";\n\n  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n  function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n  var defaultContentComponent = function defaultContentComponent(props) {\n    return _react.default.createElement(_reactNative.ScrollView, {\n      alwaysBounceVertical: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      }\n    }, _react.default.createElement(_reactNavigation.SafeAreaView, {\n      forceInset: {\n        top: 'always',\n        horizontal: 'never'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      }\n    }, _react.default.createElement(_DrawerNavigatorItems.default, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      }\n    }))));\n  };\n\n  var DefaultDrawerConfig = {\n    drawerWidth: function drawerWidth() {\n      var _Dimensions$get = _reactNative.Dimensions.get('window'),\n          height = _Dimensions$get.height,\n          width = _Dimensions$get.width;\n\n      var smallerAxisSize = Math.min(height, width);\n      var isLandscape = width > height;\n      var isTablet = smallerAxisSize >= 600;\n      var appBarHeight = _reactNative.Platform.OS === 'ios' ? isLandscape ? 32 : 44 : 56;\n      var maxWidth = isTablet ? 320 : 280;\n      return Math.min(smallerAxisSize - appBarHeight, maxWidth);\n    },\n    contentComponent: defaultContentComponent,\n    drawerPosition: 'left',\n    drawerBackgroundColor: 'white',\n    useNativeAnimations: true\n  };\n\n  var DrawerNavigator = function DrawerNavigator(routeConfigs) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var mergedConfig = _objectSpread({}, DefaultDrawerConfig, config);\n\n    var order = mergedConfig.order,\n        paths = mergedConfig.paths,\n        initialRouteName = mergedConfig.initialRouteName,\n        initialRouteParams = mergedConfig.initialRouteParams,\n        backBehavior = mergedConfig.backBehavior,\n        getCustomActionCreators = mergedConfig.getCustomActionCreators,\n        drawerConfig = _objectWithoutProperties(mergedConfig, [\"order\", \"paths\", \"initialRouteName\", \"initialRouteParams\", \"backBehavior\", \"getCustomActionCreators\"]);\n\n    var routerConfig = {\n      order: order,\n      paths: paths,\n      initialRouteName: initialRouteName,\n      initialRouteParams: initialRouteParams,\n      backBehavior: backBehavior,\n      getCustomActionCreators: getCustomActionCreators\n    };\n    var drawerRouter = (0, _DrawerRouter.default)(routeConfigs, routerConfig);\n    var navigator = (0, _reactNavigation.createNavigator)(_DrawerView.default, drawerRouter, drawerConfig);\n    return (0, _reactNavigation.createNavigationContainer)(navigator);\n  };\n\n  var _default = DrawerNavigator;\n  exports.default = _default;\n});","map":[[7,0,1,0],[9,0,2,0],[11,0,3,0],[13,0,4,0],[15,0,5,0],[17,0,6,0],[31,0,12,0],[31,6,12,6,"defaultContentComponent"],[31,32,12,32],[31,41,12,6,"defaultContentComponent"],[31,64,12,32],[32,0,12,32],[32,11,12,41],[32,40,12,42],[32,63,12,41],[33,0,12,53],[33,28,12,75],[33,33,12,41],[34,0,12,41],[35,0,12,41],[36,0,12,41],[37,0,12,41],[38,0,12,41],[38,7,13,4],[38,36,13,5],[38,65,13,4],[39,0,13,18],[39,18,13,30],[40,0,13,32,"top"],[40,13,13,37],[40,21,13,30],[41,0,13,47,"horizontal"],[41,20,13,59],[42,0,13,30],[42,7,13,4],[43,0,13,4],[44,0,13,4],[45,0,13,4],[46,0,13,4],[47,0,13,4],[47,7,14,6],[47,36,14,7],[47,65,14,6],[47,80,14,23,"props"],[47,85,14,6],[48,0,14,6],[49,0,14,6],[50,0,14,6],[51,0,14,6],[52,0,14,6],[52,7,13,4],[52,8,12,41],[52,9,12,32],[53,0,12,32],[53,3,12,0],[55,0,18,0],[55,6,18,6,"DefaultDrawerConfig"],[55,28,18,28],[56,0,19,2,"drawerWidth"],[56,17,19,15],[56,40,19,21],[57,0,19,21],[57,28,25,30,"Dimensions"],[57,52,25,41,"get"],[57,55,25,30],[57,56,25,45],[57,64,25,30],[57,65,19,21],[58,0,19,21],[58,10,25,12,"height"],[58,16,19,21],[58,35,25,12,"height"],[58,41,19,21],[59,0,19,21],[59,10,25,20,"width"],[59,15,19,21],[59,34,25,20,"width"],[59,39,19,21],[61,0,26,4],[61,10,26,10,"smallerAxisSize"],[61,28,26,28,"Math"],[61,33,26,33,"min"],[61,36,26,28],[61,37,26,37,"height"],[61,43,26,28],[61,45,26,45,"width"],[61,50,26,28],[61,51,26,4],[62,0,27,4],[62,10,27,10,"isLandscape"],[62,24,27,24,"width"],[62,32,27,32,"height"],[62,38,27,4],[63,0,28,4],[63,10,28,10,"isTablet"],[63,21,28,21,"smallerAxisSize"],[63,40,28,40],[63,43,28,4],[64,0,29,4],[64,10,29,10,"appBarHeight"],[64,25,29,25,"Platform"],[64,47,29,34,"OS"],[64,49,29,25],[64,54,29,41],[64,59,29,25],[64,62,29,49,"isLandscape"],[64,76,29,63],[64,78,29,49],[64,81,29,68],[64,83,29,25],[64,86,29,73],[64,88,29,4],[65,0,30,4],[65,10,30,10,"maxWidth"],[65,21,30,21,"isTablet"],[65,32,30,32],[65,35,30,21],[65,38,30,38],[65,41,30,4],[66,0,32,4],[66,13,32,11,"Math"],[66,18,32,16,"min"],[66,21,32,11],[66,22,32,20,"smallerAxisSize"],[66,40,32,38,"appBarHeight"],[66,52,32,11],[66,54,32,52,"maxWidth"],[66,62,32,11],[66,63,32,4],[67,0,33,3],[67,5,18,28],[68,0,34,2,"contentComponent"],[68,22,34,20,"defaultContentComponent"],[68,45,18,28],[69,0,35,2,"drawerPosition"],[69,20,35,18],[69,26,18,28],[70,0,36,2,"drawerBackgroundColor"],[70,27,36,25],[70,34,18,28],[71,0,37,2,"useNativeAnimations"],[71,25,37,23],[72,0,18,28],[72,3,18,0],[74,0,40,0],[74,6,40,6,"DrawerNavigator"],[74,24,40,24],[74,33,40,6,"DrawerNavigator"],[74,48,40,24],[74,49,40,25,"routeConfigs"],[74,61,40,24],[74,63,40,55],[75,0,40,55],[75,8,40,39,"config"],[75,14,40,55],[75,85,40,48],[75,87,40,55],[77,0,41,2],[77,8,41,8,"mergedConfig"],[77,41,41,28,"DefaultDrawerConfig"],[77,60,41,8],[77,62,41,52,"config"],[77,68,41,8],[77,69,41,2],[79,0,40,55],[79,8,44,4,"order"],[79,13,40,55],[79,16,51,6,"mergedConfig"],[79,28,40,55],[79,29,44,4,"order"],[79,34,40,55],[80,0,40,55],[80,8,45,4,"paths"],[80,13,40,55],[80,16,51,6,"mergedConfig"],[80,28,40,55],[80,29,45,4,"paths"],[80,34,40,55],[81,0,40,55],[81,8,46,4,"initialRouteName"],[81,24,40,55],[81,27,51,6,"mergedConfig"],[81,39,40,55],[81,40,46,4,"initialRouteName"],[81,56,40,55],[82,0,40,55],[82,8,47,4,"initialRouteParams"],[82,26,40,55],[82,29,51,6,"mergedConfig"],[82,41,40,55],[82,42,47,4,"initialRouteParams"],[82,60,40,55],[83,0,40,55],[83,8,48,4,"backBehavior"],[83,20,40,55],[83,23,51,6,"mergedConfig"],[83,35,40,55],[83,36,48,4,"backBehavior"],[83,48,40,55],[84,0,40,55],[84,8,49,4,"getCustomActionCreators"],[84,31,40,55],[84,34,51,6,"mergedConfig"],[84,46,40,55],[84,47,49,4,"getCustomActionCreators"],[84,70,40,55],[85,0,40,55],[85,8,50,7,"drawerConfig"],[85,20,40,55],[85,48,51,6,"mergedConfig"],[85,60,40,55],[87,0,53,2],[87,8,53,8,"routerConfig"],[87,23,53,23],[88,0,54,4,"order"],[88,18,53,23],[89,0,55,4,"paths"],[89,18,53,23],[90,0,56,4,"initialRouteName"],[90,40,53,23],[91,0,57,4,"initialRouteParams"],[91,44,53,23],[92,0,58,4,"backBehavior"],[92,32,53,23],[93,0,59,4,"getCustomActionCreators"],[94,0,53,23],[94,5,53,2],[95,0,62,2],[95,8,62,8,"drawerRouter"],[95,23,62,23],[95,50,62,36,"routeConfigs"],[95,62,62,23],[95,64,62,50,"routerConfig"],[95,76,62,23],[95,77,62,2],[96,0,64,2],[96,8,64,8,"navigator"],[96,20,64,20],[96,58,64,36,"DrawerView"],[96,77,64,20],[96,79,64,48,"drawerRouter"],[96,91,64,20],[96,93,64,62,"drawerConfig"],[96,105,64,20],[96,106,64,2],[97,0,66,2],[97,11,66,9],[97,59,66,35,"navigator"],[97,68,66,9],[97,69,66,2],[98,0,67,1],[98,3,40,0],[100,17,69,15,"DrawerNavigator"],[100,32]]},"type":"js/module"}]}