{"dependencies":[{"name":"NativeModules","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  var RCTImageStoreManager = _$$_REQUIRE(_dependencyMap[0], 'NativeModules').ImageStoreManager;\n\n  var ImageStore = function () {\n    function ImageStore() {\n      _classCallCheck(this, ImageStore);\n    }\n\n    _createClass(ImageStore, null, [{\n      key: \"hasImageForTag\",\n      value: function hasImageForTag(uri, callback) {\n        if (RCTImageStoreManager.hasImageForTag) {\n          RCTImageStoreManager.hasImageForTag(uri, callback);\n        } else {\n          console.warn('hasImageForTag() not implemented');\n        }\n      }\n    }, {\n      key: \"removeImageForTag\",\n      value: function removeImageForTag(uri) {\n        if (RCTImageStoreManager.removeImageForTag) {\n          RCTImageStoreManager.removeImageForTag(uri);\n        } else {\n          console.warn('removeImageForTag() not implemented');\n        }\n      }\n    }, {\n      key: \"addImageFromBase64\",\n      value: function addImageFromBase64(base64ImageData, success, failure) {\n        RCTImageStoreManager.addImageFromBase64(base64ImageData, success, failure);\n      }\n    }, {\n      key: \"getBase64ForTag\",\n      value: function getBase64ForTag(uri, success, failure) {\n        RCTImageStoreManager.getBase64ForTag(uri, success, failure);\n      }\n    }]);\n\n    return ImageStore;\n  }();\n\n  module.exports = ImageStore;\n});","map":[[2,0,10,0],[10,0,12,0],[10,6,12,6,"RCTImageStoreManager"],[10,29,12,29,"require"],[10,60,12,37],[10,75,12,29],[10,77,12,54,"ImageStoreManager"],[10,94,12,0],[12,6,14,6,"ImageStore"],[12,16],[19,37,19,24,"uri"],[19,40],[19,42,19,37,"callback"],[19,50],[19,52,19,76],[20,0,20,4],[20,12,20,8,"RCTImageStoreManager"],[20,33,20,29,"hasImageForTag"],[20,47,20,4],[20,49,20,45],[21,0,21,6,"RCTImageStoreManager"],[21,31,21,27,"hasImageForTag"],[21,45,21,6],[21,46,21,42,"uri"],[21,49,21,6],[21,51,21,47,"callback"],[21,59,21,6],[22,0,22,5],[22,9,20,4],[22,15,22,11],[23,0,23,6,"console"],[23,18,23,14,"warn"],[23,22,23,6],[23,23,23,19],[23,57,23,6],[24,0,24,5],[25,0,25,3],[28,40,35,27,"uri"],[28,43],[28,45,35,40],[29,0,36,4],[29,12,36,8,"RCTImageStoreManager"],[29,33,36,29,"removeImageForTag"],[29,50,36,4],[29,52,36,48],[30,0,37,6,"RCTImageStoreManager"],[30,31,37,27,"removeImageForTag"],[30,48,37,6],[30,49,37,45,"uri"],[30,52,37,6],[31,0,38,5],[31,9,36,4],[31,15,38,11],[32,0,39,6,"console"],[32,18,39,14,"warn"],[32,22,39,6],[32,23,39,19],[32,60,39,6],[33,0,40,5],[34,0,41,3],[37,41,55,4,"base64ImageData"],[37,56],[37,58,56,4,"success"],[37,65],[37,67,57,4,"failure"],[37,74],[37,76,58,4],[38,0,59,4,"RCTImageStoreManager"],[38,29,59,25,"addImageFromBase64"],[38,47,59,4],[38,48,59,44,"base64ImageData"],[38,63,59,4],[38,65,59,61,"success"],[38,72,59,4],[38,74,59,70,"failure"],[38,81,59,4],[39,0,60,3],[42,38,74,4,"uri"],[42,41],[42,43,75,4,"success"],[42,50],[42,52,76,4,"failure"],[42,59],[42,61,77,4],[43,0,78,4,"RCTImageStoreManager"],[43,29,78,25,"getBase64ForTag"],[43,44,78,4],[43,45,78,41,"uri"],[43,48,78,4],[43,50,78,46,"success"],[43,57,78,4],[43,59,78,55,"failure"],[43,66,78,4],[44,0,79,3],[50,0,82,0,"module"],[50,9,82,7,"exports"],[50,16,82,0],[50,19,82,17,"ImageStore"],[50,29,82,0]]},"type":"js/module"}]}