{"dependencies":[{"name":"infoLog","isAsync":false},{"name":"fbjs/lib/invariant","isAsync":false}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, module, exports, _dependencyMap) {\n  'use strict';\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n  var infoLog = _$$_REQUIRE(_dependencyMap[0], 'infoLog');\n\n  var invariant = _$$_REQUIRE(_dependencyMap[1], 'fbjs/lib/invariant');\n\n  var DEBUG = false;\n\n  var TaskQueue = function () {\n    function TaskQueue(_ref) {\n      var onMoreTasks = _ref.onMoreTasks;\n\n      _classCallCheck(this, TaskQueue);\n\n      this._onMoreTasks = onMoreTasks;\n      this._queueStack = [{\n        tasks: [],\n        popable: false\n      }];\n    }\n\n    _createClass(TaskQueue, [{\n      key: \"enqueue\",\n      value: function enqueue(task) {\n        this._getCurrentQueue().push(task);\n      }\n    }, {\n      key: \"enqueueTasks\",\n      value: function enqueueTasks(tasks) {\n        var _this = this;\n\n        tasks.forEach(function (task) {\n          return _this.enqueue(task);\n        });\n      }\n    }, {\n      key: \"cancelTasks\",\n      value: function cancelTasks(tasksToCancel) {\n        this._queueStack = this._queueStack.map(function (queue) {\n          return _objectSpread({}, queue, {\n            tasks: queue.tasks.filter(function (task) {\n              return tasksToCancel.indexOf(task) === -1;\n            })\n          });\n        }).filter(function (queue, idx) {\n          return queue.tasks.length > 0 || idx === 0;\n        });\n      }\n    }, {\n      key: \"hasTasksToProcess\",\n      value: function hasTasksToProcess() {\n        return this._getCurrentQueue().length > 0;\n      }\n    }, {\n      key: \"processNext\",\n      value: function processNext() {\n        var queue = this._getCurrentQueue();\n\n        if (queue.length) {\n          var task = queue.shift();\n\n          try {\n            if (task.gen) {\n              DEBUG && infoLog('genPromise for task ' + task.name);\n\n              this._genPromise(task);\n            } else if (task.run) {\n              DEBUG && infoLog('run task ' + task.name);\n              task.run();\n            } else {\n              invariant(typeof task === 'function', 'Expected Function, SimpleTask, or PromiseTask, but got:\\n' + JSON.stringify(task, null, 2));\n              DEBUG && infoLog('run anonymous task');\n              task();\n            }\n          } catch (e) {\n            e.message = 'TaskQueue: Error with task ' + (task.name || '') + ': ' + e.message;\n            throw e;\n          }\n        }\n      }\n    }, {\n      key: \"_getCurrentQueue\",\n      value: function _getCurrentQueue() {\n        var stackIdx = this._queueStack.length - 1;\n        var queue = this._queueStack[stackIdx];\n\n        if (queue.popable && queue.tasks.length === 0 && this._queueStack.length > 1) {\n          this._queueStack.pop();\n\n          DEBUG && infoLog('popped queue: ', {\n            stackIdx: stackIdx,\n            queueStackSize: this._queueStack.length\n          });\n          return this._getCurrentQueue();\n        } else {\n          return queue.tasks;\n        }\n      }\n    }, {\n      key: \"_genPromise\",\n      value: function _genPromise(task) {\n        var _this2 = this;\n\n        this._queueStack.push({\n          tasks: [],\n          popable: false\n        });\n\n        var stackIdx = this._queueStack.length - 1;\n        DEBUG && infoLog('push new queue: ', {\n          stackIdx: stackIdx\n        });\n        DEBUG && infoLog('exec gen task ' + task.name);\n        task.gen().then(function () {\n          DEBUG && infoLog('onThen for gen task ' + task.name, {\n            stackIdx: stackIdx,\n            queueStackSize: _this2._queueStack.length\n          });\n          _this2._queueStack[stackIdx].popable = true;\n          _this2.hasTasksToProcess() && _this2._onMoreTasks();\n        }).catch(function (ex) {\n          ex.message = \"TaskQueue: Error resolving Promise in task \" + task.name + \": \" + ex.message;\n          throw ex;\n        }).done();\n      }\n    }]);\n\n    return TaskQueue;\n  }();\n\n  module.exports = TaskQueue;\n});","map":[[2,0,11,0],[14,0,13,0],[14,6,13,6,"infoLog"],[14,16,13,16,"require"],[14,47,13,24],[14,56,13,16],[14,57,13,0],[16,0,14,0],[16,6,14,6,"invariant"],[16,18,14,18,"require"],[16,49,14,26],[16,69,14,18],[16,70,14,0],[18,0,26,0],[18,6,26,6,"DEBUG"],[18,14,26,14],[18,19,26,0],[20,6,44,6,"TaskQueue"],[20,15],[21,0,52,2],[21,29,52,56],[22,0,52,56],[22,10,52,15,"onMoreTasks"],[22,21,52,56],[22,29,52,15,"onMoreTasks"],[22,40,52,56],[24,0,52,56],[26,0,53,4],[26,11,53,9,"_onMoreTasks"],[26,23,53,4],[26,26,53,24,"onMoreTasks"],[26,37,53,4],[27,0,54,4],[27,11,54,9,"_queueStack"],[27,22,54,4],[27,25,54,23],[27,26,54,24],[28,0,54,25,"tasks"],[28,15,54,32],[28,17,54,24],[29,0,54,36,"popable"],[29,17,54,45],[30,0,54,24],[30,7,54,23],[30,8,54,4],[31,0,55,3],[35,30,62,10,"task"],[35,34],[35,36,62,28],[36,0,63,4],[36,13,63,9,"_getCurrentQueue"],[36,29,63,4],[36,32,63,28,"push"],[36,36,63,4],[36,37,63,33,"task"],[36,41,63,4],[37,0,64,3],[40,35,66,15,"tasks"],[40,40],[40,42,66,41],[41,0,66,41],[43,0,67,4,"tasks"],[43,14,67,10,"forEach"],[43,21,67,4],[43,22,67,18],[44,0,67,18],[44,17,67,26],[44,23,67,31,"enqueue"],[44,30,67,26],[44,31,67,39,"task"],[44,35,67,26],[44,36,67,18],[45,0,67,18],[45,9,67,4],[46,0,68,3],[49,34,70,14,"tasksToCancel"],[49,47],[49,49,70,48],[50,0,72,4],[50,13,72,9,"_queueStack"],[50,24,72,4],[50,27,72,23],[50,32,72,28,"_queueStack"],[50,43,72,23],[50,44,73,7,"map"],[50,47,72,23],[50,48,73,11],[51,0,73,11],[51,35,74,11,"queue"],[51,40,73,11],[52,0,75,8,"tasks"],[52,19,75,15,"queue"],[52,25,75,21,"tasks"],[52,30,75,15],[52,31,75,27,"filter"],[52,37,75,15],[52,38,75,34],[53,0,75,34],[53,21,75,42,"tasksToCancel"],[53,35,75,56,"indexOf"],[53,42,75,42],[53,43,75,64,"task"],[53,47,75,42],[53,53,75,74],[53,54,75,75],[53,55,75,34],[54,0,75,34],[54,13,75,15],[55,0,73,11],[56,0,73,11],[56,9,72,23],[56,11,77,7,"filter"],[56,17,72,23],[56,18,77,14],[56,28,77,15,"queue"],[56,33,77,14],[56,35,77,22,"idx"],[56,38,77,14],[57,0,77,14],[57,17,77,30,"queue"],[57,23,77,36,"tasks"],[57,28,77,30],[57,29,77,42,"length"],[57,35,77,30],[57,38,77,51],[57,39,77,30],[57,43,77,56,"idx"],[57,51,77,64],[57,52,77,14],[58,0,77,14],[58,9,72,23],[58,10,72,4],[59,0,78,3],[62,42,90,31],[63,0,91,4],[63,15,91,11],[63,20,91,16,"_getCurrentQueue"],[63,36,91,11],[63,39,91,35,"length"],[63,45,91,11],[63,48,91,44],[63,49,91,4],[64,0,92,3],[67,36,97,22],[68,0,98,4],[68,12,98,10,"queue"],[68,20,98,18],[68,25,98,23,"_getCurrentQueue"],[68,41,98,18],[68,43,98,4],[70,0,99,4],[70,12,99,8,"queue"],[70,18,99,14,"length"],[70,24,99,4],[70,26,99,22],[71,0,100,6],[71,14,100,12,"task"],[71,21,100,19,"queue"],[71,27,100,25,"shift"],[71,32,100,19],[71,34,100,6],[73,0,101,6],[73,14,101,10],[74,0,102,8],[74,16,102,12,"task"],[74,21,102,17,"gen"],[74,24,102,8],[74,26,102,22],[75,0,103,10,"DEBUG"],[75,23,103,19,"infoLog"],[75,31,103,27],[75,56,103,52,"task"],[75,61,103,57,"name"],[75,65,103,19],[75,66,103,10],[77,0,104,10],[77,19,104,15,"_genPromise"],[77,30,104,10],[77,31,104,28,"task"],[77,35,104,10],[78,0,105,9],[78,13,102,8],[78,19,105,15],[78,23,105,19,"task"],[78,28,105,24,"run"],[78,31,105,15],[78,33,105,29],[79,0,106,10,"DEBUG"],[79,23,106,19,"infoLog"],[79,31,106,27],[79,45,106,41,"task"],[79,50,106,46,"name"],[79,54,106,19],[79,55,106,10],[80,0,107,10,"task"],[80,19,107,15,"run"],[80,22,107,10],[81,0,108,9],[81,13,105,15],[81,19,108,15],[82,0,109,10,"invariant"],[82,24,110,12],[82,31,110,19,"task"],[82,35,110,12],[82,40,110,28],[82,50,109,10],[82,52,111,12],[82,114,112,14,"JSON"],[82,119,112,19,"stringify"],[82,128,112,14],[82,129,112,29,"task"],[82,133,112,14],[82,135,112,35],[82,139,112,14],[82,141,112,41],[82,142,112,14],[82,143,109,10],[83,0,114,10,"DEBUG"],[83,23,114,19,"infoLog"],[83,31,114,27],[83,51,114,19],[83,52,114,10],[84,0,115,10,"task"],[85,0,116,9],[86,0,117,7],[86,11,101,6],[86,12,117,8],[86,19,117,15,"e"],[86,20,117,8],[86,22,117,18],[87,0,118,8,"e"],[87,14,118,10,"message"],[87,21,118,8],[87,24,119,10],[87,57,119,43,"task"],[87,62,119,48,"name"],[87,66,119,43],[87,70,119,56],[87,72,119,10],[87,76,119,62],[87,80,119,10],[87,83,119,69,"e"],[87,85,119,71,"message"],[87,92,118,8],[88,0,120,8],[88,18,120,14,"e"],[88,19,120,8],[89,0,121,7],[90,0,122,5],[91,0,123,3],[94,41,128,34],[95,0,129,4],[95,12,129,10,"stackIdx"],[95,23,129,21],[95,28,129,26,"_queueStack"],[95,39,129,21],[95,40,129,38,"length"],[95,46,129,21],[95,49,129,47],[95,50,129,4],[96,0,130,4],[96,12,130,10,"queue"],[96,20,130,18],[96,25,130,23,"_queueStack"],[96,36,130,18],[96,37,130,35,"stackIdx"],[96,45,130,18],[96,46,130,4],[98,0,131,4],[98,12,132,6,"queue"],[98,18,132,12,"popable"],[98,25,132,6],[98,29,133,6,"queue"],[98,35,133,12,"tasks"],[98,40,133,6],[98,41,133,18,"length"],[98,47,133,6],[98,52,133,29],[98,53,132,6],[98,57,134,6],[98,62,134,11,"_queueStack"],[98,73,134,6],[98,74,134,23,"length"],[98,80,134,6],[98,83,134,32],[98,84,131,4],[98,86,135,6],[99,0,136,6],[99,15,136,11,"_queueStack"],[99,26,136,6],[99,27,136,23,"pop"],[99,30,136,6],[101,0,137,6,"DEBUG"],[101,19,138,8,"infoLog"],[101,27,138,16],[101,43,138,8],[101,45,138,34],[102,0,139,10,"stackIdx"],[102,30,138,34],[103,0,140,10,"queueStackSize"],[103,28,140,26],[103,33,140,31,"_queueStack"],[103,44,140,26],[103,45,140,43,"length"],[104,0,138,34],[104,11,138,8],[104,12,137,6],[105,0,142,6],[105,17,142,13],[105,22,142,18,"_getCurrentQueue"],[105,38,142,13],[105,40,142,6],[106,0,143,5],[106,9,131,4],[106,15,143,11],[107,0,144,6],[107,17,144,13,"queue"],[107,23,144,19,"tasks"],[107,28,144,6],[108,0,145,5],[109,0,146,3],[112,34,148,14,"task"],[112,38],[112,40,148,33],[113,0,148,33],[115,0,153,4],[115,13,153,9,"_queueStack"],[115,24,153,4],[115,25,153,21,"push"],[115,29,153,4],[115,30,153,26],[116,0,153,27,"tasks"],[116,17,153,34],[116,19,153,26],[117,0,153,38,"popable"],[117,19,153,47],[118,0,153,26],[118,9,153,4],[120,0,154,4],[120,12,154,10,"stackIdx"],[120,23,154,21],[120,28,154,26,"_queueStack"],[120,39,154,21],[120,40,154,38,"length"],[120,46,154,21],[120,49,154,47],[120,50,154,4],[121,0,155,4,"DEBUG"],[121,17,155,13,"infoLog"],[121,25,155,21],[121,43,155,13],[121,45,155,41],[122,0,155,42,"stackIdx"],[123,0,155,41],[123,9,155,13],[123,10,155,4],[124,0,156,4,"DEBUG"],[124,17,156,13,"infoLog"],[124,25,156,21],[124,44,156,40,"task"],[124,49,156,45,"name"],[124,53,156,13],[124,54,156,4],[125,0,157,4,"task"],[125,13,158,7,"gen"],[125,16,157,4],[125,19,159,7,"then"],[125,23,157,4],[125,24,159,12],[125,36,159,18],[126,0,160,8,"DEBUG"],[126,19,161,10,"infoLog"],[126,27,161,18],[126,52,161,43,"task"],[126,57,161,48,"name"],[126,61,161,10],[126,63,161,54],[127,0,162,12,"stackIdx"],[127,30,161,54],[128,0,163,12,"queueStackSize"],[128,28,163,28],[128,35,163,33,"_queueStack"],[128,46,163,28],[128,47,163,45,"length"],[129,0,161,54],[129,11,161,10],[129,12,160,8],[130,0,165,8],[130,17,165,13,"_queueStack"],[130,28,165,8],[130,29,165,25,"stackIdx"],[130,37,165,8],[130,39,165,35,"popable"],[130,46,165,8],[130,49,165,45],[130,53,165,8],[131,0,166,8],[131,17,166,13,"hasTasksToProcess"],[131,34,166,8],[131,40,166,36],[131,47,166,41,"_onMoreTasks"],[131,59,166,36],[131,61,166,8],[132,0,167,7],[132,9,157,4],[132,11,168,7,"catch"],[132,16,157,4],[132,17,168,13],[132,31,168,19],[133,0,169,8,"ex"],[133,13,169,11,"message"],[133,20,169,8],[133,71,170,10,"task"],[133,76,170,15,"name"],[133,80,169,8],[133,90,171,13,"ex"],[133,93,171,16,"message"],[133,100,169,8],[134,0,172,8],[134,16,172,14,"ex"],[134,18,172,8],[135,0,173,7],[135,9,157,4],[135,11,174,7,"done"],[135,15,157,4],[136,0,175,3],[142,0,178,0,"module"],[142,9,178,7,"exports"],[142,16,178,0],[142,19,178,17,"TaskQueue"],[142,28,178,0]]},"type":"js/module"}]}